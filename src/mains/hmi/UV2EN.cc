// ==========================================================================
// Program UV2EN is a simple interpolation program which converts U,V
// coordinates for selected 2D features into corresponding UTM easting
// & northing geocoordinates.  Georegistration information extracted
// via GDALINFO for two aerial photos (killian_UTM_warped.tif and
// vball_GE_UTM_warped.tif) has been hardwired into this program.
// UV2EN queries the user to enter a text file containing 2D feature
// information generated by program VIDEO.  It exports a corresponding
// text file which contains feature eastings and northings.
// ==========================================================================
// Last updated on 8/5/11; 8/7/11
// ==========================================================================

#include <iostream>
#include <iomanip>
#include <string>
#include <vector>
#include "general/filefuncs.h"
#include "general/outputfuncs.h"
#include "general/stringfuncs.h"
#include "general/sysfuncs.h"
#include "math/threevector.h"

using std::cin;
using std::cout;
using std::endl;
using std::ios;
using std::ofstream;
using std::ostream;
using std::string;
using std::vector;

// ==========================================================================
int main(int argc, char *argv[])
// ==========================================================================
{
   std::set_new_handler(sysfunc::out_of_memory);
   const int PRECISION=15;
   cout.precision(PRECISION);

   char place_char;
   cout << "Enter 'k' for Killian or 'v' for Volleyball Court:" << endl;
   cin >> place_char;


// Read in (easting,northing) geographic coordinates for corners of
// aerial photos georegistered via GDALTRANSLATE:

/*

// gdalinfo results for killian_UTM_warped.tif:

Upper Left  (  327574.667, 4691866.198) ( 71d 5'37.63"W, 42d21'35.84"N)
Lower Left  (  327574.667, 4691567.833) ( 71d 5'37.31"W, 42d21'26.17"N)
Upper Right (  328002.219, 4691866.198) ( 71d 5'18.95"W, 42d21'36.18"N)
Lower Right (  328002.219, 4691567.833) ( 71d 5'18.63"W, 42d21'26.51"N)

// gdalinfo results for vball_GE_UTM_warped.tif:

Upper Left  (  313532.919, 4703041.262) ( 71d16'4.06"W, 42d27'26.21"N)
Lower Left  (  313532.919, 4702918.834) ( 71d16'3.92"W, 42d27'22.24"N)
Upper Right (  313660.377, 4703041.262) ( 71d15'58.48"W, 42d27'26.32"N)
Lower Right (  313660.377, 4702918.834) ( 71d15'58.34"W, 42d27'22.35"N)

*/

   double Umin=0;
   double Umax;
   double Vmin=0;
   double Vmax=1;

   double Emin,Emax,Nmin,Nmax;
   if (place_char=='k')
   {
      Emin=327574.667;
      Emax=328002.219;
      Nmin=4691567.833;
      Nmax=4691866.198;
      Umax=double(1903)/double(1328);
   }
   else if (place_char=='v')
   {
      Emin=313532.919;
      Emax=313660.377;
      Nmin=4702918.834;
      Nmax=4703041.262;
      Umax=double(1343)/double(1290);
   }
   else
   {
      cout << "Incorrect character entered...Try again!" << endl;
      exit(-1);
   }
   
   string features_filename;
   cout << "Enter full path for file containing U,V coords for 2D features:"
        << endl;
   cin >> features_filename;
   filefunc::ReadInfile(features_filename);

   string dirname=filefunc::getdirname(features_filename);
   string basename=filefunc::getbasename(features_filename);
   string prefix=stringfunc::prefix(basename);
   string suffix=stringfunc::suffix(basename);
   string EN_filename=dirname+prefix+"_EN."+suffix;
   cout << "EN_filename = " << EN_filename << endl;
   ofstream ENstream;
   ENstream.precision(12);
   
   filefunc::openfile(EN_filename,ENstream);
   ENstream << "# Time   Feature_ID   Passnumber   E       N     Score"
            << endl << endl;

   for (unsigned int i=0; i<filefunc::text_line.size(); i++)
   {
      vector<double> column_values=stringfunc::string_to_numbers(
         filefunc::text_line[i]);
      double U=column_values[3];
      double V=column_values[4];
      double E=Emin+(Emax-Emin)/(Umax-Umin)*(U-Umin);
      double N=Nmin+(Nmax-Nmin)/(Vmax-Vmin)*(V-Vmin);

//      cout << "i = " << i << " U = " << U << " V = " << V 
//           << " E = " << E << " N = " << N << endl;
      ENstream << 0 << "     "
               << i << "     "
               << 1 << "     "
               << E << "   "
               << N << "   "
	       << -1 << endl;
   } // loop over index i labeling text lines
   

   filefunc::closefile(EN_filename,ENstream);
  
   string banner="E,N UTM coords for 2D features written to "+
      EN_filename;
   outputfunc::write_big_banner(banner);
}
