// ========================================================================
// Program EXTRACT_D7FRAMES utilizes FFMPEG
// to decompose an input D7 .flv or .mkv file into individual JPG
// frames.  It expects to find input flash movies within
// /data/tech_challenge/D7_flash_movies.  After EXTRACT_D7FRAMES
// queries the user for the name of the input flash movie, it
// generates an output subdirectory within the input subdirectory with
// the same basename and _jpg_frames suffix.  JPG frames are written
// to this output subdir.
// ========================================================================
// Last updated on 8/14/10; 8/22/10; 8/28/10
// ========================================================================

#include <iostream>
#include <string>

#include "general/filefuncs.h"
#include "general/outputfuncs.h"
#include "general/stringfuncs.h"
#include "general/sysfuncs.h"

using std::cin;
using std::cout;
using std::endl;
using std::ofstream;
using std::string;

// ==========================================================================
int main( int argc, char** argv )
{
   sysfunc::clearscreen();

   string D7_flash_movies_subdir="/data/tech_challenge/D7_flash_movies/";
   cout << "Program EXTRACT_D7FRAMES expects to find .flv and/or .mkv movies"
        << endl;
   cout << "generated by a D7 panoramic video camera sitting within " << endl;
   cout << D7_flash_movies_subdir << endl << endl;

   string D7_flv_filename;
   cout << "Enter input D7 panorama camera's .flv or .mkv filename:" << endl
        << endl;
   cin >> D7_flv_filename;

   string D7_filename_prefix=stringfunc::prefix(D7_flv_filename);
   D7_flv_filename=D7_flash_movies_subdir+D7_flv_filename;

   cout << endl;
   if (filefunc::fileexist(D7_flv_filename))
   {
      cout << "Input D7 panoramic video camera's flash movie found" << endl;
   }
   else
   {
      cout << "No D7 panoramic video camera flash movie found" << endl;
      cout << "within "+D7_flv_filename << endl << endl;
      cout << "Program EXTRACT_D7FRAMES is now exiting..." << endl << endl;
      exit(-1);
   }
   
   string output_subdir=D7_flash_movies_subdir+D7_filename_prefix+
	"_jpg_frames/";
   cout << "Program EXTRACT_D7FRAMES will convert flash movies into a"
        << endl;
   cout << "sequence of JPEG images which will be written to "+output_subdir 
        << endl;

   outputfunc::enter_continue_char();
   
   filefunc::dircreate(output_subdir);
   string unix_cmd=
      "ffmpeg -i "+D7_flv_filename+
      " -sameq -r 2 "+output_subdir+"image-%05d.jpg";
//      " -r 5 "+output_subdir+"image-%05d.png";

   cout << "unix_cmd = " << unix_cmd << endl;
   sysfunc::unix_command(unix_cmd);
}


//   ./ffmpeg -i in.avi -vf "crop=0:0:0:240" out.avi

// -sameq

// -qscale 1
