 // ========================================================================
// Program JUSTCROP_IMAGES utilizes ImageMagick's conversion program to
// crop PNG, JPEG, RGB, etc images down to specified, uniform widths
// and heights measured in pixels.  This variant of CROP_IMAGES
// performs cropping to all JPG/PNG files within a specified
// subdirectory independent of their individual file names.

// 				justcrop_images

// ========================================================================
// Last updated on 1/19/10; 2/28/10; 1/23/11
// ========================================================================

#include <iostream>
#include <string>
#include <vector>
#include "general/filefuncs.h"
#include "image/imagefuncs.h"
#include "general/outputfuncs.h"
#include "general/stringfuncs.h"

using std::cin;
using std::cout;
using std::endl;
using std::string;
using std::vector;

// ==========================================================================
int main( int argc, char** argv )
{
   string imagedir="./";
   cout << "Enter subdir containing all images:"<< endl;
   cin >> imagedir;

// On touchy2, we determined xoffset,yoffset and xstop,ystop values
// using GIMP.  Just read off cursor's position from GIMP's lower left
// corner:

// Important note:  As of April 2009, we strongly suspect based upon
// several rounds of trial and error that the width and height of the
// cropped image must be perfect multiples of 4 in order for any AVI
// movie generated by MKMPEG4 to successfully play inside of
// powerpoint!

// Offset location = image's upper left pixel:

   int xoffset=158;	
   int yoffset=71;
   int xstop=1083;
   int ystop=801;

/*
   const int xoffset=333;   // Values appropriate for Jan 2010 RASR 
   const int yoffset=65;   // gstreets sequence collected with DVI2USB grabber

   int xstop=1746;    // Values appropriate for Mar 2010 Gmap sequence 
   int ystop=1025;     // clip collected with DVI2USB frame grabber
*/

   int width=xstop-xoffset;
   int height=ystop-yoffset;

   vector<string> allowed_suffixes;
   allowed_suffixes.push_back("jpg");
   allowed_suffixes.push_back("jpeg");
   allowed_suffixes.push_back("JPG");
   allowed_suffixes.push_back("png");
   allowed_suffixes.push_back("PNG");
   
   vector<string> image_filenames=
      filefunc::files_in_subdir_matching_specified_suffixes(
         allowed_suffixes,imagedir);

   for (unsigned int i=0; i<image_filenames.size(); i++)
   {
      string filename=image_filenames[i];
      cout << filename << endl;
      cout << "Cropping file = " << filename << endl;
      imagefunc::crop_image(filename,width,height,xoffset,yoffset);
   }

}
