// ========================================================================
// Program GRAPHJSON reads in the graph edge list generated by Noah
// Snavely's bundler program which establishes links between two
// photos if they share SIFT features in common.  GRAPHJSON writes out
// a JSON file containing node and edge information which can be
// parsed by Michael Yee's GraphExplorer tool.  Michael's tool needs
// to be running BEFORE this program is executed so that it can
// receive ActiveMQ messages generated by GRAPHJSON.
// ========================================================================
// Last updated on 1/9/10; 2/3/10; 2/5/10
// ========================================================================

#include <iostream>
#include <string>
#include <vector>
#include "general/filefuncs.h"
#include "messenger/Messenger.h"
#include "general/outputfuncs.h"
#include "passes/PassesGroup.h"
#include "video/photogroup.h"
#include "general/sysfuncs.h"
#include "osg/osgWindow/ViewerManager.h"

// ==========================================================================
int main( int argc, char** argv )
{
   using std::cin;
   using std::cout;
   using std::endl;
   using std::flush;
   using std::string;
   using std::vector;
   std::set_new_handler(sysfunc::out_of_memory);

// Use an ArgumentParser object to manage the program arguments:

   osg::ArgumentParser arguments(&argc,argv);
   PassesGroup passes_group(&arguments);

   string bundle_filename=passes_group.get_bundle_filename();
   cout << " bundle_filename = " << bundle_filename << endl;
   string bundler_IO_subdir=filefunc::getdirname(bundle_filename);
   cout << "bundler_IO_subdir = " << bundler_IO_subdir << endl;
//   cout << "basename(bundler_IO_subdir) = "
//        << filefunc::getbasename(bundler_IO_subdir) << endl;

// Instantiate separate messengers for each Decorations group which
// needs to receive mail:

   string broker_URL="tcp://127.0.0.1:61616";
   cout << "ActiveMQ broker_URL = " << broker_URL << endl;
   string message_sender_ID="GRAPHJSON";

// Instantiate urban network messengers for communication with Michael
// Yee's social network tool:

   string photo_network_message_queue_channel_name="photo_network";
//   bool include_sender_and_timestamp_info_flag=false;
   bool include_sender_and_timestamp_info_flag=true;
   Messenger photo_network_messenger( 
      broker_URL,photo_network_message_queue_channel_name,message_sender_ID,
      include_sender_and_timestamp_info_flag);

// Instantiate photogroup to hold Bundler photos:

   photogroup* photogroup_ptr=new photogroup;
   photogroup_ptr->set_Messenger_ptr(&photo_network_messenger);

   string basename=filefunc::getbasename(bundler_IO_subdir);
   string JSON_URL="http://127.0.0.1:8080/photo/graphs/"+
      basename+"graph.json";
   cout << "JSON_URL = " << JSON_URL << endl;
   photogroup_ptr->issue_build_graph_message(JSON_URL);
}
