// ==========================================================================
// Program MAP_VSFM_IMAGENAMES reads in "NVM" output generated by VSFM.
// It pulls out original jpeg image filenames from the .nvm file.
// MAP_VSFM_IMAGENAMES then exports VSFM names vs original jpeg image
// filenames to a text file within bundler_IO_subdir.  It also exports
// a list_tmp.txt file to bundler_IO_subdir.
// ==========================================================================
// Last updated on 5/18/12; 5/29/12; 8/20/12
// ==========================================================================

#include <iostream>
#include <string>
#include <vector>

#include "general/filefuncs.h"
#include "general/outputfuncs.h"
#include "general/stringfuncs.h"
#include "general/sysfuncs.h"

using std::cin;
using std::cout;
using std::endl;
using std::flush;
using std::ofstream;
using std::string;
using std::vector;

// ==========================================================================
int main(int argc, char *argv[])
// ==========================================================================
{
   std::set_new_handler(sysfunc::out_of_memory);

   string bundler_IO_subdir="./bundler/Pushcart/";
//   string nvm_filename=bundler_IO_subdir+"firstTry.nvm";
//   string nvm_filename=bundler_IO_subdir+"secondTry.nvm";
   string nvm_filename=bundler_IO_subdir+"reconstructed.nvm";
   filefunc::ReadInfile(nvm_filename);
   cout << "filefunc::text_line.size() = " << filefunc::text_line.size()
        << endl;

/*
// Generate reduced file containing just first 3K lines from firstTry.nvm:

   ofstream outstream;
   string output_filename=bundler_IO_subdir+"reduced.nvm";
   filefunc::openfile(output_filename,outstream);
   for (int i=0; i<3000; i++)
   {
      outstream << filefunc::text_line[i] << endl;
   }
   filefunc::closefile(output_filename,outstream);

   exit(-1);
*/

   ofstream outstream;
   ofstream liststream;
   string output_filename=bundler_IO_subdir+"vsfm_vs_image_names.txt";
   string list_filename=bundler_IO_subdir+"list_tmp.txt";
   filefunc::openfile(output_filename,outstream);
   filefunc::openfile(list_filename,liststream);
   for (int i=0; i<filefunc::text_line.size(); i++)
   {
      vector<string> substrings=stringfunc::decompose_string_into_substrings(
         filefunc::text_line[i]);
      string vsfm_filename=stringfunc::integer_to_string(i,8)+".jpg";
      outstream << vsfm_filename << "  " << substrings[0] << endl;
      liststream << "images/"+vsfm_filename << endl;
   }
   filefunc::closefile(output_filename,outstream);
   filefunc::closefile(list_filename,liststream);

   string banner="Exported "+output_filename;
   outputfunc::write_big_banner(banner);
}
