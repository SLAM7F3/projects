============================================================================
Summer 2013 GEO demo notes
============================================================================
Last updated on 8/15/13; 8/26/13; 1/8/14
============================================================================

This README is located in
~/programs/c++/svn/projects/src/mains/geo/README.summer2013_demo

============================================================================
SIMPLE PROCEDURE:
============================================================================

*.  Chant 

	./geo_pass_scripts

to select some particular GEO pass to process.

*.  Chant

	run_GEO_demo

to fully process the selected GEO pass.


============================================================================
INDIVIDUAL STEPS WITHIN GEO DEMO PIPELINE
============================================================================

Preliminaries
-------------

*.  Unpack 20120105_1402_minimal.tgz within bundler/GEO/ 

  - Uncropped, raw images' jpeg files are placed into a new raw_images/
    subdirectory of BUNDLER_IO_SUBDIR=bundler/GEO/20120105_1402_demo.

  - Soft link created from BUNDLER_IO_SUBDIR/images/ to
    BUNDLER_IO_SUBDIR/raw_images/ .  

  - Relevant part of Ross Anderson's metadata file exists in
    BUNDLER_IO_SUBDIR/camera_metadata.txt

*. From within mains/geo, execute manually generated script

		mains/geo/run_generate_peter_inputs

which calls mains/photosynth/generate_peter_inputs with
bundler subdir passed as command line argument.

FLIR imagery and metadata programs
----------------------------------

*.  From within mains/geo, execute the link to the auto-generated
run_visualize_flir_metadata:

 		mains/geo/run_visualize_FLIR_metadata

Program mains/aerosynth/VISUALIZE_FLIR_METADATA is a variant of
PARSE_FLIR_METADATA.  It reads in the metadata ascii file generated by Ross
Anderson's program which ran on the Mac-Mini along with the FLIR for Twin
Otter flights.  It extracts aircraft GPS, aircraft orientation and FLIR
pointing information from this metadata file. This program generates a TDP
file containing the aircraft's GPS track, line-of-sight rays from the
aircraft towards the ground, and Uhat-Vhat direction vectors.
VISUALIZE_FLIR_METADATA also outputs package files containing low-defn
frame filenames and their hardware derived camera parameters.  Finally, it
exports an executable script for program SEPARATED_PACKAGES.

Elapsed time = 3.5 secs =   0.06 minutes =   0.001 hours 


*.  From within mains/geo, execute the link to the auto-generated
run_crop_analog_frames script:

		mains/geo/run_crop_analog_frames

Program mains/geo/CROP_ANALOG_FRAMES reads in a set of package files
generated by program VISUALIZE_FLIR_FRAMES. It extracts their
low-definition JPG frames and crops each one so that it contains (mostly)
FLIR pixel content without screen metadata.  The cropped low-defn frames
are exported to bundler_IO_subdir/cropped_lowdefn_frames/.  A new soft link
is generated from bundler_IO_subdir/cropped_lowdefn_frames/ to
bundler_IO_subdir/images.

CROP_ANALOG_FRAMES also generates list_tmp.txt and trivial bundle.out files
corresponding to the cropped low-defn video frames.

Elapsed time = 10.5 secs =   0.17 minutes =   0.003 hours 

*.  Execute the auto-generated run_separated_packages:

		mains/geo/run_separated_packages

Program mains/geo/SEPARATED_PACKAGES imports an entire set of video frames
for some flight.  It then queries the user to enter the maximum permissible
angular separation between subsampled frames which will be bundle adjusted.
On 5/7/13, we empirically found that setting this angular threshold to 5
degs yielded quite good reconstruction results for GEO pass 20120105_1402!
SEPARATED_PACKAGES exports the angularly separated package filenames to an
output text file which can serve as input to programs RESTRICTED_ASIFT and
TRIANGULATE.  It also outputs the image filenames corresponding to those
packages to bundler_IO_subdir/list_tmp.txt.

Elapsed time = 0.4 secs =   0.01 minutes =   0.000 hours 


Feature matching and bundle adjustment programs
-----------------------------------------------

*.  Execute the auto-generated run_restricted_asift:

 ~/programs/c++/svn/projects/src/mains/geo/run_restricted_asift

Program mains/geo/RESTRICTED_ASIFT is a variant of program ASIFTVID.  It
performs expensive feature matching only between pairs of aerial video
frames whose hardware estimates for camera orientations indicate that the
separation angle between image planes is less than some threshold value.

As of 7/13/13, Elapsed time = 1659.2 secs = 27.65 minutes = 0.461 hours
(serial)

*.  Execute the auto-generated run_triangulate:

 ~/programs/c++/svn/projects/src/mains/geo/run_triangulate

Program mains/geo/TRIANGULATE imports SIFT/ASIFT feature tracks generated
by program RESTRICTED_ASIFTVID.  It also takes in package files for the n
video frames processed by ASIFTVID which contain hardware-based camera
parameters.  TRIANGULATE backprojects each 2D feature into a 3D ray.  It
then computes multi-line intersection points for each feature track.
Triangulated 3D points are exported to a features_3D.txt file, and
correlated 2D/3D feature information is written photograph_features.html .

TRIANGULATE exports hardware-based camera parameters and
triangulated ground points to bundle_raw.out.  BUNDLER is
subsequently called to perform (re)bundle adjustment with camera
focal parameters held fixed at their previously calibrated values.
Bundle-adjusted camera positions are written to an output text
file.

As of 7/13/13, Elapsed time = 139.8 secs =   2.33 minutes =   0.039 hours 
As of 7/3/13, Elapsed time = 200.3 secs =   3.34 minutes =   0.056 hours 

*.  Execute multiple scripts contained within 

	mains/geo/view_init_reconstruction

This script first reruns generate_peter_inputs on bundler output.  It then
executes run_photo_sizes, run_thumbnails, run_mini_convert,
run_bundler_photos, run_write_viewbundler_script and run_viewbundler as
described in mains/photosynth/README.view_bundler_output.

*.  Execute the auto-generated run_gpsfit:

 ~/programs/c++/svn/projects/src/mains/geo/run_gpsfit

Program mains/geo/GPSFIT reads in reconstructed camera posns generated by
program PARSE_SSBA in UTM coords.  It also reads in a text file containing
hardware GPS measurements for the camera generated by program TRIANGULATE.
If the two input files are NOT in precise correspondence, GPSFIT generates
a new version of the GPS measurements file whose entries do match those in
the reconstructed camera posns file.

GPSFIT reports the average residual between the transformed and measured
paths.  This program also exports the transformed path as a TDP and OSGA
file.

*. Re-execute multiple scripts contained within

	mains/geo/view_geoaligned_reconstruction

This script reruns run_mini_convert, run_bundler_photos and
run_video_propagator after georegistered version of peter_inputs.pkg is
generated by program GPSFIT.


*.  Execute the auto-generated run_video_propagator

 ~/programs/c++/svn/projects/src/mains/geo/run_video_propagator

Program VIDEO_PROPAGATOR is a variant of mains/photosynth/PROPAGATOR.
It pops open a 3D window displaying a bundle-adjusted point cloud aerial
OBSFRUSTA. It also opens a 2D window in which the video frame for the most
currently selected OBSFRUSTUM is displayed.  When the 2D window works in
RUN_MOVIE_MODE, all video frames may easily be viewed by pressing the
left/right arrow keys.

A user may mark some imageplane point of interest within the 2D window
after entering into INSERT_FEATURE_MODE.  A 3D ray is then backprojected
from the current OBSFRUSTUM down towards ground-level.  Feature 0 appears
in all other video frames within the lower left corner of each image plane.
Video tiepoints may be manually established by dragging the zeroth feature
crosshairs from the lower left corner to an appropriate image plane
location in MANIPULATE_FEATURE_MODE.  Within the 3D window, a purple ray
moves as the 2D feature is dragged.

Once 2 or more tiepoints have been established, the user may press 'm'
within the 2D window ['d' within the 3D window] provided it operates in
MANIPULATE_FUSED_DATA_MODE.  A set of 3D crosshairs then appears at the
best-fit intersection of the backprojected rays.


============================================================================
"2nd" flight facility rooftop target UTM coordinates from GE:

Easting =   312031
Northing = 4703905

Large hanger south-east corner UTM coordinates from GE:

Easting = 311743
Northing = 4703595


Grace Bible Church of Dracut steeple (east of Lowell)

Easting = 312727
Northing = 4725697
