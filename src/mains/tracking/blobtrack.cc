// ==========================================================================
// Program BLOBTRACK reads in a raw text track file generated by
// OPENCV program blobtrack.  It parse the raw text file and generates
// (U,V) tracks as functions of image time and track ID.
// ==========================================================================
// Last updated on 10/23/07
// ==========================================================================

#include <iostream>
#include <string>
#include <vector>
#include "general/filefuncs.h"
#include "general/sysfuncs.h"
#include "track/track.h"

// ==========================================================================
int main (int argc, char* argv[])
{
   using std::cin;
   using std::cout;
   using std::endl;
   using std::string;
   using std::vector;

   string filename="blob_tracks.txt";
   filefunc::ReadInfile(filename);

   const double xmin=0;
   const double xmax=720;
   const double ymin=0;
   const double ymax=1280;

   int track_counter=0;
   vector<int> imagenumber;
   vector<track> tracks;
   for (int i=0; i<filefunc::text_line.size(); i++)
   {
      vector<string> substrings=stringfunc::decompose_string_into_substrings(
         filefunc::text_line[i]);
      imagenumber.push_back(stringfunc::string_to_integer(substrings[0]));
      
      track curr_track(track_counter++);
      int n_points=(substrings.size()-1)/4;
      for (int n=0; n<n_points; n++)
      {
         double t=imagenumber.back()+n;
         double x=stringfunc::string_to_number(substrings[n*4+0+1]);
         double y=stringfunc::string_to_number(substrings[n*4+1+1]);

         double u=(ymax-y)/(ymax-ymin) * (ymax-ymin)/(xmax-xmin);
         double v=(x-xmin)/(xmax-xmin);
//         curr_track.set_XYZ_coords(t,threevector(x,y));
         curr_track.set_XYZ_coords(t,threevector(u,v));
      } // loop over index n labeling points along track
//      cout << "i = " << i << " curr_track = " << curr_track << endl;
      tracks.push_back(curr_track);
   } // loop over index i labeling text lines corresponding to tracks

   cout << "n_tracks = " << tracks.size() << endl;

   for (int n=0; n<500; n++)
   {
      double curr_t(n);
      cout << "t = " << curr_t << endl;
      for (int i=0; i<tracks.size(); i++)
      {
         track curr_track=tracks[i];
         threevector curr_posn;
         if (curr_track.get_XYZ_coords(curr_t,curr_posn))
         {
            cout << "track ID = " << curr_track.get_ID()
                 << " u = " << curr_posn.get(0)
                 << " v = " << curr_posn.get(1) << "  ";
         }
      } // loop over index i labeling track number
      cout << endl;
   } // loop over index n labeling image number
   

}
