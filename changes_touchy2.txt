============================================================================
White disk TOUCHY2 code changes made on Mon, Feb 14, 2011:

*.  


============================================================================
White disk TOUCHY2 code changes made on Weds,July 14, 2010:

*.   In QTVIEWBUNDLER, set mask_nonselected_OSGsubPATs_flag to true.  3D
Frustum picking is significantly faster.

============================================================================
White disk TOUCHY2 code changes made on Mon, July 12, 2010:

*.  Added skymap_lon[lat]_lo[hi] member vars to LOSServer class along with
get methods.

============================================================================
White disk TOUCHY2 code changes made on Tues, Jun 29, 2010:

*.  Commented out Ubuntu 10.4 code in WebServer::extract_KeyValue_pairs()
for Ubuntu 8.04 machines.

*.  mains/tech_challenge/DECOMPOSE_VIDEO uses ffmpeg to split input video
clips into individual output frames.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Jun 24, 2010:

*.  Tested out image server/client passing of JPEG photos.

============================================================================
White disk TOUCHY2 code changes made on Tues, Jun 22, 2010:

*.  Eliminated libwebservices from config.pro.

..................

*.  Added insert_world_annotation() to AnnotationServer class.


============================================================================
White disk TOUCHY2 code changes made on Mon, Jun 21, 2010:

*.  In BUNDLER_PHOTOS, frustum_sidelength now has a min value of 10 meters
rather than 1 meter.

..........................

*.  databasefunc::insert_world_annotation() takes in metadata for a single
annotation which is intended to be tied to a 3D world point.  It inserts
this metadata into *gis_database_ptr.

============================================================================
White disk TOUCHY2 code changes made on Fri, Jun 18, 2010:

*. track::broadcast_statevector() now can accept an ID_label input string.
If non-empty, the input string will be broadcast to the blue force tracker
rather than a default integer ID.

*.  Now broadcast Camera and Man ID labels for SIGMA demo to appear in
Google Maps display.

...........................

*.  INDIVIDUAL_PHOTO and VIEWBUNDLER can now broadcast reconstructed
geocoordinates to arbitrary IP addresses specified via ActiveMQ flag in
run_individual_photo and run_individual_viewbundler.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Jun 17, 2010:

*.  OBSFRUSTAGROUP::broadcast_MODEL_geoposn() transmits an activeMQ message
containing the geoposition of a reconstructed human based upon its face
extraction from a 2D photo.

..........

*.  Moved broadcast_MODEL_geoposn() out OBSFRUSTAGROUP class into MODEL.

============================================================================
White disk TOUCHY2 code changes made on Tues, Jun 15, 2010:

*. mains/afghanistan/CROSSENTROPY is a playground for learning about the
Cross Entropy Method for numerically solving difficult optimization
problems.  This example comes from
http://en.wikipedia.org/wiki/Cross-entropy_method.

============================================================================
White disk TOUCHY2 code changes made on Fri, Jun 11, 2010:

*. mains/photosynth/PHOTO_INFO is a testing grounds for querying the
data_network database for MIT2317 photo metadata.  It generates 3 JSON
files: photo_geoposns.JSON lists lon-lat coords for each of the 2317 MIT
photos; photo_metadata.JSON lists photo metadata for some specified input
photo; photo_neighbors.JSON lists the node IDs for all sibling neighbors of
some specified node.

*.  Added get_node_geoposns(), get_node_metadata() and get_node_neighbors()
to PhotoServer class.  Methods return JSON strings built from database
output.

*.  Program GPSDEVICE now records information to a time-stamped archive
file within /data/tech_challenge/GPS_tracks.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Jun 10, 2010:

*.  videofunc::retrieve_photo_neighbors_from_database() performs 2 postgres
queries from the "link" table within the "data_network" database.  The
first is for target_IDs after setting the source_ID equal to the input
photo_ID.  The second is for source_IDs after setting the target_ID equal
to the input photo_ID.  This method returns all neighbor IDs within an
output STL vector.

============================================================================
White disk TOUCHY2 code changes made on Weds, Jun 9, 2010:

*.  Added distance_scale and delta_s parameters to
AlirtGrid::initialize_ALIRT_grid() & AlirtGridsGroup::initialize_grid()
member funcs.  User can now override default grid spacing and units.

*.  Added packages subdir to mains/rasr with roboladar.pkg tuned for RASR
ladar display via VIEWPOINTS.

*.  Made mains/rasr/ROBOLADAR more friendly for RASR user purposes.

................

*.  Added mains/rasr/run_raw_ladar_to_osga and run_view_osga to repository.

................

*.  mains/photosynth/WATCH_FOR_NEW_PHOTO constantly monitors watch_subdir
for new files.  Whenever a new image file is dropped into this folder, this
program regenerates two executable scripts which depend upon the file's
name.  We wrote this little utility program specifically for the summer
2010 SIGMA demo.

...............

*.  Added 3D_man, children and n+1_photo PNG files to webapps/photo/icons
subdir.

*.  Added mains/photosynth/demo to repository.  Moved WATCH_FOR_NEW_PHOTO
into this new subdir.

============================================================================
White disk TOUCHY2 code changes made on Tues, Jun 8, 2010:

*.  For SIGMA demo purposes, we prefer to see full rather than thumbnail
version of n+1st photo in Michael's GraphExplorer.  So simply copy former
onto latter in appropriate tomcat subdir in GRAPH_NEW_NODE.

--------------

*.  videofunc::retrieve_photo_neighbors_from_database() performs 2 postgres
queries from the "link" table within the "data_network" database.  The
first is for target_IDs after setting the source_ID equal to the input
photo_ID.  The second is for source_IDs after setting the target_ID equal
to the input photo_ID.  This method returns all neighbor IDs within an
output STL vector.

*.  mains/photosynth/WATCH_FOR_NEW_PHOTO constantly monitors watch_subdir
for new files.  Whenever a new image file is dropped into this folder, this
program regenerates two executable scripts which depend upon the file's
name.  We wrote this little utility program specifically for the summer
2010 SIGMA demo.

============================================================================
White disk TOUCHY2 code changes made on Mon, Jun 7, 2010:

*.  videofunc::retrieve_photo_metadata_from_database() takes in
*postgis_database_ptr which is assumed to contain a "data_network" database
with a "photo" table.  It extracts all rows and columns from this database
table.  After sorting the extracted rows according to photo_ID, this
method fills output STL vectors with photo metadata.

*.  videofunc::generate_geolocation_JSON_string() takes in photo IDs along
with reconstructed lon-lat geocoords extracted to STL vectors via a postgis
database call.  It generates a JSON string containing this geocoordinate
information in the form of key-value pairs.
      
*. videofunc::generate_metadata_JSON_string() takes in some requested photo
ID along with photo metadata extracted to several STL vectors via a postgis
database call.  It generates a JSON string containing metadata for the
requested photo in the form of key-value pairs.

*.  NEW_SIFT_MATCHES now queries user to enter min_n_matches.  It exports
to edgelist_n+1.dat only old photos which have at least this minimal number
of matches with the new photo.

============================================================================
White disk TOUCHY2 code changes made on Fri, May 28, 2010:

*.  In mains/photosynth/individual_photo.cc, we now incorporate Boston TEC
2004 point cloud into SIGMA demo display.

*.  Overloaded bundlerfunc::scale_translate_rotate_bundler_XYZ() to take in 
global_R rotation rather than global_az, global_el, global_roll.

*.  BUNDLER_CONVERT now exports Photo IDs as a function of raw
reconstructed XYZ point ID to output text file.

*.  Added mains/photosynth/GENERATE_PHOTO_HIERARCHY, NEW_SIFT_MATCHES and
GRAPH_NEW_NODE to repository.

============================================================================
White disk TOUCHY2 code changes made on Thurs, May 27, 2010:

*.  Updated mains/rasr/GPSDEVICE to emit lon,lat rather than
easting,northing geocoords.

*.  Added webapps/bluetracker/icons to repository along with
bluetracker_icon.png

*.  Added webapps/bluetracker/scripts to repository with
firefox_plus_bluetracker.sh and BLUETRACKER.desktop

...................

*.  mains/photosynth/EXTRACT_FACE reads in file "face_bbox.dat" generated
by Karl Ni's face finding algorithms.  It converts the bounding box's
coordinates in Karl's pixel conventions to our UV image plane coordinates.
EXTRACT_FACE then outputs the face bounding box info to
bundler_IO_subdir/face_bbox_uv.dat.

============================================================================
White disk TOUCHY2 code changes made on Weds, May 26, 2010:

*.  As of 10:05 am, threevector(x,y,z) are being constructed in junk
program with no main content and with inclusion of ViewerManager.h.  After
several hours of hunting, we found that at least some of these mysterious
constructions are due to global constant vectors x_hat, y_hat, z_hat and
Zero_hat!

*.  Eliminated include of CustomManipulator.h in GraphicalPickHandler.h

*.  Eliminated forward declaration of threevector in Network.h since we
must include threevector.h.  Eliminated threevector.h inclusion into
Network.cc.  

.........................

*.  VIEWPOINTS and VIEWCITIES no longer emit disturbing genarray size
error messages on touchy2.

.........................

*.  In GPS_datastream::read_curr_data(), now return if curr_data.size() <
1.

*.  In stringfunc::decompose_string_into_substrings(), now check if index k
ever exceeds inputstring.length(0-1.  If so, terminate while loop search
for separators.


============================================================================
White disk TOUCHY2 code changes made on Tues, May 25, 2010:

*.  In stringfunc::decompose_string_into_substrings(), must eliminate cluge
of adding extra white space to input string in order for this method to work
OK under gcc 4.4.3.

*.  In Tensor::docopy(), added 

 Indices[r]=m.get_Indices(r);

*.  In Genarray constructor, added explicit checks on positivity for
mdim,ndim.

*.  Copy constructors for twovector and threevector classes now call
genvector(2) and genvector(3) rather than genvector(v) followed by
docopy(v).  Explicitly transfer contents of input v into new two/three
vectors.

*.  In instantaneous_obs::docopy(), call clear for STL maps rather than
deleting and reinstantiating them.  

============================================================================
White disk TOUCHY2 code changes made on Fri, May 21, 2010:

*.  GENERATE_INDIVIDUAL_PHOTO_INPUTS expects to find "bundle.out" and
"list_tmp.txt" sitting within $bundler_subdir= ./bundler/individual_photo/.
It generates an images_list.dat file containing renamed versions of the
input images.  This program then creates a packages subdir of
$bundler_subdir and generates a peter_inputs.pkg file containing names for
various input parameters.  Finally, GENERATE_INDIVIDUAL_PHOTO_INPUTS writes
out executable scripts for the remaining programs which must be run in
order to visualize the n+1st photo as a 3D frustum within the MIT2317
bundler point cloud.

*.  INDIVIDUAL_PHOTO reads in a bundler file generated by Zach and Karl for
an n+1st reconstructed photo.  It converts between Noah's coordinate system
and geocoordinates.  A package file "photo_new.pkg" containing
reconstructed parameters needed to visualize the 3D frustum for new camera
is written out.

============================================================================
White disk TOUCHY2 code changes made on Thurs, May 20, 2010:

*.  Can now see thumbnails within GraphExplorer for children, parents and
grandparent graphs.

*.  Created new graphs/jsonfuncs namespace containing various JSON file
export methods.

============================================================================
White disk TOUCHY2 code changes made on Weds, May 19, 2010:

*.  Created new projects/config file and moved all Makefiles into this
subdir.  

*.  Copied common INCLUDE and LIBS statements from all active .pro files
into config/common.pro.  Now include this common.pro into all active .pro
files. 

*.  With lots of help from Dave Ceddia, changed PREFIX in all .pro files to
incorporate $(HOME) variable.  .pro files should now work independent of
user account (cho, los, sigma).

.................

*.  Moved thumbnail generation methods out of photograph class into
videofunc.  Tried to streamline thumbnail generation as much as possible.

.................

*.  In graphfunc::strengthen_clusters_in_layout(), we now ignore any
cluster which contains fewer nodes than min_n_nodes_in_cluster.

*.  MyViwerEventHandler::purge_flash_movies() deletes all movies within
tomcat_subdir/movies/.

*.  QTLOS now purges previously generated flash movies at start of each
session rather than at start of each new movie generation.

..................

*.  Starting to transfer JSON export methods from graph class into
videofuncs namespace.

============================================================================
White disk TOUCHY2 code changes made on Tues, May 18, 2010:

*.  Generalized mains/rasr/gps_simulator to add 2nd simulated GPS track.
Output appears as 2 moving blue dots in Jennifer's blue force tracker.

*.  Added libMagick++ to Makefile library list.

*.  Moved generate_thumbnails() out of texture_rectangle class into
videofuncs namespace.  Call libMagick++ library routines rather than
executing Unix system call.

*.  Added several libraries to most .pro files.

*.  Moved AVI_movie_generation_flag out of LOSMODELSGROUP class into
AnimationController along with set/get methods.

.............

*.  Trying to eliminate movie state display within LOST 3D window

============================================================================
White disk TOUCHY2 code changes made on Mon, May 17, 2010:

*.  Added clock member to MyViewerEventHandler class.

*.  We experienced bad caching problems for both FLV and AVI movies
generated with names which repeat with each LOST session.  So Jennifer
Drexler recommended that we assign unique time stamps to every output FLV
and AVI file.  The time stamps should ensure that LOST's flash movie player
loads the latest FLV file and that the latest AVI movies appear within the
movies_and_screen_shots folder on the LOST desktop.

*.  Eliminated movie_counter member of MyViewerEventHandler class.

*.  Moved broadcast_frame_number() out of MODEL class into Messenger class.

============================================================================
White disk TOUCHY2 code changes made on Sun, May 16, 2010:

*.  In OBSFRUSTUMPickHandler::select_OBSFRUSTUM(), now execute expensive
call to OBSFRUSTAGROUP::reset_frustum_colors_based_on_Zcolormap() only if
mask_nonselected_OSGsubPATs_flag==false.  Picking and flying to MIT2317
OBSFRUSTA is now significantly faster.

============================================================================
White disk TOUCHY2 code changes made on Fri, May 14, 2010:

*.  Commented out call to pause AnimationController within
LOSMODELSGROUP::update_display().  Game clock can now play continuously
when making AVI movies in LOST.

*.  LOST thick client resets clock to starting frame whenever user stops
movie making.

============================================================================
White disk TOUCHY2 code changes made on Thurs, May 13, 2010:

*.  Moved gis_database class out of osg/osgGIS into /postgres.

*.  Transfered several members & methods out of postgis_database class into
gis_database class.

*.  gis_database::parse_OGRPolygon_vertices() loops over all vertices
within input *poPolygon_ptr and extracts their longitude,latitude values
and altitudes.  It converts the angular geocoordinates into Cartesian
coordinates and fills member STL vector curr_polyline_vertices with the
output.

============================================================================
White disk TOUCHY2 code changes made on Weds, May 12, 2010:

*.  postgis_databases_group::generate_postgis_database_from_GISlayer_IDs()
takes pass numbers within STL vector GISlayer_IDs.  It searches
the pass labeled by GISlayer_IDs[0] for hostname, databasename and username
information.  If found, this method dynamically instantiates
postgis_database_ptr. It fills the database's gispoints_table with the
pass' gispoints_tablename information.

*.  Replaced multiple copies of main code with call to
postgis_databases_group::generate_postgis_database_from_GISlayer_IDs().

.............

*.  LOSServer now inherits from BasicServer rather than from WebServer
class.

============================================================================
White disk TOUCHY2 code changes made on Tues, May 11, 2010:

*.  Removed ancient main program newyork/nycity.cc from repository which
was for slide purposes only.

*.  Globally eliminated dependence upon MyApplicationUsage class from all
main programs.

*.  Eliminated databases_map_ptr and strings_map_ptr members from
SignPostsGroup class.  Added postgis_databases_group_ptr member.  Moved
several methods out of SignPostsGroup class
(e.g. enable_PostGIS_database_access()) into postgis_databases_group class.

============================================================================
White disk TOUCHY2 code changes made on Mon, May 10, 2010:

*.  Separated off broadcast_sensor_statevectors() from
MODELSGROUP::broadcast_sensor_and_target_statevectors().

*.  Eliminated unnecessary broadcast_subpacket() member functions from
GEOMETRICALS and IMAGESERVER classes.  Now just directly call
Messenger::broadcast_subpacket().

*.  Moved broadcast_track_statevector() out of GEOMETRICAL class into TRACK
class.

============================================================================
White disk TOUCHY2 code changes made on Fri, May 7, 2010:

*. Added new robots/serialDevice class.  Also added libSerial into LIBS
within Makefile.  

*.  Added new postgis_databases_group class in osg/osgGIS.

============================================================================
White disk TOUCHY2 code changes made on Thurs, May 6, 2010:

*.  In texture_rectangle::retrieve_curr_subframe_byte_data(),
set width=min(int(getWidth()),px_stop-px_start+1) & 
height=min(int(getHeight()),py_stop-py_start+1).

*.  Modified ImageServerTest and ImageClientTest for Bots n Dogs
application.  Client can now save unique received photos within output JPEG
files.

============================================================================
White disk TOUCHY2 code changes made on Weds, May 5, 2010:

*.  filefunc::latest_file_in_subdir() takes in a subdirectory and performs
a Unix listing sorted according to access time.  This method returns the
names of the latest and next-to-latest accessed files within the
subdirectory.

*.  Updated libs listings within all .pro files and remade Makefiles for
all QT programs.

*.  Changed erroneous \r to \n within
stringfunc::remove_trailing_whitespace().

*.  In texture_rectangle::import_photo_from_file(), we discovered the
painful way that the following call to readImageFile() can fail and yield a
"Could not find plugin to read objects from file" warning.  This occurs
even though the input photo_filename is valid.  We empirically found that
we may need to issue several hundred repeated calls to readImageFile()
before the file is actually imported.  (Maybe this is an indication of some
race condition going on?).  For now, we live with the cluge of calling
readImageFile() a large number of times before eventually giving up and
exiting the program...

============================================================================
White disk TOUCHY2 code changes made on Tues, May 4, 2010:

*.  Added data_ID member to node class along with set/get methods.

*.  Moved node SQL database population member functions out of photogroup
into graph class.

*.  Added independent graph_edge_counter and graph_edge_counter_ptr members
to graph class.  If latter equals NULL, graph_edge IDs are set equal to
former.  

*.  Added global_graph_edge_counter member to graph_hierarchy class.

============================================================================
White disk TOUCHY2 code changes made on Mon, May 3, 2010:

*.  graph_hierarchy::color_graph_levels() loops over each level within the
current graph hierarchy starting from the top of the pyramid.  Top level
nodes are assigned pure hues.  Next-to-top level nodes have their hues
varied slightly from their ancestors' as well as their intensities randomly
altered.  All lower level nodes inherit their parents' colorings.

*.  Reasonable children, parents and grandparents graphs obtained for
MIT2317 using refactored graph_hierarchy, graphfuncs and graph classes.
After turning off parent node perturbations, reasonable hierarchy also
generated for MIT20K set.  

============================================================================
White disk TOUCHY2 code changes made on Fri, Apr 30, 2010:

*.  Added graph::reset_node_order(const std::vector<int>* ordered_node_ID);

*.  Moved output_edge_GraphML() & compute_nmatches_distribution() out of
photogroup class into graph class.

*.  Starting to generate quasi-reasonable JSON file for child 2317 graph
via GENERATE_HIERARCHY.  But parent 2317 graph looks bad.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Apr 29, 2010:

*.  Continued to work on constructing graph hierarchies.

============================================================================
White disk TOUCHY2 code changes made on Weds, Apr 28, 2010:

*.  graph::get_max_node_ID() loops over all nodes within the current graph.
It returns the maximum of all the nodes' IDs.

============================================================================
White disk TOUCHY2 code changes made on Tues, Apr 27, 2010:

*.  graphfunc::extract_nodes_from_mcl_cone_file() is a utility function
which converts curr_substring to an integer and appends it onto
children_node_IDs.  If input level==1, this method also instantiates a new
node member of *lowest_graph_ptr and sets its parents ID to
curr_node_ptr->get_ID().

*.  Added level member to node class along with set/get methods.

============================================================================
White disk TOUCHY2 code changes made on Mon, Apr 26, 2010:

*.  mains/photosynth/EXTRACT_TIMESTAMPS is a little utility which pulls out
time stamps from the original MIT2317 photos and generates SQL update
commands for the photo table within the data_network database.

*.  graphfunc::extract_hierarchy_cluster_sizes() takes in a "cone"
clustering hierarchy file generated by MCLCM.  It scans this file for the
"dimensions" keyword followed by the sizes of each hierarchical cluster.
This method returns an STL vector containing ID labels for the MCLCM
clusters which are sequentially separated by cluster_ratio and exceed
min_cluster_size.

...........................

*.  mains/graphs/MCL_HIERARCHY is a testbed for experimenting with the
graph cluster hierarchy generated by MCLCM.

============================================================================
White disk TOUCHY2 code changes made on Mon, Apr 20, 2010:

*.  In photogroup::read_photographs(), changed index for xdim and ydim STL
vectors from photo_ID to photo_counter when instantiating new photograph.

...........................

*. In GENERATE_PETER_INPUTS, changed default
fitted_world_to_bundler_distance_ratio from zero to one.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Apr 15, 2010, Fri, Apr 16,
2010 and Sun, Apr 18, 2010:

*.  In PassesGroup::interpret_arguments(const vector<string>&
ext_filenames), append '-newpass' after each set of arguments corresponding
to each external filename to arguments vector.

*.  In PassesGroup class, replaced vector<PassInfo> pass_metadata member
with vector<PassInfo*> pass_metadata_ptrs.  Fixes problem with PassInfo for
run-time created photo passes in QTVIEWBUNDLER.

============================================================================
White disk TOUCHY2 code changes made on Weds, Apr 14, 2010:

*.  Modified PROPAGATOR to work with MIT2317/iPhone imagery.  Placed new
version into photosynth mains dir.


============================================================================
White disk TOUCHY2 code changes made on Tues, Apr 13, 2010:

*.  Moved display_average_LOS_results() from MODELSGROUP to LOSMODELSGROUP
class.

*.  In MODEL::import_avg_LOS_ptwoDarray_contents(), explicitly check for
'e' or 'w' appearing in averaged LOS ptile filenames.  If latter, reset
longitudes to negative values.

*.  In TilesGroup::read_geotif_subtiles_overlapping_polygon(), now make
sure latitude in input geotif_filename has exactly 2 integer digits.

*.  In TilesGroup::update_avg_LOS_tiles(), we discovered to our horror that
GDALWARP (at least on touchy2) does not always successfully convert
avg_LOS_geotif_filename into avg_LOS_geotif_long_lat_filename.  So we must
test for the existence of the latter file.  If it is not generated, ignore
the rest of this loop's contents...

*.  In LOSMODELSGROUP::generate_SAM_threatmap(), now set longitude_int_hi=
basic_math::mytruncate(threatmap_longitude_hi)+1.  SAM threatmap
computation seems to work OK in HoA.

...................

*.  enable thin-thick client communication for LOST

...................

*.  Renamed member generate_AVI_movies_flag to hide_Mode_HUD_flag in
Operations & Mode_HUD classes.

============================================================================
White disk TOUCHY2 code changes made on Mon, Apr 12, 2010:

*.  In TilesGroup::load_all_DTED_tiles(), decrease integers min_longitude &
max_longitude by one if their values are negative.  

*.  In LOSMODELSGROUP::generate_SAM_threatmap(), explicitly check if
longitude_int_lo < 0.  If so, decrease its value by one.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Apr 8, 2010:

*.  Modified mapping/TDP2TIF in order to convert DTED Horn of Africa tiles
into Geotif files for LOST.

============================================================================
White disk TOUCHY2 code changes made on Mon, Apr 5, 2010:

*.  Updated & generalized mains/mapping/GENERATE_TDP2TIF_SCRIPT & TDP2TIF.

============================================================================
White disk TOUCHY2 code changes made on Fri, Apr 2, 2010:

*.  Removed hacks inserted for generating Where Was Karl AVI movies.

...........................

*.  Checkin before attempting to checkin RASR laptop modifications
corresponding to Ubuntu 9.10 upgrade.

...........................

*.  Checkin from touchy2 after updating code tree with RASR laptop
modifications

...........................

*.  Checkin from touchy2 after updating code tree with G106 clone modifications

============================================================================
White disk TOUCHY2 code changes made on Thurs, Apr 1, 2010:

*.  Generalized FUSE_DTED_TRUEARTH to handle fusion for west longitudes.
Fixed lon+1 bug.  

..........................

*.  Ready to start making Where was Karl movies.

============================================================================
White disk TOUCHY2 code changes made on Weds, Mar 31, 2010:

*.  mains/afghanistan/GENERATE_LODTREE_SCRIPT is a specialized program
written to produce an executable script for running Ross' LODTREE program
on TDP files formed by fusing DTED & TruEarth satellite imagery.  For
reasons we couldn't figure out, the lodtree command already within
FUSE_DTED_TRUEARTH failed to properly execute on Allie Hoch's laptop.  So
we had to cluge together this hack in order to convert fused TDP files into
final OSGA output.

..................

*. OBSFRUSTAGROUP::insert_human_MODEL() generates a 3D human MODEL.  It
positions the MODEL so that its face matches the COM of the sub FRUSTUM's
base pyramid.  We also assume that the human faces directly towards the
camera.  So this method azimuthally rotates the 3D MODEL so that it looks
towards the camera.

*.  Added graphical_counter member to GraphicalsGroup along with get
method.  graphical_counter never decreases even when a Graphical is
destroyed.

..................

*.  Added SUBFRUSTAGROUP to qtviewbundler to hold all subfrusta
corresponding to picked regions within photos.

============================================================================
White disk TOUCHY2 code changes made on Tues, Mar 30, 2010:

*.  Started to generalize mains/afghanistan/FUSE_DTED_TRUEARTH to handle
general regions on earth.  In particular, this program now takes the
specified UTM zonenumber as an input parameter rather than having its value
hardwired.

*.  Generalized mains/afghanistan/GENERATE_FUSE_SCRIPT to produce script
for FUSE_DTED_TRUEARTH.

.....................

*. On 3/30/2010, we learned the painful and hard way that UTM northings
experience a 1E7 discontinuity across the equator!  This discontinuity
fouls up LatLongGrid display.  So latlongfunc::LL_to_northing_easting() now
takes in specified_northern_hemisphere_flag.  If this boolean equals true,
the 1E7 discontinuity is subtracted away from the output northing.

.......................

*.  Added target_MODELSGROUP_ptr member to OBSFRUSTAGROUP class along with
set method.

============================================================================
White disk TOUCHY2 code changes made on Mon, Mar 29, 2010:

*.  Make output script from SID2TIF executable.

...........

*.  Camera::FOV_width_to_height_ratio() takes in a set of corner_ray
unitvectors.  It computes and returns the width-to-height ratio for the
image plane subtended by the input corner rays.  We wrote this little
utility function in Mar 2010 in order to determine the ratio for subfrusta.
We empirically determined that the exact trigonometric value for this ratio
returned by this method is well-approximated by the simpler ratio dU/dV =
(U_hi-U_lo)/(V_hi-V_lo) which can be simply computed within the thin
client.

============================================================================
White disk TOUCHY2 code changes made on Fri, Mar 19, 2010:

*.  Added projects/data/OpenSceneGraph-Data/humans subdir to repository.
Contains male.osg and male.ive for 3D human figure.

*.  VIEWPOINTS and VIEWBUNDLER can now display white 3D male figure
injected into real-world 3D point clouds.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Mar 18, 2010:

*.  In both OBSFRUSTUM::set_relative_Movie_window() methods, now explicitly
return if input movie_ptr==NULL. 

*.  camera::pixel_bbox_ray_directions() fills and returns an STL
vector with threevector rays corresponding to the input bounding box's
corners.

============================================================================
White disk TOUCHY2 code changes made on Weds, Mar 17, 2010:

*.  Program DTED2OSGA generates scripts which call Ross Anderson's LODTREE
program that converts TDP files generated by DTED2TDP into OSGA files.

*.  Added bbox_ptr member to PHOTOSERVER class along with set method.

...............

*.  Added bounding_box::get_area() method.

*.  Added new_subfrustum_flag member to OBSFRUSTAGROUP along with set/get
methods.

*.  Separated off
OBSFRUSTAGROUP::generate_still_image_frustum_for_photograph() from
generate_still_imagery_frusta_for_photogroup().

*.  Moved OBSFRUSTAGROUP::build_OBSFRUSTUM() into OBSFRUSTUM class.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Mar 11, 2010:

*.  Starting to modify QTVIEWBUNDLER so that it can respond to photo
selection messages sent by thin client.


============================================================================
White disk TOUCHY2 code changes made on Tues, Mar 9, 2010:

*.  Made few changes to mains/mapping/DTED2TDP so that it can work with
Horn of Africa DTED.

.......................

*.  Generalized mapping/DTED2TDP to handle DTED tiles west of Greenwich.

============================================================================
White disk TOUCHY2 code changes made on Sat, Mar 6, 2010:

*.  Program GPS_vs_RECON reads in 42 iPhone GPS world-positions along with
corresponding reconstructed camera world-positions.  This program computes
the residual distribution between the two assuming the GPS positions
represent ground truth.  It also populates a probability distribution with
the residual information and outputs a frequency histogram metafile.

*.  GENERATE_PETER_INPUTS now queries the user whether to perform a
hardwired conversion from bundler to world coordinates based upon a
ladar-derived transformation.

============================================================================
White disk TOUCHY2 code changes made on Fri, Mar 5, 2010:

*.  Program JPG2jpg renames "foo.JPG" as "foo.jpg".  We wrote this little
utility in order to convert Noah's JPG suffix to our jpg suffix.

============================================================================
White disk TOUCHY2 code changes made on Tues, Mar 2, 2010:

*.  Changed 'r' in SignPostsKeyHandler from retrieving all signposts from
PostGIS database to reading info from file.  Made this temporary change
s.t. Karl Ni can read SignPosts in using VIEWBUNDLER.

.........................

*.  In WRITE_VIEWBUNDLER_SCRIPT, user now enters stopping as well as
starting image number.

.........................

*.  Turn off OBSFRUSTA pyramids and jump to first selected photo for Gmap
movie making purposes.

============================================================================
White disk TOUCHY2 code changes made on Mon, Mar 1, 2010:

*.  PhotoTour::get_tour_photo_IDs() returns an STL vector of integers
containing the ordered list of photos within the current tour.

*.  PhotoTour::get_tour_posns() loops over all OBSFRUSTA within the current
photo tour.  It fills and returns an STL vector with positions of cameras
along the tour.  This method also computes the tour's total length.

*.  PhotoTour::generate_specified_tour() takes in an STL vector containing the
IDs for some specified photo tour.  After destroying all existing
PhotoTours, this method instantiates a new PhotoTour and sets its loop flag
to false.

*.  In PhotoServer::post(), we experiment with turning off ladar points as
well as jumpting to starting photo position when a tour is received from
thin client.

============================================================================
White disk TOUCHY2 code changes made on Sun, Feb 28, 2010:

*.  Added PhotoTour::get_ordered_OBSFRUSTUM_IDs();

*.  Added PhotoToursKeyHandler class to repository.

*.  Added GraphicalsGroup::unerase_all_Graphicals().

*.  Hacked up program TOUR in order to create Marriott tour AVI movie.

============================================================================
White disk TOUCHY2 code changes made on Fri, Feb 26, 2010:

*.  Still more tinkering with virtual photo touring.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Feb 25, 2010:

*.  Tinkering more with virtual photo touring...

*.  Can basically delete PhotoTour, generate new one and conduct new
virtual tour.

============================================================================
White disk TOUCHY2 code changes made on Weds, Feb 24, 2010:

*.  With help from Ross Anderson, we uncovered the source of the bad
flicker within virtual photo tour.  It came from several lines of code
within OBSFRUSTAGROUP::flyto_camera_location() which reset all Movie alphas
to unity before virtual camera moves.  After commenting out these lines
within this method, virtual photo tour looks OK.

..........................

*.  OBSFRUSTUM::rotation_about_LOS() spins the virtual camera by 90 degrees
about -What axis ( = LOS direction) if OBSFRUSTUM's movie should be viewed
in portrait mode.  It also spins the virtual camera by any previously
calculated roll angle if the roll is close to +/- 90 degs or +/- 180 degs.

============================================================================
White disk TOUCHY2 code changes made on Tues, Feb 23, 2010:

*.  Added display_Pyramids_flag member along with set method to
OBSFRUSTAGROUP class.

*.  PhotoServer::generate_JSON_response_to_tourpath_entry() returns a JSON
string to Jennifer Drexler's thin client which contains a LineString
written in GEOJSON form corresponding to the actual tour through
reconstructed cameras.

...............

*.  PhotoServer::generate_JSON_response_to_tourpath_entry() returns IDs for
tour photos.

...............

*.  Trying to track down source of bad zooming for virtual photo tour.

============================================================================
White disk TOUCHY2 code changes made on Mon, Feb 22, 2010:

*.  Starting to integrate virtual 3D tour thick client functionality with
thin client input.

============================================================================
White disk TOUCHY2 code changes made on Fri, Feb 19, 2010:

*.  PhotoServer::set_graph_level_and_node() parses and stores graph cluster
and ID parameters selected by a user within the PHOTO thin client.

*.  No longer inline GraphicalsGroup::set_selected_Graphical_ID(int n).
Also, this method now trivially returns if n==selected_Graphical_ID.

*.  OBSFRUSTAGROUP::fade_in_photo() fades in the photo corresponding to the
OBSFRUSTUM specified by the input ID over a fixed time interval. 

*.  Movie::time_dependent_fade_in_photo() resets member var
fadein_start_time if its value is negative.  It then computes a fade-in
fraction based upon the elapsed time since this method was first called and
the current time.  The current movie's alpha value is set equal to the
fade-in fraction with a maximum unity ceiling.

*. OBSFRUSTAGROUP::cross_fade_photo_pair() performs a time-dependent
fade-out of the previously selected OBSFRUSTUM's movie and a time-dependent
fade-in of the currently selected OBSFRUSTUM's movie.  We wrote this method
in Feb 2010 in order to mimic Noah Snavely's transitions from one photo to
the next.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Feb 18, 2010:

*.  In texture_rectangle::initialize_general_video(), changed
AC_ptr->set_nframes(Nimages) to
AC_ptr->set_nframes(max(Nimages,AC_ptr->get_nframes()))

*.  Starting to implement virtual tour capability within OBSFRUSTAGROUP.

.................

*.  Starting to create new osgModels/PHOTOTOUR class.  

*.  Added prev_selected_Graphical_ID() member to GraphicalsGroup along with
get method.

.................

*.  Starting to create new osgModels/PHOTOTOURSGROUP class.

============================================================================
White disk TOUCHY2 code changes made on Weds, Feb 17, 2010:

*.  Added virtual_tour_flag member to OBSFRUSTAGROUP along with set/get
methods.

*.  Updated mains/photosynth/Qt/viewbundler.pro

============================================================================
White disk TOUCHY2 code changes made on Tues, Feb 16, 2010:

*.  graph::compute_cluster_COM() and node_COM() can now compute average
(U,V) coordinates weighted by node relative sizes.

*.  graph::max_relative_size_node_in_cluster() takes in the ID for some
cluster of nodes in the current graph.  After looping over all nodes within
the specified cluster, this method returns a pointer to the node with the
maximum relative_size.

*.  graph::hierarchical_grandparents_clustering() is assumed to work on a
current "parents" graph whose children nodes are known.  It takes in
*grandparents_graph_ptr whose grandchildren nodes are also assumed to be
known.  In general, we assume that the coarse and finer clustering used to
form the grandparents and parents graph is not strictly hierarchical.  So
this method implements a "voting" approach to determine which parent nodes
should be grouped together into a grandparent cluster based upon their
common children.  Each parent node within the current graph is assigned a
unique grandparent ancestor.

*.  graph::assign_parent_node_colors() takes in *grandparents_graph_ptr
whose nodes are assumed to have already been assigned pure hue colors.  The
current parents graph clusters_map is also assumed to be filled with valid
parent-grandparent node relationships.  For each parent node within a
grandparent cluster, this method quasi-randomly varies the grandparent
node's saturation and value and perturbs the hue color coordinates.  The
resulting parent offspring nodes are thus assigned colors which are derived
from the grandparent's but noticeably differ from each other.

*.  Set nodes_kdtree_ptr=NULL in graph::docopy() before attempting to
generate new kdtree.

============================================================================
White disk TOUCHY2 code changes made on Fri, Feb 12, 2010:

*.  Program PARENTS_EDGELIST reads in the graph edge list generated by
BUNDLER_CONVERT which establishes links between two photos if they share
SIFT features in common.  It also reads in photograph clustering
information.  After forming a parents graph, PARENTS_EDGELIST exports the
super graph's adjacency matrix as an edge list.  This program also outputs
a sorted parent node centrality file.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Feb 11, 2010:

*.  graph::export_edgelist() takes in an adjacency matrix along with an
edge weight threshold.  Looping over the matrix' rows and columns, it
exports a file of the form node_id node_id' edge_weight.  Edges whose
weights lie below edgeweight_threshold are not included in the output file.

*.  Starting to generate supercluster graph.

============================================================================
White disk TOUCHY2 code changes made on Tues, Feb 9, 2010:

*.  mains/photosynth/DIMACS_EDGE_LIST reads in the graph edge list
generated by BUNDLER_CONVERT which establishes links between two photos if
they share SIFT features in common.  DIMACS_EDGE_LIST writes out a file
containing neighboring node information which can be parsed by Andrea
Arbore's nRLF graph vertex coloring program.

============================================================================
White disk TOUCHY2 code changes made on Mon, Feb 8, 2010:

*.  GENERATE_PETER_INPUTS now creates a run_node_coloring executable
script which calls Arbore's graph coloring program.

*.  graph::transfer_children_info_to_parent_nodes() loops over all clusters
within the current graph.  It sets each super node's children_node_IDs
equal to clusters_map[cluster_ID].

*.  Added relative_size member to node class along with set/get methods.

*.  graph::resize_nodes_based_on_n_children() sets the relative_size of
each node within the current graph equal to the natural log of its number
of children.  We wrote this method for super graph display purposes.

============================================================================
White disk TOUCHY2 code changes made on Fri, Feb 5, 2010:

*. Added dm_to_decimal_degs() to latlongfuncs namespace in order to parse
Apple iPhone geolocation metadata.

*.  mains/photosynth/IPHONE_METADATA is a specialized utility which
converts iPhone GPS coordinates into Noah's raw BUNDLER coordinates.  We
hardwire the transformation between world and BUNDLER coordinates within
this program.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Feb 4, 2010:

*.  Now explicitly check if common_planes_map_ptr==NULL in photogroup
destructor.

============================================================================
White disk TOUCHY2 code changes made on Weds, Feb 3, 2010 & Thurs, Feb 4,
2010:

*. Added geopoint *upper_right_corner_ptr member to TextureSector class.
Automatically set its value in TextureSector::construct_long_lat_bbox().

*.  TextureSector::reposition_Movie() resets a movie's 3D coordinates so
that it hovers above the lat-lon bounding box set within
TextureSector::construct_long_lat_bbox().

*.  Added north_az_offset member to CompassHUD class along with set
method.  Need to use this variable to geoalign GSTREET's compass display.

*.  mains/rasr/GEOREGISTER reads in a set of building exterior features
manually selected from some georegistered aerial EO image and a
corresponding set of interior features selected from a G76 ladar map.  This
program computes the absolute scale, translation and rotation needed to
georegister the latter sparse point cloud onto the aerial image.

============================================================================
White disk TOUCHY2 code changes made on Tues, Feb 2, 2010:

*.  Eliminated redundant and incorrected member var cluster_ID from
photograph class along with set/get methods.

*.  Added northern_hemisphere_flag bool member to photogroup along with set
method.

*.  Added geopoint geo_location member to camera class along with set/get
methods.

============================================================================
White disk TOUCHY2 code changes made on Fri, Jan 29, 2010:

*.  Added mains/photosynth/BUNDLECITIES.cc to repository.

*.  photogroup::generate_bundler_photographs() now parses exif metadata for
all input photographs.

*.  photogroup::export_image_info() loops over all images within the
current photogroup and writes their ID, filename, xdim, ydim, date and time
stamps to an output text file.  It also writes out similar information for
each photo's thumbnail.  This information can subsequently be read in by
thin client java scripts.

*.  Eliminated AnimationController_ptr member from photogroup class.

..............

*.  Started to add movie generation capability into PhotoServer class.


============================================================================
White disk TOUCHY2 code changes made on Thurs, Jan 28, 2010:

*.  Added OBSFRUSTAGROUP::get_selected_OBSFRUSTUM_ptr().

*.  Implemented responses to several thin client get requests within
PhotoServer for QTVIEWBUNDLER.

.........................

*.  Starting to import Cambridge GIS info into 3D MIT map.


============================================================================
White disk TOUCHY2 code changes made on Weds, Jan 27, 2010:

*.  In SignPostsGroup::save_info_to_file(), expanded column_width to 20 in
order to assure column entries don't run into one another.

..................

*.  Melissa Meyer uncovered a serious raytracing bug in LOST.  It
originated in TilesGroup::individual_latlong_tiles_intercepting_polygon().  
To fix this bug, we moved the check for small OBSFRUSTUM footprints outside
the loop over index c labeling longlat cell corners.


============================================================================
White disk TOUCHY2 code changes made on Tues, Jan 26, 2010:

*.  Recall country borders, country names and city names are all contained
within *Earth_ptr->get_drawable_group_ptr().  So we add this OSG drawables
group to decorations OSG group in QTLOS rather than each of the individual
annotator OSG groups individually.

*.  In January 2010, we ran into major release review problems with trying
to present the LOST demo at the MIT Tech Fair.  In order to satisfy the
HAFB release reviewer, we had to suppress all country names, city names,
borders and lat-lon grid displays.  So we added a few lines at the end of
QTLOS which can be used to simply mask these identifying geographic
markers.

*.  Created new mains/photosynth/Qt subdir along with QTVIEWBUNDLER.cc
version of VIEWBUNDER.cc

*.  Started creating new PHOTOSERVER class which enables thin-client
communication with "photosynth" thick clients via HTTP get and post
commands.

.......................

*.  generate_Movie() and generate_movie_OBSFRUSTUM() members of
OBSFRUSTAGROUP class now take movie_ID argument whose default value = -1.

*.  In GraphicalsGroup::OSGsubPAT_parent_of_Graphical(), now explicitly
check if Graphical_ptr==NULL.  If so, return -1.

*.  OBSFRUSTAGROUP::get_selected_OBSFRUSTUM_photo_ID() returns the ID of
the photo associated with the currently selected OBSFRUSTUM.  Recall that
OBSFRUSTA ID's (which generally increase monotonically) do NOT necessarily
coincide with photo IDs (which may skip if they correspond to BUNDLER
output).

*.  OBSFRUSTAGROUP::get_selected_photo_OBSFRUSTUM_ID() takes in the ID for
some photo.  It returns the ID of the corresponding OBSFRUSTUM which holds
the photo.  Recall that OBSFRUSTA ID's (which generally increase
monotonically) do NOT necessarily coincide with photo IDs (which may skip
if they correspond to BUNDLER output).

============================================================================
White disk TOUCHY2 code changes made on Fri, Jan 22, 2010:

*.  In WRITE_VIEWBUNDLER_SCRIPT, now explicitly check whether package file
actually exists before writing it to the output script.

*.  Better georegistration results for MIT 2.3K obtained this afternoon.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Jan 21, 2010:

*.  In tdpfunc::write_UTM_zone_and_offset(), we now output the zeroth_XYZ
to the TDP file BEFORE checking whether UTMzone==''.  If the latter
condition is true, it returns from the method.

*.  Starting to get quasi-acceptable georegistration results for the MIT
2.3K reconstructed set.

============================================================================
White disk TOUCHY2 code changes made on Weds, Jan 20, 2010:

*.  mains/photosynth/LN_NUMBERED_PHOTOS reads in Noah's reconstructed image
list.  For each input JPG filename, this program forms a simpler alias of
the form "photo_XXXX.jpg".  It generates an executable script which
establishes a softlink between the input JPG filenames and the simpler
aliases.  The output executable should be run within a "numbered_photos/"
subdirectory of an "images/" directory.

*.  Starting to georegister MIT2.3K reconstructed set with Boston 2004
ladar data.

============================================================================
White disk TOUCHY2 code changes made on Tues, Jan 19, 2010:

*.  In Pyramid::update_square_pyramid_triangle_mesh(), changed UByteArray
to UIntArray.  Change seems to fix catastrophic OBSFRUSTUM crashes!


============================================================================
White disk TOUCHY2 code changes made on Mon, Jan 18, 2010:

*.  sysfunc::get_loginname() returns a C++ string containing the output
from the system getlogin() function.  We call this new method in
Capture_Viewer_Screen section of LOSServer rather than hardwiring in user
name.

*. Modified sysfunc::get_loginname() to call cuserid() rather than
getlogin().  LOST no longer appears to crash when invoked from starting
icon and a screen capture is performed.

============================================================================
White disk TOUCHY2 code changes made on Fri, Jan 15, 2010:

*. graphicsfunc::shrink_wrap_regularized_contour() now takes in delta_r
parameter rather than having its value hardwired as 0.33 meter.

*.  tdpfunc::fill_ztwoDarray_from_tdpfile fills the contents of twoDarray
*ztwoDarray_ptr with data read in from the specified input TDP file.

*.  contour::consolidate_parallel_edges() now takes in edge_angle_deviation
(measured in degs) as an input param rather than having this variable
hardwired to zero.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Jan 14, 2010:

*.  Moved MODEL::set_raytrace_occluded_ground_regions_flag() out of MODEL.h
into MODEL.cc.  Not sure if race condition exists wherein flag is set to
false AFTER movie playing begins.

*.  In LOSServer::get_target_occlusion_fractions(), we now experiment with
NOT resetting clock to starting time when returning from point rays to
airplane rays in order for thick and thin clients' clocks to stay in sync.

...............

*.  Changed Occlusion Percentage colorbar in QTLOS to Visibility
Percentage.  Inverted red <--> green.

*.  Display terrain altitude colorbar in kft rather than km.  Max alt now
depends upon selected map.

...............

*.  Hashtable::convert_hashtable_to_vector() now returns an STL vector of T
rather than Mynode<T> objects.

*.  Program mains/EXTRACT_WALLS is a playground for extruding walls from
G76 robot ladar data of S-building.

============================================================================
White disk TOUCHY2 code changes made on Weds, Jan 13, 2010:

*.  In LOSServer::get(), changed subdir=/home/cho/Desktop/... to 
subdir=~/Desktop/...

*.  In LOSServer::get_target_occlusion_fractions(), we recall
Aircraft_MODELSGROUP_ptr has TWO OSGsubPATs.  The zeroth OSGsubPAT holds
the LineSegmentsGroup which stores air-to-ground colored rays.  The first
OSGsubPAT holds aircraft OBSFRUSTA.  When multi-air-to-single-ground rays
are displayed, we want to view the former and hide the latter.

*.  OBSFRUSTUM::compute_latlong_pnts_inside_footprint() first computes the
OBSFRUSTUM's zplane projection.  It then determines which latlong tiles lie
inside the projected frustum's z-plane trapezoid.  This method returns an
STL vector of threevectors(longitude,latitude) containing the intercepted
latlong tiles.

*.  For double-lobed LOST sensing, we now load in TWO OBSFRUSTA footprints
worth of DTED terrain into *DTED_ztwoDarray_ptr when performing ground
target visibility raytracing.  This is significantly more efficient than
having to load DTED for the RHS OBSFRUSTUM followed by DTED for the LHS
OBSFRUSTUM.

============================================================================
White disk TOUCHY2 code changes made on Tues, Jan 12, 2010:

*.  MODEL::import_avg_LOS_ptwoDarray_contents() &
display_average_LOS_results() now take in geotif_Ptiles_subdir as a passed
parameter rather than having this value hardwired within these member
functions.

*.  We realized the hard and painful way that we must constantly reload
DTED height data if n_OBSFRUSTA > 1 in
LOSMODELSGROUP::compute_target_visibilities_along_flightpath().

============================================================================
White disk TOUCHY2 code changes made on Sun, Jan 10, 2010 and Mon, Jan 11,
2010:

*.  Panorama::find_closest_imageplane_to_world_posn() takes in world-space
point XYZ and computes its distance and direction vector r_hat wrt the
current Panorama's center.  It then loops over the OBSFRUSTA within the
Panorama and returns the ID for the one whose pointing vector has maximal
dotproduct with r_hat.  This method also returns the UV coordinates for the
XYZ point within closest_UV.

*.  PanoramasGroup::project_world_posn_into_imageplanes() loops over all
Panoramas within the current PanoramasGroup.  For each panorama, it
computes the distance between world-space point XYZ to the panorama center
as well as the closest OBSFRUSTUM's image plane.  This method returns an
STL vector OBSFRUSTUM ID's sorted by increasing distance to XYZ as well as
XYZ's projection into the OBSFRUSTA image planes.

*.  PanoramasGroup::project_SignPosts_into_imageplanes() loops over every
SignPost within input *SignPostsGroup_ptr and extracts its XYZ tip position
in world-space coordinates.  It then projects each XYZ tip position into
every panorama within *this.  For the closest two panoramas within *this,
this method instantiates a new imageplane SignPost which effectively
appears superposed on the panorama photos.  We wrote this specialized
method in Jan 2010 for RASR demo purposes.

*.  Explicitly call Polyhedron::build_current_polyhedron() in
PolyhedraGroup::generate_new_Polyhedron(polyhedron* p_ptr).  No longer call
this method after generate_new_Polyhedron() in our source tree.

============================================================================
White disk TOUCHY2 code changes made on Sun, Jan 10, 2010:

*.  Added MAIN_RASR_DIR to makefile.

============================================================================
White disk TOUCHY2 code changes made on Sat, Jan 9, 2010:

*.  After several hours of debugging, we learned the hard way that the raw
DTED tiles e39n28 and e39n29 are totally corrupted!  So we decided to
approximate the heights of these tiles with a reasonable constant value of
676 meters.  We TEMPORARILY hardwired this z value within tdpfunc::
generate_ztwoDarray_from_tdpfile().

........................

*.  Added parent_ID, child_IDs and level members to graph class.

============================================================================
White disk TOUCHY2 code changes made on Fri, Jan 8, 2010:

*.  In photogroup::compute_edge_color(), cast integer numerators to doubles
in order to output continuous graph edge hue values.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Jan 7, 2010:

*.  In graph::compute_node_cluster_color(), we now vary saturation as well
as hue and value to maximize number of distinct colors for indicating
individual graph clusters.

*.  Can now compute adjacency matrix in graph class.

============================================================================
White disk TOUCHY2 code changes made on Mon, Jan 4, 2010, Tues, Jan 5,
2010 & Weds, Jan 6, 2010:

*.  Created new node, graph_edge and graph classes in src/graphs.

*.  Photograph and photogroup classes now respectively inherit from node
and graph classes.

*.  graph::read_cluster_info() parses the clustering text file generated by
the Markov Cluster Algorithm (see http://micans.org/mcl ).  It assigns
cluster IDs based upon the parsed input.

*.  graph::compute_node_cluster_color() recovers the cluster_ID calculated
by the Markov Cluster Algorithm (see http://micans.org/mcl ) for the input
*node_ptr.  If the cluster_ID < 0, this method returns a grey coloring.
Otherwise, it computes and returns a quasi-random hue and value based upon
the cluster_ID.

*.  Added cluster_ID member to node class along with set/get methods.


============================================================================
White disk TOUCHY2 code changes made on Weds, Dec 30, 2009:

*.  Program mains/rasr/FLOORPLAN is a specialized utility for converting XY
ladar point measurements collected by the Group76 robot into a TDP output
file.

*.  Program mains/rasr/SIMPLE_FLOOR is a playground for cleaning up Group
76 robot ladar scans of S-building.  We first bin continuous XY position
coordinates into a lattice with 10 cm x 10 cm cells.  We next perform
recursive filling followed by recursive emptying to reduce small noise
artifacts in the ladar map.  After outputing a filtered TDP file, this
program calls LODTREE to generate a corresponding OSGA file.

============================================================================
White disk TOUCHY2 code changes made on Mon, Dec 28, 2009:

*.  Eliminated inclusion of astro/Clock.h in PassesGroup.h

*.  Commented out all contents of (globally unused) tridag.cc which depends
upon math/complex.h.  Commented out tridag declaration in nr.h.  Our
ancient complex class appears to cause conflicts with some more modern
complex class.  We made these changes in order to compile ogdf_layout.cc.

*.  Renamed program mains/graphs/ogdf_layout as OGDF_LAYOUT.  Cleaned up
I/O and added to bundler output processing chain.

*.  Cleaned up I/O for mains/graphs/EXTRACT_OGDF_LAYOUT and added to
bundler output processing chain.

*.  Program mains/photosynth/GENERATE_GRAPH_JSON reads in the graph edge
list generated by BUNDLER_CONVERT which establishes links between two
photos if they share SIFT features in common.  GENERATE_GRPAH_JSON writes
out a JSON file containing node and edge information which can be parsed
and visualized by Ross Anderson's graphing tool (as well as Michael Yee's
GraphExplorer).

*.  Program mains/rasr/FLOORPLAN is a specialized utility for converting XY
ladar point measurements collected by the Group76 robot into a TDP output
file.

============================================================================
White disk TOUCHY2 code changes made on Weds, Dec 23, 2009:

*.  Created new mains/rasr subdir.  Moved CROP_PAN.cc, FADE.cc, GSTREETS.cc
and PANGEN.cc out of photosynth subdir into this new subdir.

*.  Starting to add SignPosts into GSTREETS.

============================================================================
White disk TOUCHY2 code changes made on Tues, Dec 22, 2009:

*.  Program GENERATE_ROSSTILE_SCRIPT is a specialized program written to
produce an executable script for running program ROSSTILE.  We wrote this
utility in Dec 2009 in order to chop our TEC 2004 Boston ladar set into
tiles which overlap EO geotif tiles that we created in Aug 2009 from MAGIS
aerial imagery.

*.  Program FUSE_AERIAL_EO_LADAR is a specialized utility which we wrote in
Dec 2009 in order to trivially drape colored aerial EO imagery onto TEC
2004 ladar data.  We first used program ROSS_TILE in order to chop apart
434 mbyte Boston_TEC.x0.y0.tdp into tiles which align with Geotif files
that we created in Aug 2009 from MassGIS data.  FUSE_AERIAL_EO_LADAR then
iterates over all points within each TDP tile, extracts its UTM easting and
northing coordinates, looks up the counterpart RGB color values within the
corresponding geotif tile, and exports a fused TDP file.  This program then
calls LODTREE to convert the fused TDP data into an OSGA file.

============================================================================
White disk TOUCHY2 code changes made on Mon, Dec 21, 2009:

*.  Created new osgRTPS subdir with ROI_Polyhedron classes.

*.  Added ROI_Polyhedron and related classes to Decorations class.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Dec 17, 2009:

*. Added colorfunc::get_n_colors() which returns the number of colorfunc
Colors.

*.  stringfunc::remove_trailing_whitespace() searches for spaces, tabs or
carriage returns at the end of inputstring.  It returns the input
string without these trailing whitespace characters.

*.  In GENERATE_PETER_INPUTS, we learned the painful and hard way that
image filenames coming from windows machines may have invisible trailing
carriage returns.  So we must strip off all white space at the ends of
image filenames in order to read in photos on our linux disks!

*.  videofunc::import_photoID_XYZID_UV_bundler_pairs() takes in the name
for a test file containing photoID,XYZID,U,V information generated by
BUNDLER_CONVERT.  It parses this file and populates STL vectors photo_ID,
XYZ_ID and UV_sift with the imported data.

*.  OBSFRUSTAGROUP::update_OBSFRUSTUM_using_Movie_info() first checks
whether the input OBSFRUSTUM has a nontrivial Movie associated with it.  If
so, it tries to reset the OBSFRUSTUM's params if the Movie contains more
than one frame.  It also projects the current track points (for the NYC ESB
demo).  For the aerial HAFB video demo, this method projects the video clip
onto a trapezoid within the world z-plane.  We separated off these lines
from update_display() in order to make the latter method easier to read.

*.  We now export XYZ_ID X Y Z cam_a_ID cam_b_ID ... cam_n_ID

*.  Added PointsGroup_ptr member to OBSFRUSTAGROUP class along with set
method.

*.  Added initialize_new_Point() and destroy_all_Points() to PointsGroup
class.

*.  Tried to systematically capitalize all Points throughout our code tree.

*.  Eliminated empty FeaturesGroup::update_feature_text() method.

*.  Fixed Point creation and destruction.


============================================================================
White disk TOUCHY2 code changes made on Weds, Dec 16, 2009:

*.  camera::write_camera_package_file() now exports photo_ID to package
files.

*.  Added photo_ID member to Passinfo along with set/get methods.  Parse
this param in PassesGroup.

*.  camera::backproject_corner_into_world_plane() takes in corner index
c=0,1,2,3.  It returns within intersection_pnt the projection of the world
ray corresponding to the selected corner with the specified plane P.  If
the ray doesn't intersect the plane, this boolean method returns false.

*.  In OBSFRUSTAGROUP::generate_still_imagery_frusta_for_photogroup(), we
now set new OBSFRUSTUM ID equal to its default counter value rather than to
equal photo_ID.  Recall for KERMIT example, photo_ID doesn't uniformly
increment over all photos.  But we'd like OBSFRUSTA IDs to uniformly
increment so that we can trivially iterate over them with a for loop.

Not sure if this change might do violent damage to other parts of our code
tree...

*.  mains/mapping/GENERATE_TDP2TIF_SCRIPT is a specialized program written
to produce an executable script for running program TDP2TIF


============================================================================
White disk TOUCHY2 code changes made on Mon, Dec 14, 2009 & Tues, Dec 15,
2009:

*.  Explicitly set UTM zone in QTLOS based upon information transmitted by
thin client. 

*.  Added get_coordinate_system_string() and set_coordinate_system()
methods to geofuncs namespace.

*.  Tried to eliminate dependence of DTED2TDP upon number of digits
following East (e.g. e33 vs e121) in DTED2 filenames.

.................................

*.  Tried to eliminate dependence of afghanistan/FUSE_DTED_TRUEARTH upon
number of digits following East (e.g. e33 vs e121) in TDP filenames.

.................................

*.  Added warp_onto_imageplane_flag bool member to Movie class along with
set/get methods.

*.  WRITE_VIEWBUNDLER_SCRIPT now outputs common_planes_filename if its
length is nonzero.

*.  OBSFRUSTAGROUP::finalize_after_flying_in_and_out() resets
maneuver_finished_flag to false.  It also stop frustum blinking if the
virtual camera glides in smoothly to the selected OBSFRUSTUM.  This method
also reloads a lo-res thumbnail of a photo when the user flies out from a
selected OBSFRUSTUM.

*.  photogroup::get_overlapping_image_planes() takes in integer i labeling
some reconstructed photo.  It performs a brute force search over all other
photos and returns the image planes for those which share SIFT content with
the input photo.

*.  OBSFRUSTAGROUP::fade_away_photo() fades down the photo labeled by the
input ID.  We wrote this method in Aug 2009 in order to simulate zooming
movement from "wagon-wheel" photo to another for the RASR viewer.

============================================================================
White disk TOUCHY2 code changes made on Weds, Dec 9, 2009, Thurs, Dec 10,
2009 and Fri, Dec 11, 2009:

*.  QTLOS thick client now broadcasts a SEND_THICKCLIENT_READY message
before entering infinite event loop.

*.  Added map_selected_flag bool member to LOSServer class along with get
method.

*.  LOSServer::set_map() parses and stores 3D map parameters selected by a
user within the LOST thin client.

*.  Added non-const version of Pass::get_filenames().

*.  Thin client passing of 3D map info to thick LOST client is starting to
work.

..........................


*.  Resurrected AFFINE.cc and moved into new subdir mains/structmotion.

*.  Uncovered catastrophic error for QTLOS thick client in raster_parser
delete commands added on morning of Nov 30, 2009.  Not sure why these
deletes cause ray tracing to fail.  But removing them does appear to
restore QTLOS to working form again.


============================================================================
White disk TOUCHY2 code changes made on Tues, Dec 8, 2009:

*.  mains/photosynth/GENERATE_PETER_INPUTS expects to find "bundle.out" and
"list_tmp.txt" sitting within $bundler_subdir ( which we assume equals
./bundler/kermit for this example).  It first generates an images_list.dat
file containing renamed versions of the input images.  This program then
creates a packages subdir of $bundler_subdir and generates a
peter_inputs.pkg file containing names for various input parameters.
Finally, GENERATE_PETER_INPUTS writes out executable scripts for the
remaining 5 programs which must be run in order to manipulate Noah's
reconstructed point cloud and cameras within Peter's 3D viewer.

*.  Significantly streamlined Bundler output processing pipeline.  We
believe it's now ready for testing by other users.

......................

*.  Added UTM_zonenumber and northern_hemisphere_flag members along with
set/get methods to PassInfo class.  Now parse for these inputs within
PassesGroup.

*.  No longer hardwire min/max lon/lat values within QTLOS main pgm.
Instead, take these values from fused_afghanistan.pkg file.  Also pass
specified UTM zonenumber and northern hemisphere flag within this same
package file.

......................

*.  Updated README.view_bundler_output

============================================================================
White disk TOUCHY2 code changes made on Mon, Dec 7, 2009:

*.  plane::compute_candidate_plane() takes in a set of threevectors and
randomly selects 3 points.  If all 3 threevectors are distinct, this method
sets *this equal to the plane which passes through them and returns true.
Otherwise, this boolean method returns false.

*.  Tried again to streamline Bundler output processing pipeline.

============================================================================
White disk TOUCHY2 code changes made on Fri, Dec 4, 2009:

*.  Movie::warp_photo_onto_imageplane() takes in an infinite imageplane.
This method first checks whether the imageplane lies entirely within the
camera's forward field-of-view.  If not, this boolean method returns false.
Otherwise, it extracts the camera's 3x4 projection matrix and promotes it
to a 4x4 matrix P4.  It next forms 4x4 matrix Q4 which maps (U,V,W,W)
fourvectors onto 2D texture coordinate fourvectors such as
(width,height,1,1).  The total 4x4 texture matrix which maps 3D space
points on the imageplane into 2D texture coordinates Mtot=Q4*P4.  This
method resets both the geometrical vertices and the texture coordinates for
the camera's photo equal to the 3D points corresponding to the intercepted
image plane's corners.

We wrote this method in Dec 2009 after a week of struggling with trying to
reproduce Noah Snavely's approach to warping rectangular photos onto OpenGL
quads in 3-space.  We learned the painful and hard way that we CANNOT just
reset the quad corner 3D vertices.  By default, OpenGL breaks apart a quad
into 2 triangles and textures those independently.  So there is an obvious
first-derivative discontinuity across the common inner edge of the two
triangles making up the quad.  Instead, we have to use an OpenGL texture
matrix in order to perspectively project a rectangular photo onto an
arbitrary quad!

*.  Call Movie::warp_photo_onto_imageplane() in
Movie::reset_displayed_photograph() if movie camera's imageplane has been
defined.

...................

*.  Corrected BUNDLER_CONVERT so that all reconstructed XYZ points seen by
multiple cameras are now written to camera_views.dat.  

============================================================================
White disk TOUCHY2 code changes made on Weds, Dec 2, 2009 & Thurs, Dec 3,
2009:

*.  Added G99VD::get_vertices_ptr().

*.  Desperately trying to figure out 4x4 projection matrix which maps
3-space corners of quad onto 2D texture.  Still messed up!

============================================================================
White disk TOUCHY2 code changes made on Mon, Nov 30, 2009:

*.  Eliminated DTED2TDP in mains/afghanistan in favor of version within
mains/mapping.  

*.  Added mains/aerialEO/Qt/analysisfromcomm.cc and analysisfromcomm.pro to
repository.

....................

*.  Added mains/aerialEO/Qt/build_aerialEO_Qt to repository.

============================================================================
White disk TOUCHY2 code changes made on Weds, Nov 25, 2009:

*. Changed texturecoords_refptr member of G99VD class from osg:Vec2Array to
osg::Vec3Array in order to move towards warping images via homographies in
OSG.

*.  Started experimenting with altering 3D texture coordinates in
Movie::remap_window_corners() in order to correctly warp kermit photo via
homography.  Experiments are unsuccessful as of 11 am on Weds, Nov 25.

.....................

*.  Renamed ANALYSISGROUND and GROUNDANALYSIS as COMMFROMANALYSIS and
ANALYSIS2COMM.

*.  Simulated ground-to-air communications starting to work on Trex
machines.

*.  Added new entries into README.LOST_deployment about OK version for GDAL
and incorporating 2nd batch of satellite EO imagery into mapserv postgres
database.

*.  Tried experimenting with TexMat to manipulate textures via a 4x4 matrix
prior to their projection onto a geometrical plane.  No luck so far...

============================================================================
White disk TOUCHY2 code changes made on Tues, Nov 24, 2009:

*.  Added imageplane_ptr member to camera class along with set/get methods.

*.  Eliminated unnecessary dependence of Movie::remap_window_corners() &
OBSFRUSTUM::set_relative_Movie_window() on curr_t and pass_number args.

*.  Added image_list_filename, image_sizes_filename, bundle_filename,
camera_views_filename, fitted_world_to_bundler_distance_ratio,
global_az,el,roll and bundler_rotation_origin member vars to PassesGroup
class along with get methods.

*.  Added imageplane_x,y,z,w member vars to PassInfo along with set/get
methods.

*.  In G99VideoDisplay::fill_drawable_geom(), commented out setting of
Geometry's NormalArray with a single normal = 0,-1,0.

============================================================================
White disk TOUCHY2 code changes made on Mon, Nov 23, 2009:

*.  Added camera_views_filename member to PassesGroup along with get
method.

*.  Main program photosynth/SORT_CAMERA_VIEWS takes in a camera views file
generated by BUNDLER_CONVERT.  It sorts the input text file according to
photo ID.  Sorted SIFT feature output is written to
sorted_camera_views.dat.


============================================================================
White disk TOUCHY2 code changes made on Thurs, Nov 19, 2009 & Fri, Nov 20,
2009:

*.  HiresDataVisitor::blank_PagedLOD_child_filename() implements Ross
Anderson's idea for exporting OSG files containing all point cloud, photo,
etc data explicitly within the ascii output file and not references to
filenames on a data disk.  Ross suggests resetting the paged filename to
blank.

*.  In programs TESTCITIES, PANCITIES and VIEWBUNDLER, added
clouds_group.get_HiresDataVisitor_ptr()->setDatabasePager(
MyDatabasePager_ptr);

*.  Eliminated redundant
HiresDataVisitor::set_application_index(Application_Type app)
member function.

============================================================================
White disk TOUCHY2 code changes made on Mon, Nov 16, 2009:

*.  Overloaded param_range::shrink_search_interval() takes in hard min/max
values for the search parameter.  The new search interval is guaranteed to
lie within the interval [hard_min_value,hard_max_value].

*.  Fitted a ground plane to Noah's 2K+ reconstruction.  Figured out roll
angle of 19 degs which takes out the worst of the roll and leads to
reasonable alignment of grid with Noah's point cloud.

============================================================================
White disk TOUCHY2 code changes made on Sat, Nov 14, 2009:

*.  Realized the hard and painful way that we must NOT read in an
image_sizes.dat file when we're only importing a handful of photos into
VIEWBUNDLER.  Otherwise, incorrect U0,V0 image centers throw off alignment
of image planes with view frusta.

*.  In Terrain_Manipulator::set_rotate_about_current_eyepoint_flag(), 
comment out grid_ptr->set_mask(1).  Grid no longer automatically reappears
after we zoom out from a selected OBSFRUSTUM.

*.  In photogroup::read_photographs(), explicitly check if xdim.size() >
passes_group.get_n_passes().  If so, ignore image size info contained
in external image_sizes_filename.

*.  Added mains/photosynth/packagewriter.cc to repository

============================================================================
White disk TOUCHY2 code changes made on Thurs, Nov 12, 2009:

*.  Pass zeroth_xyz=threevector(0,0,0) as explicit argument to
tdpfunc::write_relative_xyzrgba_data() in BUNDLER_CONVERT.  Zach's colored
Boston skyline point cloud then aligns with his reconstructed photos.


============================================================================
White disk TOUCHY2 code changes made on Tues, Nov 10, 2009:

*.  In BUNDLER_CONVERT, we need to eliminate RGBA values from *colors_ptr
whenever we drop a corresponding XYZ point from xyz_pnts.  So introduce
thresholded_colors_ptr to hold RGB counterparts to entries in
thresholded_xyz_pnts.

*.  Added mains/photosynth/README.view_bundler_output to repository

*.  In OBSFRUSTUM::trace_individual_ray(), add z_offset=2 meters to ground
location for point targets.  This fudge models heights for tactically
interesting ground movers such as people & cars.

*.  In LOSServer::set_clock_parameters(), we now return empty reponse msg
rather than 'Clock time step updated'.

*.  Overloaded LOSMODELSGROUP::get_ground_target_visibility() to return
point at which a ray is occluded by some mountain within output threevector
occlusion_posn in addition to an integer visibility value.

*.  Reset game clock to starting time when multi colored rays from air to
single ground target are drawn.  

============================================================================
White disk TOUCHY2 code changes made on Mon, Nov 9, 2009:

*.  Moved several lines out of photogroup::generate_thumbnails() into
photograph::generate_thumbnail().  New method temporarily instantiates a
texture_rectangle and calls this class' generate_thumbnail() member
function.  The output thumbnail file is written to a thumbnails/
subdirectory of the photograph's directory.  And each thumbnail file has a
thumbnail_ prepended to its name.

*.  photogroup::fill_image_filenames_and_sizes() fills and returns STL
vector image_filenames with input photograph names.  It also fills STL
vectors xdim and ydim with horizontal and vertical pixel size information.

============================================================================
White disk TOUCHY2 code changes made on Fri, Nov 6 2009:

*.  mains/photosynth/PHOTO_SIZES reads in a set of photo image filenames.
It instantiates photograph objects for each.  Recall that the photograph
class constructor calls a very expensive OSG method which accurately
computes photo pixel size.  So this program can be used to perform this
expensive photo sizing calculation just once.  Image size results are saved
into output text file image_sizes.dat.

*.  Jennifer Drexler discovered that our resetting the game clock increment
to 10 mins within LOSServer::clear_raytracing_results() lead to a
catastrophic ActiveMQ infinite loop.  So we've commented out the call to
set_clock_params() within this method.  Jennifer has indicated that the
thin client will directly issue a clock reset after raytracing results have
been cleared.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Nov 5 2009:

*. LOSServer::set_raytracing_controls() resets MODEL::raytrace_ROI_flag to
false if input key==TraceOnlyTargets.

.......................

*.  As of 11/5/09, thin client will no longer explicitly send message to
thick client asking for game clock to be reset to first framenumber
whenever raytracing is started.  Instead, we now perform this clock
resetting in LOSServer::set_raytracing_controls().

*.  In all overloaded versions of OBSFRUSTUM::trace_individual_ray(),
extended i_min to 4 for tracing of individual rays from aircraft to ground
targets.  

============================================================================
White disk TOUCHY2 code changes made on Mon, Nov 2, 2009, Weds, Nov 4 2009
and Thurs, Nov 5 2009:

*.  Added mdim=ndim=15 demo values in LOSMODELSGROUP::initialize_skymaps().

*.  Commented out MODEL::broadcast_occlusion_percentage() since such
messages are no longer needed by the LOST thin client as of Nov 2009.

*.  Separated off parse_clock_parameters() from
LOSServer::set_clock_parameters().

*.  No longer compute or use max_Z height array within
OBSFRUSTUM::trace_individual_ray().  Instead, work with max_ground_Z in
this method.  Fixes manifestly wrong all-green raytracing result found by
Jennifer.

*.  In LOSServer::parse_clock_parameters(), reset master world start and
stop times if StartTime key and secs_since_Jan_1970 value are received from
thin client.

============================================================================
White disk TOUCHY2 code changes made on Fri, Oct 30, 2009:

*.  In LOSServer::clear_raytracing_results(), call
LOSMODELSGROUP::set_ray_type(single_air_to_multi_ground).

*.  Overloaded version of
Geometricalsgroup::compute_altitude_dependent_size() in Oct 2009 to meet
the LOST sponsor's demand that SignPosts become quite small as the user
zooms in towards them.  So this method takes in 3 altitudes and linearly
interpolates Geometrical size between the first-second and second-third
pairs.  It also incorporates a zenith-angle amplification factor which
grows as the virtual camera's view deviates more from nadir.  So SignPost
size becomes big enough to easily see when the virtual camera is zoomed
into the aircraft's OBSFRUSTUM.

*.  In LOSMODELSGROUP::visualize_SAM_threatmap(), we indicate danger with
red rather than purple coloring.

*.  Added hue_lo arg to xyzpfunc::convert_zp_to_hue_and_intesity() with
default 0 value.

*.  LOST terrain hues now range from orange to blue rather than from red to
blue.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Oct 29, 2009:

*.  Added Messenger::broadcast_clear_progress().  Call this method in
clear_threat_map() & compute_visibility_flowfield() members of LOSServer.

*.  MODEL::broadcast_current_framenumber() generates an output
ActiveMQ message containing the input framenumber.

============================================================================
White disk TOUCHY2 code changes made on Weds, Oct 28, 2009:

*.  In MODELSGROUP::generate_LiMIT_MODEL(), no longer set
instantiate_OBSFRUSTUMPickHandler_flag to false in order to allow
OBSFRUSTUM picking for ISR demo.  But by default, OBSFRUSTUMPickHandler
instantiation is forbidden.

*.  In LOSServer::get_target_occlusion_fractions(), added call to
unmask_MODELs_and_rays() before call to
draw_colored_multi_air_to_single_ground_rays().  Fixes bug where thick
client didn't display target visiblities after displaying average
raytracing results.

============================================================================
White disk TOUCHY2 code changes made on Tues, Oct 27, 2009:

*.  LOSServer::set_bbox_corners() parses key-value pairs for the lower left
and upper right corners of lat-lon (or MGRS) bounding boxes.

*. LOSMODELSGROUP::initialize_skymaps() instantiates skymap twoDarrays
whose geographic size is set by input lower_left_corner and
upper_right_corner geopoints.

============================================================================
White disk TOUCHY2 code changes made on Mon, Oct 26, 2009:

*.  Eliminated calls to MODELSGROUP::update_display() from LOSServer class
methods.  QTLOS thick client raytracing results now appear in sync with
thin client.

*.  Privatized MODELSGROUP::update_display().

*.  Revert to point cloud's height colormap when displaying
multi-air-to-single-ground rays.

.........................

*.  movers_group::issue_add_track_message() now broadcasts time, lon, lat,
alt, Vx, Vy, Vz for each track point.

============================================================================
White disk TOUCHY2 code changes made on Fri, Oct 23, 2009:

*.  LOSMODELSGROUP::draw_colored_single_air_to_multi_ground_rays() loops
over all ground targets.  If a corresponding LineSegment ray connecting
each ground target to the aerial MODEL does not already exist, this method
instantiates a new member of *LineSegmentsGroup_ptr.  It then sets the
color of the ray equal to black if the target lies outside the aerial
sensor's field-of-regard, red if the target is occluded from the sensor's
view and green if the target is visible to the sensor.

..........

*.  LOSMODELSGROUP::draw_colored_multi_air_to_single_ground_rays() loops
over all sampled flight points.  If a corresponding LineSegment ray
connecting each flight point to the specified ground target does not
already exist, this method instantiates a new member of
*LineSegmentsGroup_ptr.  It then sets the color of the ray equal to black
if the target lies outside the aerial sensor's field-of-regard, red if the
target is occluded from the sensor's view and green if the target is
visible to the sensor.

*.  In MODELSGROUP::generate_LiMIT_MODEL_for_flight_PolyLine(), explicitly
set compute_posns_with_distinct_dirs_flag=false in call to
broadcast_add_track_to_GE_channel().

..........

*.  Implemented multi-air-to-single-ground and single-air-to-multi-ground
colored ray displays in both thin and thick QTLOS clients.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Oct 22, 2009:

*.  Added GraphicalsGroup::get_final_t().

*.  LOSServer::get_target_occlusion_fractions() takes in either integer ID
for some ground target or an input frame number passed as arguments via a
GET request.  In the first case, this method constructs a JSON string
containing an output array with as many entries as there are time steps in
the current flight path.  The array values equal -1 (target lies outside
FOV), 0 (target is occluded) or 1 (target is visible).  In the second case,
this method constructs a JSON string containing an output array with as
many entries as there are ground targets.  The array values again equal -1,
0 or 1.

*.  movers_group::issue_add_track_message() now broadcasts messages with
TIME LONGITUDE LATITUDE ALTITUDE fields for an input track.

..........................

*.  Call LOSMODELSGROUP::clear_target_visibility_map() from
LOSServer::clear_raytracing_results().  Seems to fix black ray bug found by
Jennifer.

============================================================================
White disk TOUCHY2 code changes made on Weds, Oct 21, 2009:

*.  Replaced LineSegmentsGroup::setup_canonical_LineSegment() with
initialize_new_Linesegment().

*.  Eliminated LOSMODELSGROUP::initialize_new_LineSegment()!  Clear
raytracing results no longer leads to seg fault in QTLOS after making this
change.

*.  Coloring of QTLOS rays from airplane to ground targets no longer works!

.....................

*.  After many tedious hours of searching, we finally resolved the
colored ray display problem in QTLOS.  In LOSServer::play_movie(), we now
comment out the last line

//   Aircraft_MODELSGROUP_ptr->get_LineSegmentsGroup_ptr()->
//      set_OSGgroup_nodemask(0);

We're not sure why we ever included this line in this method.  

============================================================================
White disk TOUCHY2 code changes made on Tues, Oct 20, 2009:

*.  Key-value pairs are serialized by thin client in some random way.  So
we cannot assume that the ordering of inputs to the Server corresponds to
the order in which the user entered information into the thin client.
"Latitude", "Longitude" and "Label" keywords therefore have integer indices
appended to indicate ordering.

In LOSServer::set_ground_target_params(), numerical index generally
corresponds to concatenation of all substrings after the zeroth one holding
"Latitude", "Longitude" or "Label" keyword.  After making this change,
labeling and positioning of > 10 ground targets works OK.

*.  In MODEL::broadcast_average_occlusion_fractions(), moved call to
broadcast_subpacket from inside to outside of for loop.

*.  Moved GroundTarget_SignPosts_ptr member out of MODELSGROUP into
LOSMODELSGROUP along with set method.

============================================================================
White disk TOUCHY2 code changes made on Fri, Oct 16, 2009:

*. Added MODELSGROUP::get_even_path_point()

*.  Added Messenger code to return sampled positions along flight path to
LOST thin client via ActiveMQ.

*.  As of Oct 2009, Michael Yee's messenger for the LOST thin client
listens on the "viewer_update" channel.  We recycle summer 2008 touch table
code where we sent UAV track info to Tim Schreiner's GoogleEarth thick
client for the LOST project.  So we now set the GoogleEarth Messenger to
equal the current Messenger if the queue name==viewer_update or GoogleEarth
in EarthRegionsGroup::assign_EarthRegionsGroup_Messenger_ptrs().

*.  LOST thick client now returns progress bar update info to thin client
for threat map generation.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Oct 15, 2009:

*.  Added string Messenger::convert_BytesMessage_to_string(
   const BytesMessage* BytesMessage_ptr).

*.  Ignore self-messages within RTPSMessenger::Onmessage().  

*.  mains/aerialEO/Qt/ANALYSISGROUND is a simulation program for Analyst
workstation receiving byte messages from Alex' ground-air communication
station.  Can now publish byte message from GROUNDANALYSIS and have it
received and decoded by ANALSYISGROUND.

============================================================================
White disk TOUCHY2 code changes made on Tues, Oct 13, 2009:

*.  Thin and thick clients for LOST seem to work OK now for threat map
generation.

*.  stringfunc::string_to_chars() dynamically instantiates a char* array
and fills its contents with the characters from inputstring.  A terminating
null character is automatically added to the end of the char* array.

*.  stringfunc::unsigned_char_array_to_string() takes in an array of
unsigned chars within buffer as well as the number of characters to convert
to an STL string.  It returns the corresponding STL string.

*.  Added get_nbytes_in_BytesMessage() and
convert_BytesMessage_to_unsigned_chars() member funcs to Messenger class.

*.  Created new src/Qt/rtps/RTPSMessenger class.

*.  Starting to handle byte messages.

============================================================================
White disk TOUCHY2 code changes made on Mon, Oct 12, 2009:

*.  Created new /webapps/RTPS repository.

*.  QTEOCITIES appears to work OK on touchy2.

============================================================================
White disk TOUCHY2 code changes made on Fri, Oct 9, 2009:

*.  Added prev_colorbar_index member to PointCloudsGroup along with get
method.

*.  Added set_geolocation() method to photograph class.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Oct 8, 2009:

*.  Added threat map member functions into LOSServer class.  Starting to
see threat map results within QTLOS.  

============================================================================
White disk TOUCHY2 code changes made on Weds, Oct 7, 2009:

*.  LOSMODELSGROUP::compute_target_visibilities_along_flightpath() first
recovers positions for ground target SignPosts.  It then loops over
OBSFRUSTA within input *OBSFRUSTA_ptrs and loads DTED height data covering
their trapezoidal projections onto ground zplanes.  This method raytraces
each ground target and returns line-of-sight results within output STL
vector target_tracing_result.

*.  Eliminated raytrace_occluded_ground_regions_flag member from
LOSMODELSGROUP class along with set method.

*.  TilesGroup::generate_reduced_DTED_ztwoDarray() subsamples the contents
of member *DTED_ztwoDarray_ptr and places the results into member
*reduced_DTED_ztwoDarray_ptr.  This method also destroys any previously
instantiated *reduced_DTED_ztwoDarray_ptr before generating a new one.

*.  All creation and destruction of DTED_ztwoDarrays and
reduced_DTED_ztwoDarrays now takes place in TilesGroup class.

*.  Added terrain_reduction_scale_factor int member to TilesGroup along
with get method.  Set this scale factor = 11 in
TilesGroup::init_member_objs().  Eliminated all transfering of scale_factor
within OBSFRUSTUM and LOSMODELSGROUP methods.

*.  LOSMODELSGROUP::get_target_visibility() returns -2 if no ground target
entry within member *target_visibility_map_ptr is found, -1 if the ground
target lies outside the aerial sensor's field-of-regard at time curr_time,
0 if the ground target is occluded from the sensor's view and 1 if the
ground target is visible to the sensor.

*.  LOSMODELSGROUP::draw_colored_air_to_ground_rays() loops over all ground
targets.  If a corresponding LineSegment ray connecting each ground target
to the aerial MODEL does not already exist, this method instantiates a new
member of *LineSegmentsGroup_ptr.  It then sets the color of the ray equal
to grey if the target lies outside the aerial sensor's field-of-regard, red
if the target is occluded from the sensor's view and green if the target is
visible to the sensor.

============================================================================
White disk TOUCHY2 code changes made on Tues, Oct 6, 2009:

*.  TilesGroup::read_geotif_subtile_height_data() now returns a bool value
indicating whether requested geotif file was successfully opened or not.
Made this critical bug fix after Jennifer Drexler crashed LOS1.0 on laptops
7 and 8.

*.  Separated off SignPostsGroup::get_ground_target_posns() from
LOSMODELSGROUP::initialize_skymaps().

*.  MODEL::compute_dynamic_OBSFRUSTA_and_occlusions() first either
generates or recovers OBSFRUSTA based upon the MODEL's current position and
velocity heading.  It also checks whether raytracing results have been
previously calculated and stored.  If not, this method computes aerial
line-of-sight occlusion within a Region of Interest on the ground.

*.  MODEL::compute_OBSFRUSTA_occlusion() loops over the current MODEL's
OBSFRUSTA and raytraces their fields-of-regard into a Region of Interest on
the ground.  This method stores occlusion score results so that they don't
have to be calculated more than once.  It also resets ColorGeode coloring
to indicate ground regions which are visible and occluded.

*.  OBSFRUSTUM::load_DTED_height_data() first determines the OBSFRUSTUM's
zplane projection.  It then determines which latlong tiles lies inside the
projected frustum's z-plane trapezoid.  This method instantiates
*DTED_ztwoDarray_ptr and then loads it with DTED data from geotif Z-tiles.
*reduced_DTED_ztwoDarray_ptr is also instantiated and loaded with
subsampled height information.

*.  Starting to compute visibilities to individual ground targets in
LOSMODELSGROUP::compute_target_visibilities_along_flightpath().

============================================================================
White disk TOUCHY2 code changes made on Fri, Oct 2, 2009:

*.  Added compute_COM() call in polyhedron::ensure_faces_handedness().

*.  Overloaded version of urbanimage::compute_building_bbox() takes in a
binary mask for some building within *ftwoDarray_ptr as well as its
world-space COM.  It first rotates the mask by -bbox_theta so that it
aligns reasonably well with the XY axes.  This method next computes the
horizontal and vertical profiles of the rotated mask.  After computing the
edges of the profiles, a 3D bounding box is generated whose size,
orientation and position are set so as to (hopefully) snuggly encompass the
original building's binary mask.


============================================================================
White disk TOUCHY2 code changes made on Thurs, Oct 1, 2009:

*.  Privatized texture_rectangle::fill_twoDarray_image().

*.  texture_rectangle::initialize_twoDarray_image() and
fill_twoDarray_image() now both take const twoDarray* args.

*.  Making more progress towards automatically wrapping 3D bbox around
selected NYC skyscrapers.

....

*.  Starting to generate 3D bbox polyhedra in SignPostsKeyHandler.

============================================================================
White disk TOUCHY2 code changes made on Weds, Sep 30, 2009:

*.  Default orientation for LOS lobe is now right-looking so that default
clockwise flight paths have sensor inward-looking.

*.  Commented out capture current movie frame on movie generation tab of
QTLOS thin client.

....................................

*.  Separated off MODELSGROUP::adjust_ROI_Polyhedra_alphas() from
MODELSGROUP::update_display().

*.  Respond to toggling of flowfield from LOS thin client in
LOSServer::compute_visibility_flowfield().

....................................

*.  Replaced mymatrix with rotation in TwoDarray rotation methods.

*.  Working on automatically construct 3D bboxes surrounding specified NYC
skyscrapers.

============================================================================
White disk TOUCHY2 code changes made on Tues, Sep 29, 2009:

*.  Added check on text_refptr.size() and text_refptr[i].valid() into
several text methods in Geometrical class.

*.  polyhedron::generate_point_cloud() loops over all faces and evenly
samples their points.  This method appends each surface point with the
corresponding face normal and returns the pairs of threevectors within an
STL vector.

*.  Added OBSFRUSTAGROUP_ptr member to FeaturesGroup class along with set
method.

*.  Added score member to photograph class along with set/get methods.

*.  Added photograph_ptr member to Movie class along with set method.

*.  ArrowsGroup::display_polyhedron_surface_points() generates an Arrow
vector field representing the input polyhedron's surface points and their
normals.
 
*.  Added vector<pair<threevector,threevector> > surfacepnts_normals member
to polyhedron class along with get method.

============================================================================
White disk TOUCHY2 code changes made on Mon Sep 28, 2009:

*.  ColorbarHUD::reset_scalarbar() can now generate colorbars varying in
value rather than in hue.

*.  Added destroy_all_Movies() to MoviesGroup class.

*.  Renormalize threat map values so that they represent ground areas
within SAM range of aircraft.  Display these values on an absolute colorbar
scale.

*.  Added curr_colorbar_index member to PointCloudsGroup class along with
set method.  Set equal to 2 when SAM threat map is calculated.  Faded
purple colorbar now appears in LOS when threat map is visualized.  

============================================================================
White disk TOUCHY2 code changes made on Fri, Sep 25, 2009:

*.  camera::project_polyhedron_face_into_imageplane() checks whether any of
the projected vertices land inside the current image's boundaries.  If not,
output bool face_inside_imageplane_flag is set to false.

*.  PolygonsGroup::sample_translucent_Polygons() forms a lattice of U,V
pairs inside imageplane_bbox.  It checks whether each lattice site overlaps
any of the translucent Polygon members of *this.  This method returns an
STL vector of (U,V) lattice sites which do lie inside some translucent
polygon.

*.  Added polygon face_poly member to face class.

*.  polyhedron::ray_intercept() takes in the basepoint and direction vector
for some ray.  It loops over every face and checks whether the ray
intercepts any of them.  If so, it computes the distance between the ray's
basepoint and the candidate intercept point on the polyhedron.  This
boolean method returns true if the ray intercepts the polyhedron and the
intercepted point within closest_polyhedron_point.

*.  polyhedron::generate_box() now calls
generate_box_with_rectangular_faces(V) rather than generate_box(V).

*.  After lots of tedious coding, starting to get a quasi-reasonable
(though inefficient) point cloud sampling of polyhedra.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Sep 24, 2009:

*.  Moved specialized NYC demo member function generate_skyscraper_bboxes()
out of OBSFRUSTAGROUP into PolyhedraGroup.

*. Moved backproject_into_world_plane() out of OBSFRUSTUM class into camera
class.

*.  PolygonsGroup::generate_translucent_Polygon() takes in STL vector
vertices containing imageplane (U,V) pairs.  It instantiates a new PolyLine
member of *PolyLinesGroup_ptr to demarcate the polygon's border.  It also
instantiates a new Polygon member this class which holds a translucent
polygon filling the border.

*.  OBSFRUSTUM::project_Polyhedra_into_imageplane() loops over all
Polyhedra within input *PolyhedraGroup_ptr.  It projects each Polyhedron's
faces into the OBSFRUSTUM's image plane.  The projected faces are drawn as
translucent Polygons and returned within output *PolygonsGroup_ptr.
 
*.  Added destroy_all_Polygons() to PolygonsGroup class.

============================================================================
White disk TOUCHY2 code changes made on Weds, Sep 23, 2009:

*.  Reinstated generate_LiMIT_MODEL() and
generate_LiMIT_MODEL_for_flight_PolyLine() in MODELSGROUP class.  Commented
out these methods in LOSMODELSGROUP.  

*.  Added min[max]_allowed_U[V] members to sift_detector class along with
set methods.

...........

*.  Cull SIFT features in FLIR video frames located too near
bottom/top/left edges.

============================================================================
White disk TOUCHY2 code changes made on Mon, Sep 21, 2009:

*.  In LOSServer::set_ground_ROI_params(), explicitly calculate
n_entered_values.  If n_entered_values==0, CLEAR_ROI button was hit in thin
client.  Do not perform min/max long/lat checks in this case.


============================================================================
White disk TOUCHY2 code changes made on Fri, Sep 18, 2009:

*.  EOCITIES is starting to work again on touchy2

*.  Reverted to ancient version of
stringfunc::decompose_string_into_substrings()

.......................

*.  mains/video/MP42FRAMES extracts individual frames from MP4 video clips
as PNG files.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Sep 17, 2009:

*. Added set_DTED_ztwoDarray_ptr() to TilesGroup class.  Call this setter
with NULL ptr in MODELSGROUP::generate_skymaps() after deleting
DTED_ztwoDarray_ptr.

*.  In ArrowsGroup::destroy_Arrow(), we now explicitly remove ConesGroup as
a child from OSGsubPAT before destroying Arrow.

*.  Added progress bar output to thin client display for visibility flow
field computation.

*.  Added get_tomcat_subdir() to MODELSGROUP class.

*.  LOSServer::get_webapps_movies_subdir_pathname() returns a string of the
form 127.0.0.1:8080/LOST/movies/.  No longer hardwire movies subdir into
LOSServer class.  Instead, pull tomcat webapps subdir from
Aircraft_MODELSGROUP_ptr->get_tomcat_subdir().

*.  Write geojson output for visibility flow field s.t. thin client can
also display flow arrows.

.............

*.  camera::compute_focal_param_from_horizontal_FOV() returns f given FOV_u
measured in radians.

============================================================================
White disk TOUCHY2 code changes made on Weds, Sep 16, 2009:

*.  Added TOMCAT subdir info to LOS program.

*.  Added Z1 argument to
PointFinder::find_altitude_given_longitude_and_latitude() with default -100
meter value.

*.  In LOSServer::set_ground_target_parameters(), set
GroundTargets_SignPosts common size to 20.  SignPost height in QTLOS is now
reasonable.

*.  In LOSServer::set_ground_target_parameters(), eliminated PointFinder
determination of SignPost altitude which we empirically found was
unreliable.  Instead, compute distribution of DTED z values and take
maximal value as estimate for SignPost altitude.

*.  Eliminated PointFinder ptr member from LOServer and MODELSGROUP
classes.

*.  Starting to enable creation and destruction of visibility flow fields
in flightpath tab of QTLOS thin client

.........................

*.  Moved nyc_heights_1m.tif file out of mains/new_york into
/data/ladar/RTV/newyork on both touchy2 and vision.

============================================================================
White disk TOUCHY2 code changes made on Tues, Sep 15, 2009:

*.  Starting to split off several members and methods out of MODELSGROUP
into new LOSMODELSGROUP class.  But not sure if original refactorization
approach will work.

*.  Created new pathplanning repository on PHOTON to hold HTML/Javascript
files for LOST project.  

*.  Starting to incorporate flowfield computation into QTLOS.

============================================================================
White disk TOUCHY2 code changes made on Mon, Sep 14, 2009:

*.  Added README.LOST_deployment to projects/README

*.  Moved copley images out of mains/OSG into mains/OSG/images


============================================================================
White disk TOUCHY2 code changes made on Fri, Sep 11, 2009:

*.  MODELSGROUP::write_out_ground_target_posns() exports ground target UTM
coordinates to output text files.  We wrote this method in Sept 2009 in
response to a request from Kenneth King Ho Lee.

*.  MODELSGROUP::write_out_skymap_text_files() exports the current skymap
within *skymap_twoDarray_ptr to an output text file.

......................

*.  

============================================================================
White disk TOUCHY2 code changes made on Thurs, Sep 10, 2009:

*.  Updated README.ubuntu and README.more_postgis_notes

*.  Wrote ISOLATED_OGDF_LAYOUT for Delsey so that she can generate her own
graphs using FMMM algorithm on linux boxes without our code tree.

============================================================================
White disk TOUCHY2 code changes made on Weds, Sep 2, 2009:

*.  Added OSGOPERATIONS_DIR to bigclean & fusionclean in Makefile.

*.  JUSTEARTH and LOS programs are dying on touchy2 inside
postgis_database::parse_table_contents() after poGeometry_ptr is set.
QTLOS worked fine as of 3 pm on Tuesday, Sep 1 on touchy2.  We've seen this
type of catastrophic error before, but we don't remember what made it go
away.  As of Weds, Sep 2, 2009, we've grown completely fed up with Ubuntu
7.10 on touchy2.  So we'll try to seriously upgrade to Ubuntu 8.04 and hope
that this catastrophe on touchy2 goes away...



============================================================================
White disk TOUCHY2 code changes made on Tues, Sep 1, 2009:

*.  Program EXTRACT_OGDF_LAYOUT reads in a Graph Modeling Language (GML)
file generated by OGDF_LAYOUT.  For each node within the GML file,
EXTRACT_OGDF_LAYOUT recovers its ID as well as its 2D X and Y positions
calculated by OGDF.  This program generates a text file containing these
outputs which can be read in by GRAPHJSON.

*.  Program OGDF_LAYOUT parses a text file containing a photo graph edge
list generated by Noah Snavely's BUNDLER program.  It then calls a
graphical layout algorithm within the C++ Open Graph Drawing Framework
(OGDF) library.  As of 9/1/09, we have found that only the Fast Multipole
Multilevel layout algorithm can handle the 25K connected graph coming from
the July 2009 MIT photo collect.  This program outputs the OGDF layout as a
Graph Modeling Language (GML) text file which can be viewed using the yEd
java graph tool.

*.  colorfunc::RGB_to_RRGGBB_hex() takes in r,g,b color values ranging
between 0 and 1.  It first converts each color double into the integer
interval [0,255].  It then converts each integer to its hexadecimal
representation.  The concatenated hexadecimal version is returned.

============================================================================
White disk TOUCHY2 code changes made on Mon, Aug 31, 2009:

*.  Continued to experiment with Boost Graph Library along with other graph
layout libraries downloaded from web.

============================================================================
White disk TOUCHY2 code changes made on Fri, Aug 28, 2009:

*.  Added photo_links_map member to photogroup class along with
add_photo_link() method.

*.  Added UTM_zonenumber member to photogroup class along with set method.

*.  photogroup::write_photo_graph_json_file() generates a JSON text file
containing node and edge information for the photogroup's graph stored
within member STL maps photo_map and photo_links_map.  After the JSON file
is moved into the webapps/photosynth/graphs subdirectory, it can be read in
directly and displayed by Michael Yee's GraphExplorer JAVA program.

*.  Cleaned up latlong2utmfuncs namespace methods a bit...

............

*.  Added mains/graph subdir to repository

============================================================================
White disk TOUCHY2 code changes made on Thurs, Aug 27, 2009:

*.  Generalized tdpfunc::write_relative_xyzrgba_data() to take nodata_value
argument.  When iterating over XYZ and RGB points, check whether they
correspond to nodata values.  If so, don't include them into rel_xyz_data
and rgba_data arrays which are written to output TDP file.

*.  mains/mapping/SID2TIF takes in the names of MrSID files contained
within some text file.  It generates a batch file in which each line runs
LizardTech's MrSID decoding into geotif file output.

*.  mains/mapping/MAtif2UTMtif takes in the names for geotif files which
were converted from MrSID files downloaded from the MASSGIS website.  This
program first write out a call to GDAL_TRANSLATE which rescales the RGB
values from 0 - 255 to 1 - 255.  It next writes out a call to GDALWARP
which reprojects from Massachusetts State Plane to UTM coordinates.  This
program outputs a script file which can be run on multiple geotif files.

============================================================================
White disk TOUCHY2 code changes made on Weds, Aug 26, 2009:

*.  After speaking with Peter Boettcher in G99 this afternoon, we modified
several parameters in our Massivs simulation for the RTPS project.  

*.  Started to generalize RTPS codes to work with Lowell rather than
Milwaukee as experimental region.

============================================================================
White disk TOUCHY2 code changes made on Tues, Aug 25, 2009:

*.  Separated off Terrain_Manipulator::reset_fields_of_view() from flyto()
member function.  This method sets the virtual camera's initial horiz &
vert FOV's to their current FOV's.  Set virtual camera's final horiz & vert
FOV's to member vars final_FOV_u,v if they do not equal dummy -1 values.

*.  Added disallow_zoom_flag to Terrain_Manipulator class along with set
method and default false value.

*.  Added nadir_oriented_compass_flag bool member to CompassHUD class with
default true value and set/get methods.  Added compass_color member to
CompassHUD class with default white value and set method.

*.  GSTREETS program now pops open two windows.  The left window displays a
global overhead view while the right window displays the robot's current
street view.  

============================================================================
White disk TOUCHY2 code changes made on Fri, Aug 21, 2009:

*.  Separated off photogroup::write_json_file() from
photogroup::issue_build_graph_message().

============================================================================
White disk TOUCHY2 code changes made on Thurs, Aug 20, 2009:

*.  PanoramasGroup::identify_next_panorama() takes in pointing direction
vector p_hat for the most recently selected arrow ArmySymbol.  It forms the
direction vectors from the current panorama to its neighbors and compares
with the input pointing direction.  This method returns a pointer to the
neighboring panorama which lies most in the direction of p_hat.

*.  In Terrain_Manipulator::animation_twirl_params(), twirl_R matrix
sometimes has very small entries which can yield NAN entries for twirl_R's
decomposition into n_hat and chi.  So we reset any very small entries in
twirl_R to zero.

*.  We learned from Ross Anderson that OSG's CullFace class can be used to
hide the front or back face of a texture by attaching it to a StateSet.  So
introduce hide_backface_flag bool and CullFace_refptr members in G99VD
class with default false value.  Implement logic to turn off texture back
faces in G99VD::initialize_texture_rectangle().

*.  Added hide_backfaces_flag bool member to MoviesGroup along with default
false value and set method.  Set this flag to true in GSTREETS program.

============================================================================
White disk TOUCHY2 code changes made on Weds, Aug 19, 2009:

*.  Added initial_horizontal[vertical]_FOV member to WindowManager class
along with set and get methods.

*.  Added frac_path_completed member to CustomAnimationPathManipulator
class.  Compute this var as ratio of delta_t to anim path's total time.

*.  Terrain_Manipulator::flyto() now takes in final values for virtual
camera's horiz and vert fields-of-view.

*.  CustomAnimationPathManipulator::update_virtual_camera_FOV() linearly
interpolates the angular scale factor connecting initial and final
fields-of-view.  This method resets the virtual camera's current FOV to the
current interpolated value.

*.  Shortened times for animation paths in
Terrain_Manipulator::generate_animation_path().

*.  Virtual camera's FOV now resets itself to real camera's FOV when it
zooms into a selected OBSFRUSTUM.

*. Added start[stop]_panorama_ID members to PanoramasGroup class.

*.  PanoramasGroup::fade_panoramas() cross fades panorama photos to
simulate forward translation/zooming from one panorama to another.

*.  Added get_camera_rotation() to Custom3DManipulator class.

============================================================================
White disk TOUCHY2 code changes made on Tues, Aug 18, 2009:

*.  Added enforce_el_limits_flag bool param to
rotation::rotation_from_az_el_roll().  If flag==false, el can range outside
[-PI/2,PI/2].

*.  Fixed PanoramasGroup::add_forward_translation_arrows() so that
ArmySymbol arrows are now correctly oriented.

============================================================================
White disk TOUCHY2 code changes made on Mon, Aug 17, 2009:

*.  Trying to debug double clicking in gstreets program.  Trying also to
work with Sarah's latest indoor hallway panoramas.  

...................

*.  In GraphicalPickHandler::find_closest_Graphical_nearby_mouse_posn(),
experiment with setting 3rd component of Graphical_screenspace_posn to
zero.  Also experiment with setting a floor value on the scale s.  If s
becomes too small, it's nearly impossible to pick a Graphical.  So try
forcing s to be at least as large as some reasonable small value.

============================================================================
White disk TOUCHY2 code changes made on Fri, Aug 14, 2009:

*.  Added movie_alpha member to EarthRegionsGroup class along with set
method and default 0 value.  Set movie_alpha=1 in main programs to force
surface texture videos to intially appear.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Aug 13, 2009:

*.  Added ArmySymbolsGroup_ptr member to PanoramasGroup to hold forward
translation arrows.

*.  In OBSFRUSTUMPickHandler::select_OBSFRUSTUM(), do not attempt to select
an OBSFRUSTUM if virtual camera is already located at its vertex!

*.  In OBSFRUSTUMPickHandler, added disallow_OBSFRUSTUM_doubleclicking_flag
member along with set method.

*.  Can now translate forward in GSTREETS via doubleclicking on red forward
arrows.  Added OSG-Data/army_symbols/red_arrow.png to repository.

.........................

*.  Added OSG/packages/CH.pkg to repository for video texture debugging
purposes.

============================================================================
White disk TOUCHY2 code changes made on Weds, Aug 12, 2009:

*.  Added Network<Panorama*> member to PanoramasGroup along with
insert_panorama_into_network(0 and add_panorama_network_link() member
functions.

*.  Added LineSegmentsGroup member to PanoramasGroup to hold network edge
segments.

*.  Custom3DManipulator::get_camera_az() computes the virtual camera's
instantaneous azimuth wrt global +X_hat.  Recall az = 90 if the camera
points along global +Y_hat.  This method returns the azimuth in degrees.

*.  Wrote new PanoramasKeyHandler class.

============================================================================
White disk TOUCHY2 code changes made on Tues, Aug 11, 2009:

*.  Program PANGEN generates package files for panorama panels.  The
panoramas can subsequently be viewed via NEW_FOV.

*.  Program GSTREETS is a variant of "Google Streets" meant for indoor
panorama viewing.

*.  Created osgPanoramas subdir with new Panorama and PanoramasGroup
classes.

============================================================================
White disk TOUCHY2 code changes made on Fri, Aug 7, 2009:

*.  Started to incorporate Alex' ActiveMQ messaging to simulate ground
station to analysis workstation communication flow.

============================================================================
White disk TOUCHY2 code changes made on Thurs, July 30, 2009 & Fri, July
31, 2009:

*.  In Messenger::onMessage(), only getStringProperty for Message_sender_ID
if include_sender_and_timestamp_info_flag==true.  

*.  Today we experienced a near heart attack when we discovered that
thin-to-thick client communication on the newly cloned laptop failed for
the los user account.  On the other hand, QTLOS worked fine for the cho
user on the laptop.  After lots of help from Delsey, we remembered that
firefox on the laptops must always believe it's online even when it's
really offline.  So the Work Offline box must be unchecked!  In order to
force firefox to keep this box unchecked, chant about:config in the main
firefox menu.  Then search for toolkit.networkmanager.disable and toggle
this boolean to true.  

QTLOS seems to work fine after for the LOS account user on the laptop after
we made this critical change.

*.  Removed adding OSGgroups for LongLinesGroup and LatLinesGroup to
LatLongGrid's drawable group from LatLongGridsGroup::generate_new_Grid().
Now perform this operation in LatLongGrid::initialize().  After making this
change, dynamic latlong grid now appears in TESTTEXTURE program.

============================================================================
White disk TOUCHY2 code changes made on Thurs, July 30, 2009:

*.  LOS tool 1.0 is being cloned from laptop #1 to laptop #2.  Perform
checkin today to freeze code for LOS tool 1.0 (pfiles7_30a.tgz)

============================================================================
White disk TOUCHY2 code changes made on Tues, July 28, 2009:

*.  Added latlong_bbox_ptr bounding_box member to LOSServer class.

*.  Ignore customized flight path waypoints lying outside latlong_bbox.

============================================================================
White disk TOUCHY2 code changes made on Mon, July 27, 2009:

*.  Bluegrass demo works OK on touchy2 as of 10:48 am on Mon, July 27.

*.  Added get_min[max]_long[lat]() methods to TilesGroup class.

*.  In javascript function makeGeneralPathRequest(), eliminated irrelevant
references to PointList which holds ground target information rather than
flight path waypoints.

............

*.  Added afghanistan/Qt/README_LOS_DEPLOYMENT.txt to repository.

============================================================================
White disk TOUCHY2 code changes made on Fri, July 24, 2009:

*.  After Tim Schreiner pointed out bad bug, we now perform sanity check on
n_samples in MODELSGROUP::generate_circular_PolyLine_Path().  Reset delta_s
and delta_t s.t. n_samples is at least 10.

*.  Michael Yee added ground target label functionality into QTLOS thin
client.
   
============================================================================
White disk TOUCHY2 code changes made on Thurs, July 23, 2009:

*.  Eliminated Visualization Controls section in LOS controls html file.

============================================================================
White disk TOUCHY2 code changes made on Weds, July 22, 2009:

*.  Thin client pops up alert boxes after user enters aircraft, clock
parameters and current screen shots to give user indication something has
happened in response to entry.

..............

*.  Added movie_counter member to MyViewerEventHandler class.  Initiate its
value at 1.  Also initiate LOSServer::screenshot_counter at 1.

============================================================================
White disk TOUCHY2 code changes made on Tues, July 21, 2009:

*.  Commented out console.log command in LOS_controls_32.html in function
report().  Firebug console logging should NOT generally take place if
firebug is not generally enabled.  After this fix, custom flightpath entry
seems to work OK again in QTLOS.

*.  Modified GraphJSON to take advantage of Michael's latest updates to
GraphExplorer.  GraphExplorer can now read in text file containing entire
1K NYC graph in ~2 minutes.  Interactivity between graph and map tools is
rapid provided edges are turned off in GraphExplorer.

*.  JSON file for photo graph now contains reconstruction metadata
(e.g. camera posn, pointing, focal length).

============================================================================
White disk TOUCHY2 code changes made on Mon, July 20, 2009:

*.  Copied Michael Yee's changes to incorporate "Lat", "Lon" and "MGRS"
into bottom right corner of OpenLayers map in
/usr/local/apache-tomcat-5.5.26/webapps/pathplanning/scripts/OpenLayers-2.7/lib/OpenLayers/Control/MousePosition.js
onto LOS laptop.

*.  In LOSServer::set_sensor_parameters(), call clear_raytracing_results(),
destroy_all_MODELS() and
set_generate_Predator_model_on_next_cycle_flag(true) to force new params to
take effect.

*.  Uncovered serious logic error in
OBSFRUSTUM::raytrace_occluded_ground_region().  Discarded this faulty logic
which was originally implemented for speed purposes only.

*.  Recall that lines of longitude/latitude do NOT correspond to lines of
northing/easting.  Since we raytrace in UTM coordinates but store results
in LongLat coords, we add a small fudge factor in
TilesGroup::update_avg_LOS_tiles() so that LOS tiles overlap to form
complete mosaics.  Previous gaps in time averaged raytracing results are
now filled in.

................................

*.  Extended menu space for MGRS coordinates from size 10 to 14.

*.  GRAPHJSON can now transmit edge color and node thumbnail URL's via
JSON command.

*.  Added base_thumbnail_URL string member to photogroup along with set
command.

============================================================================
White disk TOUCHY2 code changes made on Fri, July 17, 2009:

*.  Changed feature and grid colors back to their normal values.

*.  In LOSServer::clear_raytracing_results(), purge histogrammed average
raytracing fractions from thin client output by broadcasting average
occlusion fractions with clear_results_flag=true argument.

*.  Added min_camera_height_above_grid member to Terrain_Manipulator class
along with set method.  Limit height above grid to 5 km for LOS/QTLOS
programs.

============================================================================
White disk TOUCHY2 code changes made on Thurs, July 16, 2009:

*.  Temporarily changed feature colors from purple to red and grid color
from grey to purple for propagator AVI movie generation purposes.

============================================================================
White disk TOUCHY2 code changes made on Weds, July 15, 2009:

*.  Installed apache-activemq-5.2.0.bin.tar.gz to replace version 4.1.1.
Graphbundler now runs to completion for 1K NYC photo graph.

*.  Set include_sender_and_timestamp_info_flag=false argument to Messenger
constructor in Graphbundler.

============================================================================
White disk TOUCHY2 code changes made on Tues, July 14, 2009:

*.  In OBSFRUSTUM::estimate_z_ground(), explicitly check
sampled_heights.size() > 0.  If not, return NEGATIVEINFINITY sentinel
value.

*.  In LOSServer::set_ground_target_parameters(), now set common geom size
to 100 BEFORE instantiating new SignPosts on earth.  

============================================================================
White disk TOUCHY2 code changes made on Mon, July 13, 2009:

*.  In LOSServer::set_ground_target_parameters(), explicitly check whether
a signal corresponding to Clear Targets was transmitted when the Coordinate
System is in either LongLat or MGRS modes.

============================================================================
White disk TOUCHY2 code changes made on Fri, July 10, 2009:

*.  Call reset_clock_to_starting_time() and clear_raytracing_results() in
LOSServer::set_clock_parameters().

...........................................

*.  Added README.mapserver to repository.

*.  Added links from /usr/local/apache-tomcat to
/usr/local/apache-tomcat-5.5.X on VISION, TOUCHY2 and LOS-UBUNTU.  Changed
hardwired webapps_outputs_subdir in TilesGroup class to the linked name.

============================================================================
White disk TOUCHY2 code changes made on Thurs, July 9, 2009:

*.  Separated apart single PlayPause button into two separate Play and
Pause buttons in Clock Control section of thin client.

*.  MODELSGROUP::generate_circular_PolyLine_Path() now returns PolyLine*
rather than void.

*.  In PolyLinesGroup::regenerate_PolyLine(), now explicitly copy
entry_finished_flag and shrunken_text_label_flag from original to
regenerated PolyLine.  Fixes problem with LiMIT MODEL not being regenerated
when read in from Michael's database.

*.  Changed movie_mpeg.avi to movie_mpeg4.avi globally within
MyViewerEventHandler.

============================================================================
White disk TOUCHY2 code changes made on Weds, July 8, 2009:

*.  Movies autogenerated by QTLOS are now moved into a
"movies_and_screen_shots" subdir on the desktop.

*.  Moved several methods out of OBSFRUSTUM class into new OBSFRUSTUMfuncs
namespace.

*.  Eliminated instantiation of dummy_OBSFRUSTUM in
LOSServer::set_sensor_parameters()

*.  Graphical::reset_all_scores() loops over all instantaneous observations
and over all passes within each observation.  For each non-null
observation, it sets the score equal to the input value.

============================================================================
White disk TOUCHY2 code changes made on Tues, July 7, 2009:

*.  Derive altitudes for ground targets from DTED map using PointFinder.

*.  Added DiamondTouchTable_flag bool member to Custom3DManipulator class
with default false value.  If false, mouse scroll wheel settings are set to
reasonable values for zooming within
Custom3DManipulator::parse_scroll_events() to conform with Windows app
conventions.

*.  Compute time averaged occlusion percentages binned into quartiles.
Return and display these values within thin client.  

============================================================================
White disk TOUCHY2 code changes made on Mon, July 6, 2009:

*.  Removed hardwiring of extremal longs/lats in
TilesGroup::init_member_objs().  Now pass in this info along with UTM zone
via set commands.

*.  No longer hardwire geotif_subdir in TilesGroup::init_member_objects().
Instead pass this string in via set command.

*.  mapping/MERGE_TILES is a quick-n-dirty utility which we wrote in order
to merge together the geotiff files for the RTV NYC ladar data set.  The
total size of the consolidated file is ~250 Mbytes.

*.  Added photogroup* photo_group_ptr member to FeaturesGroup class along
with set method.  Added prev_photo_ID member to FeaturesGroup.

*.  Program PROPAGATOR can now start to identify 2D/3D feature tiepoints
and measure target ranges which vary with camera.

============================================================================
White disk TOUCHY2 code changes made on Fri, Jun 19, 2009:

*.  Added README.activemq to repository.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Jun 18, 2009:

*. Restored ViewFrustum_ptr->compute_params_planes_and_vertices() in 
LatLongGrid::redraw_long_lat_lines(double log_eye_alt,Clock* Clock_ptr).
Dynamic grid on blue marble works again.

*.  OpenLayers map tool within thin client appears to have a bug related to
the shift key.  When the shift key is depressed to allow for rapid zooming
into some area on the 2D map and subsequently released, the signal for the
shift key release is not always successfully transmitted.  This causes our
Custom3DManipulator class to prohibit translation within the thick client.
In order to avoid this catastrophic failure mode, we simply disable shift
within our thick client for the QTLOS main program via
ModeController_ptr->set_allow_manipulator_translation_flag(true).

*.  Deleted convolve.cc from KLT section of Makefile.  Then no longer need
to install ipp libraries onto new linux machines.  Until we need the KLT
routines in the future, this cut makes porting our codes simpler.

*.  Added README.tomcat to repository.

============================================================================
White disk TOUCHY2 code changes made on Weds, Jun 17, 2009:

*.  Added new title functionality to ColorbarHUD class.  Can now control
title's text size as well as its backdrop.  

........................

*.  Renamed generate_AVI_flag member of ModeController class as
hide_Mode_HUD_flag.  Set this flag to true in QTLOS.  

........................

*.  Added viewer_Messenger_ptr member to MODELSGROUP along with get and
assign_MODELSGROUP_messenger_ptrs() methods.

*.  LOS thick client broadcasts its raytracing progress via
viewer_Messenger to thin client which now displays Michael Yee's progress
bar.

*.  Messenger::broadcast_progress() generates an output ActiveMQ message
containing progress percentage information for thin client progress bar
display purposes.


============================================================================
White disk TOUCHY2 code changes made on Tues, Jun 16, 2009:

*.  In Decorations class, add_SignPosts() now takes a bool
instantiate_key_and_pick_handlers_flag which has a default true value.  Set
this flag to false in QTLOS.

*.  Eliminated unused centers_group and CylindersGroup from QTLOS.

*.  Added virtual set_default_Window_X[Y]_origin() methods to Viewermanager
and pure virtual methods to WindowManager classes.

*.  Can now control layout of thin client browser and thick client windows
on desktop.

============================================================================
White disk TOUCHY2 code changes made on Mon, Jun 15, 2009:

*.  rotation::quat_corresponding_to_OSG_quat() takes in a fourvector and
swaps its first and fourth components.  Recall that OSG's quaternion has
the structure (q_x, q_y, q_z, q_w) whereas our quaternions have the
structure (q_w, q_x, q_y, q_z).  So this method converts from OSG's
quaternion convention to ours and vice-versa.

*.  rotation::rotation_corresponding_to_OSG_quat() takes in a fourvector
representing a quaternion according to OSG's (q_x, q_y, q_z, q_w)
convention.  It returns a 3x3 rotation matrix in our x_hat, y_hat, z_hat
basis (which differs from OSG's rotation matrix convention by a transpose).

*.  rotation::OSG_quat_corresponding_to_rotation() returns a fourvector
representing a quaternion in OSG's (q_x, q_y, q_z, q_w) convention
corresponding to the current rotation object.

============================================================================
White disk TOUCHY2 code changes made on Fri, Jun 12, 2009:

*.  Added clearROIForm() function to groundtargets.js

*.  MODELSGROUP::destroy_ground_bbox() deletes member
*ground_bbox_ptr and any Polyhedra within *ROI_PolyhedraGroup_ptr.

*.  Added clear flightpath button for circular orbit entry.

*.  Can now enter all QTLOS length units in nmi.

*.  Return GEOJSON string when ROI bbox & circular flight path is generated
and/or purged.

................................

*.  Generalized xyzpfunc::convert_zp_to_hue_and_intensity() to take hue_hi
as an adjustable final argument rather than hardwiring it to 300 (=
purple).

*.  In ColorGeodeVisitor::color_geometry_vertices(), set final hue for
fused z&p display to blue rather than purple.

*.  Experiment with non-zero volume alpha for OBSFRUSTA.  Also try setting
their color to purple.

*.  Starting to instrument MODELSGROUP::update_display() to make OBSFRUSTUM
volume alpha altitude dependent.

============================================================================
White disk TOUCHY2 code changes made on Thurs, June 11, 2009:

*.  Eliminated LOSServer::set_ground_box_parameters() in favor of
set_ground_ROI_parameters().

*.  geofunc::MGRS_to_long_lat() takes in an MGRS string and returns its
corresponding longitude & latitude coordinates in degrees.

============================================================================
White disk TOUCHY2 code changes made on Weds, June 10, 2009:

*.  Integrated Michael Yee's major thin client upgrades (MSRG coord
display, ActiveMQ message handling, pop-up frame capture screen, etc) with
LOS thick client.  

============================================================================
White disk TOUCHY2 code changes made on Tues, Jun 9, 2009:

*.  LOSServer::set_ground_box_parameters() takes in geocoordinates for the
lower left and upper right corners of a bounding box on the ground which
restricts the sensor's raytracing region of interest.

*. Added ROI_PolyhedraGroup_ptr member to MODELSGROUP class along with set
method.

*.  MODELSGROUP::set_ground_bbox() takes in lower left and upper right bbox
corner coordinates.  It deletes and reinstantiates bounding box member
*ground_bbox_ptr using these inputs.  This method also instantiates a
translucent ROI_Polyhedron at the bounding box location so that the user
can see where it resides within the 3D map.

*.  Added member total_movie_duration to MyViewerEventHandler class along
with get method.

*.  Kevin O'Brian's screen capture capability is almost working perfectly
at this point.

============================================================================
White disk TOUCHY2 code changes made on Mon, Jun 8, 2009:

*. Eliminated call to
filefunc::purge_files_in_subdir(output_imagery_subdir) in
MyViewerEventHandler::end_recording_movie().  This (dangerous!) method is
called in MyViewerEventHandler::begin_recording_movie().

*. Added n_snapped_images member to MyViewerEventHandler class.  Store last
movie's number of images in this variable.

*.  MyViewerEventHandler::retrieve_screen_capture_png_file() takes in a
fraction which should range between [0,1].  It computes the screen capture
file number corresponding to the input fraction and returns the pathname to
the image file.

*.  LOSServer::retrieve_screen_capture_png_file() takes in a fraction
ranging from 0 - 1.  It retrieves a filename of the form
screen_capture00XX.png from ./recorded_video/screen_capture subdir.  It
copies this file to the webapps/pathplanning/screen_captures/ subdir of the
tomcat directory.  And this method returns the PNG file's relative path.

*.  Can now toggle compass display on/off within 3D viewer tab of QTLOS
webpage.


============================================================================
White disk TOUCHY2 code changes made on Fri, Jun 5, 2009:

*.  Moved handling of UPDATE_IPHONE_METADATA messages out of
CylindersGroup::parse_next_message_in_queue() into EarthsGroup.  

*. EarthRegionsGroup::update_blueforce_car_posn() contains
specified_UTM_zonenumber and calls
CylindersGroup::update_blueforce_car_posn().  It can also offset input
iPhone's long/lat coords in order to translate them to Milwaukee map.

*.  Added Polyhedron_ptr member to Cylinder class along with set/get
methods.  Added Cylinder_ptr member to Polyhedron class along with set/get
methods.  Forward declare both objects to avoid circular defn problem.

*.  EarthRegion::track_Cylinder_with_ROI_Polyhedron() checks whether any
mover Cylinder has been selected.  If so, it instantiates a ROI bbox
Polyhedron if bind_ROI_to_selected_Cylinder_flag==true and if such a
Polyhedron does not already exist.  This method also loops through all
Cylinders.  It resets the position of any Polyhedron which is bound to a
Cylinder to the Cylinder's position.

*.  Updated Makefile_w_sift and Makefile_sans_sift.

============================================================================
White disk TOUCHY2 code changes made on Thurs, June 4, 2009:

*.  CylindersGroup::update_track_posn() takes in the track_ID, time and
posn coordinates for some ground mover.  If a Cylinder corresponding to the
track ID doesn't already exist, this method generates a new one.  It then
updates the Cylinder's height based upon member boolean
tall_RTPS_size_flag.  It also resets the Cylinder's and corresponding
track's UTM position.

*.  CylindersGroup::update_blueforce_car_posn() takes in time and position
metadata presumably transmited by an iPhone.  If a (blue colored) Cylinder
corresponding to the iPhone doesn't already exist, this method generates
one.  It then updates the position of the Cylinder and its corresponding
track.

*. GraphicalsGroup::insert_Graphical_into_list() is now a protected rather
than public method.

*.  In QTEOCITIES, set Animation Controller's frame counter offset to equal
-frame_corresponding_to_elapsed_secs.  This ensures framenumbers basically
start at 0 for this real-time application.

*.  Can now view iPhone's position (offset to milwaukee) within QTEOCITIES.

============================================================================
White disk TOUCHY2 code changes made on Weds, June 3, 2009:

*.  Added set_UVW_velocity() and get_UVW_velocity() to Graphical class.

*.  In MODEL::update_NFOV_OBSFRUSTUM_roll_and_pitch(), now call
get_UVW_velocity() rather than unreliable get_velocity().

*.  ImageClient now transmits elapsed secs since 1 Jan 1970 to ImageServer.
ImageServer now uses QDateTime object to convert elapsed secs since 1 Jan
1970 into a QString and then into a conventional STL string.

*.  Added iPhone member variables and get methods into ImageServer for
metadata transmitted by Client/Phone.  Added Messenger members and methods
into ImagerServer for non-Qt communication with non-Qt classes.

*.  Added ImageServer into QTLOS program.

============================================================================
White disk TOUCHY2 code changes made on Tues, June 2, 2009:

*.  In OBSFRUSTAGROUP::reset_frustum_colors_based_on_Zcolormap(), set
selected color = permanent color for OBSFRUSTA.  As of 6/2/09, we do NOT
want OBSFRUSTA in the LOS program to change color when they are selected.

*.  Eliminated unnecessary geode creation in LOSServer::Add_Flightpath().

*.  Overhauled MODEL::compute_dynamic_OBSFRUSTA() s.t. raytracing begins
when Start Raytracing button on Michael Yee's page is pressed rather than
only after play button beginning animation is depressed.

*.  Generalized MyViewerEventHandler::generate_AVI_movie() to
generate_movie(string video_codec).  This method can now output movies
generated with mp1, mp2 and msmpeg4v2 codecs.

*.  Incorporated Topographic Engineering Center C codes for converting
between long/lat, UTM, MGRS, etc coordinates systems into astro_geo
subdir.  Wrapped all these new C methods inside a TEC namespace.

============================================================================
White disk TOUCHY2 code changes made on Mon, Jun 1, 2009:

*.  Added ColorbarHUD_ptr member to PointCloudsGroup class along with set
method.

*.  PointCloudsGroup::update_ColorbarHUD() checks if ColorbarHUD_ptr !=
NULL.  If so, it sets the colorbar's index to 1 for p maps.  Otherwise,
this method sets the colorbar's index to 0 for x,y,z maps.

*.  Made several substantive and cosmetic changes to webpage interface in
advance of tomorrow's demo for sponsor.

============================================================================
White disk TOUCHY2 code changes made on Fri, May 29, 2009:

*.  In MODELSGROUP::update_UAV_track(), cleaned up contorted logic related
to edge_direction computation at final regularized point along flight path.
Also eliminated pushing back onto RPY an extra entry.

*.  polyline::compute_regularly_spaced_edge_points() periodically samples
the polyline and returns points along the polyline within output STL vector
V.  It starts at frac=0 and increments frac until it exceeds unity.

*.  Spacing of UAV position along flight path in LOS program looks more
reasonable now.  Hopefully eliminated bug with OBSFRUSTUM's orientation at
final sample point.

*.  OBSFRUSTUM::raytrace_occluded_ground_region() now stores occlusion
percentages as Graphical scores and returns the occlusion percentage.

*. Added viewer_messenger to LOS/QTLOS main programs.  Broadcast occlusion
percentages at each time frame.  

*.  MODEL::broadcast_occlusion_percentage() generates an output ActiveMQ
message containing occlusion information as a function of simulation time
and OBSFRUSTUM ID.

*.  Specifying min raytracing range works again in QTLOS.

*.  Yellow coloring of ground target SignPosts in QTLOS works again.

*.  Added MODEL::get_raytrace_occluded_ground_regions_flag();


============================================================================
White disk TOUCHY2 code changes made on Thurs, May 28, 2009:

*.  Added ColorGeodeVisitor::get_prob_ColorMap_ptr();

*.  Eliminated ColormapPtrs_ptr member of ParentVisitor class along with
get method.

*.  In MyDatabasePager::UpdateSceneGraph(), no longer retrieve height and
prob ColorMaps from ParentVisitor's ColormapPtrs.  Instead, retrieve
directly from ColorGeodeVisitor.

..................

*.  In AnimationController::set_world_time_params(), reset stop_frame from
start_frame+n_frames to start_frame+n_frames-1.  Time increment in LOS
program now works OK.  Not sure if CH timing may be messed up in bluegrass
demo.

*.  Started incorporating Michael Yee's enhancements to LOS_controls.html.

..................

*.  Fit plane to reconstructed lab interior photos and determined global
az, el, roll needed to bring photos into horizontal Z plane.

..................

*. In optimizer_func::tiepoint_reprojection_score(), currently hardwire
bundler rotation origin for NYC example.  Need to eventually pass this
threevector as a variable parameter in the future.

============================================================================
White disk TOUCHY2 code changes made on Weds, May 27, 2009:

*.  Created new osg/osgOperations subdir.  Moved Operations.cc out of
osgOrganization into this new subdir.  Globally renamed
osgOrganization/Operations.h as osgOperations/Operations.h

*.  All standard programs now properly compile again.

*.  OBSFRUSTUM::compute_corner_rays() takes in OBSFRUSTUM extent angles
alpha and beta (which are functions of az_extent and el_extent) as well as
orientation angles roll (measured from nadir) and pitch along with velocity
direction vector v_hat.  It computes the direction vectors of the
OBSFRUSTUM's four corners and checks whether they all have nonzero
projection along -z_hat.  If so, this boolean method returns true.

*.  LOSServer::set_sensor_parameters() parses the sensor parameter section
of the input HTML form.  It checks whether the entered vertical FOV and
depression angle values are mathematically consistent.

*.  Altitude of UAV's flight PolyLine is now automatically reset in 
LOSServer::set_aircraft_parameters().

*.  In PointCloud::GenerateCloudGraph(), deleted line

     get_DataNode_ptr()->setUserData(ColormapPtrs_ptr);

In ParentVisitor::apply(), deleted line 

         ColormapPtrs_ptr=dynamic_cast<ColormapPtrs*>(
            node_path[i]->getUserData());

VIEWPOINT works again after these two bad lines are eliminated.

*.  Created new mains/photosynth subdir.

*.  Added enumerated Distance_Scale centimeter to Grid class.

*.  Added centimeter-scale settings to AlirtGrid::initialize_ALIRT_grid().

============================================================================
White disk TOUCHY2 code changes made on Tues, May 26, 2009:

*.  Added set_OBSFRUSTUM_roll[pitch]() members to MODEL class.

*.  MODEL::compute_NFOV_OBSFRUSTUM_roll_and_pitch() takes in the
geocoordinates for the narrow field-of-view camera's current ground
lookpoint.  It computes the lookpoint's direction vector relative to the
aircraft's instantaneous position.  This method subsequently decomposes the
look direction vector into a roll about the velocity axis v_hat followed by
a pitch about w_hat = v_hat x z_hat.  It resets OBSFRUSTUM_roll[1] and
OBSFRUSTUM_pitch[1] to these calculated angles.

*.  MODELSGROUP::parse_next_message_in_queue() now handles
UPDATE_NFOV_LOOKPOINT calls broadcast by NFOV_SENDER main program.  NFOV
OBSFRUSTUM is redirected to instantaneous broadcast lookpoint location.

*.  Added velocity member to instantaneous_obs class along with insert,
retrieve, change and delete member functions.

*.  Eliminated height color map option on Raytracing Controls section of
LOS_controls.html.  

*.  Changed permanent color of dynamic OBSFRUSTA for LiMIT FOV to white
to match its selected color.

*.  Started to implement logic to test whether all dynamic OBSFRUSTUM rays
are pointed downwards.  If not, need to reset roll angle (depression
angle).  Needs lots more work...

============================================================================
White disk TOUCHY2 code changes made on Fri, May 22, 2009:

*.  In TilesGroup::update_avg_LOS_tiles(), changed output name for average
LOS longitude-latitude files from avg_LOS_e66n35_ll.tif to
avg_LOS_e66n35_longlat.tif.

*.  In MODEL::import_avg_LOS_ptwoDarray_contents(), reject any geotif files
with 'longlat' in their names.

*.  Initialize member var packet_size to 0 in ImageServer class.

*.  Added LONGLATID_MAP member to ColorGeodeVisitor class.  This map stores
avg LOS ptwoDarray ID as a function of a pair of integer long,lat coords.
ColorGeodeVisitor has methods to insert, clear and print map entries.

*.  MODEL::import_avg_LOS_ptwoDarray_contents() inserts ID entries into
ColorGeodeVisitor's *long_lat_ID_map_ptr based upon long,lat coords
extracted from avg_LOS files.

*.  Added integer p_value and p_counter members to ColorGeodeVisitor class.

*.  Manipulation of averaged LOS composite point cloud is now acceptably
fast.

============================================================================
White disk TOUCHY2 code changes made on Weds, May 20, 2009:

*.  Added double_LiMIT_lobe_pattern_flag and set method to MODELSGROUP.

*.  Added get_n_ptwoDarray_ptrs() method to ColorGeodeVisitor class.

*.  OBSFRUSTUM::get_geotiff_filename() returns a filename containing
OBSFRUSTUM ID and frame number information.

*.  Can now compute and display double-lobed raytrace patterns for LOS
program.

*.  Added maximal[minimal]_value(vector<double> A) to mathfuncs namespace.

*.  Generalized compositefunc::median_pixel_value() to
percentile_pixel_value() which can return mimimum, maximum or median value
depending upon input percentile_sentinel.

*.  Program TESTTEXTURE is seriously messed up!

*.  Streamlined OBSFRUSTUM::raytrace_occluded_ground_region().  

*.  Added missing delete texture_rectangle_ptr to
TilesGroup::update_avg_LOS_tiles().

*.  TwoDarray::pixel_to_threevector() is intended to be a fast
method for retrieving the (x,y,z) vector corresponding to (px,py)


============================================================================
White disk TOUCHY2 code changes made on Tues, May 19, 2009:

*.  Added OBSFRUSTUM_az[el]_extent and OBSFRUSTUM_roll[pitch] member vars
to MODELSGROUP class along with set methods.  Also added
min[max]_raytrace_range member vars with set methods.

*.  Changed latlong_points_inside_polygon member of TilesGroup class from
vector<twovector> to vector<threevector>.  Made several other twovector ->
threevector changes in TilesGroup.  

*.  TilesGroup::individual_latlong_tiles_intercepting_triangle() now takes
in apex and max_range parameters.  This method performs a range test in
addition to checking whether points lie inside OBSFRUSTUM's projected
triangle to minimize number of geotif tiles which must be handled.

*.  In LatLongGridsGroup::update_display(), reduced
max_tilt_angle_from_nadir from 15 to 8 degs.

*.  Added bool use_AWACS_model_flag input param to
MODELSGROUP::generate_LiMIT_MODEL().  If false, display LiMIT as yellow
cessna.

*.  Can now specify single lobe as occuring on left or right side of flight
path.  Started experimenting with computing and displaying double lobe
raytracing results.  But still needs lots of work...

*.  Generalized ImageServer/ImageClient classes so that they can simulate
an iPhone beacon regularly broadcasting its GPS position.

============================================================================
White disk TOUCHY2 code changes made on Mon, May 18, 2009:

*.  Added get_az[el]_extent() methods to OBSFRUSTUM class.

*.  OBSFRUSTUM::convert_FOVs_to_alpha_beta_angles() takes in "horizontal"
and "vertical" field-of-view angles for an OBSFRUSTUM.  The horizontal FOV
lies along the v_hat direction, while the vertical FOV lies along the w_hat
= v_hat x z_hat direction.  This method computes opening OBSFRUSTUM angles
alpha and beta in terms of the input field-of-view angles.

*.  Wrote a high-level overloaded version of
OBSFRUSTUM::build_current_frustum().  It takes in the OBSFRUSTUM's roll
angle away from nadir about the velocity axis.  It also takes in the
subsequent pitch angle along the direction of the velocity axis.  This
method computes the corresponding alpha and beta opening angles
corresponding to the pre-defined horizontal and vertical field-of-view
angles for the OBSFRUSTUM.

*.  MODEL::maximum[minimum]_allowed_vert_FOV() implement the
constraints 0.5*cos(horiz_FOV)+0.5 <= cos(vert_FOV) <=
2*cos(horiz_FOV)-1.

============================================================================
White disk TOUCHY2 code changes made on Sun, May 17, 2009:

*.  Can now specify min/max sensor ranges in LOS_controls.html.  Don't
bother to raytrace ground points lying outside allowed ranges.

*.  Added init_border_width member var and set method in Earth class.
Set init_border_width to 3 in LOS/QTLOS in order to see borders better.

*.  Started to add functionality to change country border color from white
to orange when colormap corresponds to p and greyscale background is
displayed in programs LOS/QTLOS.

============================================================================
White disk TOUCHY2 code changes made on Fri, May 15, 2009:

*.  Eliminated unused osg::ref_ptr<osg::Group> group_refptr member of MODEL
class.

*.  Globally changed all model_ptr to MODEL_ptr in MODELSGROUP class.

*. Renamed subgroup_number as subPAT_number in GraphicalsGroup::
insert_graphical_PAT_into_OSGsubPAT() & insert_OSGgroup_into_OSGsubPAT().

*.  After many hours of frustrating searching, we finally seem to have
found the source for a catastrophic memory problem in
MODELSGROUP::generate_LiMIT_FOV_OBSFRUSTUM().  Eliminate call to

   get_OSGsubPAT_ptr(LiMIT_OSGsubPAT_number)->addChild(
      LiMIT_ptr->get_OBSFRUSTAGROUP_ptr()->get_OSGgroup_ptr())

Earlier call to MODELSGROUP::instantiate_OBSFRUSTUM() already performs
OSG group insertion into subPAT.

...........................

*.  Updated mains/newyork/Qt/SENDIMAGE to include altitude, horiz/vert
uncertainty in metadata for each simulated iPhone photo.

============================================================================
White disk TOUCHY2 code changes made on Thurs, May 14, 2009:

*.  Added mains/newyork/Qt to repository.  Program SENDIMAGE in this new
subdir acts as a simple iPhone simulator which can transmit input photos
plus metadata to a VideoServer.

*.  Moved extract_keyvalue_pairs() out of VideoServer class into base
WebServer class.

*.  Added missing Aircraft_MODELSGROUP_ptr & PointCloudsGroup_ptr members
to LOSServer class.  Can now set aircraft altitude/speed via webform.  

*.  In MODELSGROUP::update_UAV_track(), changed
delta_dist=Predator_speed*dt to UAV_MODEL_ptr->get_speed()*dt so that LiMIT
speed is taken into account for LOS program.

*.  In EarthRegionsGroup::destroy_EarthRegion_video_chip(), check whether
TextureSector_ptr->get_texture_rectangle_ptr() != NULL before attempting to
destroy TextureSector_Movie which was allegedly generated in
generate_EarthRegion_video_chip().

*.  Ross Anderson said that OSG tries to reuse geometries that have already
been sent to the GPU.  So he told us that we need to explicitly call the
dirtyDisplayList() method for the geometry if its 2D texture coordinates
are altered.  If the geometry's 3D coordinates have changed, we also need
to recompute the bounding sphere surrounding the new geometry.  So we need
to call dirtyBound() for the geometry as well.  Both methods are now called
in G99VideoDisplay::dirtyGeomDisplay().  

*.  Added LOS_controls.html to repository which sits in
mains/afghanistan/Qt.

============================================================================
White disk TOUCHY2 code changes made on Tues, May 12, 2009 & Weds, May 13,
2009:

*.  Added vector<pair<string,string>> KeyValue member to VideoServer class.
Separated off several lines from VideoServer::get() method into new
extract_KeyValue_pairs().

*.  Simplified instantiation of OBSFRUSTA for EOCITIES.  Can now specify az
& el extents for WFOV/NFOV OBSFRUSTA when they're instantiated.  Can also
pass instantaneous pointing direction within OBSFRUSTA_yaw and
OBSFRUSTA_pitch members of MODEL class.

============================================================================
White disk TOUCHY2 code changes made on Thurs, May 7, 2009 & Fri, May 8,
2009:

*.  Split off compute_corners_avg_location() from
TextureSector::compute_corner_XYZs().  Explicitly call former method in 
TextureSectorsGroup::generate_TextureSector_geode().

*.  Finished implementing Ross' changes to ImageServer & ImageClient
classes.  OSG producer's event loop may cause significant slowdown.
Incrementing frame number from zero to one definitely causes major
slowdown.

*.  With several ugly hacks, can transfer single ROI 1Kx1K CH chips from
Image Server to Client at approx 2 Hz.

============================================================================
White disk TOUCHY2 code changes made on Thurs, May 7, 2009:

*.  Cleaned up output from mains/afghanistan/fuse_dted_truearth.  We
observed noticeable seams between 1 deg x 1 deg tiles where ptwoDarray =
initial -1 value.  To minimize such seams, we replace the -1 null values
with averages of non-null valued neighbors within *ptwoDarray_ptr.

============================================================================
White disk TOUCHY2 code changes made on Weds, May 6, 2009:

*.  texture_rectangle::read_image_from_char_buffer() implements Ross
Anderson's suggestion to read JPEG, PNG, etc encoded imagery data into a
string stream.  The imagery data could have been sent by Qt across a TCP/IP
connection, read into a QDataArray and subsequently converted into input
char* array *buffer_ptr.  Its size in bytes is specified by input parameter
image_size.  This method converts the char* data into a stringstream and
subsequently into osg Image format via an osgDB::ReaderWriter object.

With lots of help from Ross, we wrote this method in May 2009 for purposes
of reconstructing jpegs within the Analysis program for the Real-Time
Persistent Surveillance project.

*.  image client and server test programs can transfer and display
1000x1000 CH images at approximately 1 Hz.

*.  Created fuse_dted_truearth.cc from fuse_dted_cib in mains/afghanistan.
Generalized former relative to latter.

*.  Overloaded tdpfunc::write_relative_xyzrgba_data(
      string tdp_filename,string UTMzone,
      const twoDarray* ztwoDarray_ptr,const twoDarray* RtwoDarray_ptr,
      const twoDarray* GtwoDarray_ptr,const twoDarray* BtwoDarray_ptr)
which takes in height ZtwoDarray along with EO color info in
RGBtwoDarray_ptr.

============================================================================
White disk TOUCHY2 code changes made on Tues, May 5, 2009:

*.  Added broadcast_NFOV_aimpoint_flag bool member to SignPostsGroup with
default false value along with set method.  Set flag to true in QTEOCITIES.
Aimpoint messages are now transmitted when user instantiates NFOV aimpoints
in QTEOCITIES.

*.  Made more progress on image server & client header info and payload
exchange.

============================================================================
White disk TOUCHY2 code changes made on Mon, May 4, 2009:

*.  As of 5/4/09, we experiment with resetting Mode to previous state after
SignPost insertion is complete in SignPostPickHandler::pick().

*.  Added objects_inside_PolyLine_map_ptr member to PolyLine class along
with instantiation method.

*.  Added member n_repeats to MODELSGROUP class.  Pass this param to
MODEL::compute_dynamic_OBSFRUSTA().  Build n_repeats copies of current
OBSFRUSTUM at current and future times to avoid flickering.

*.  Added PolyhedraGroup_ptr member to EarthRegionsGroup class along with
set method.  Eliminated passing of PolyhedraGroup argument to
EarthRegionsGroup::generate_annotation_boxes().

*.  Moved bbox members and methods out of PolyhedronPickHandler class into
PolyhedraGroup.

============================================================================
White disk TOUCHY2 code changes made on Fri, May 1, 2009:

*.  Added Qt/web/ImageClient class to repository

*.  Started writing mains/aerialEO/Qt/imageclient[server]test.cc to test
TCP/IP transmission of images.

*.  CylindersGroup::generate_BG2_Cylinders() pre-instantiates n_cylinders
Cylinders for the real-time Bluegrass2 project.  Since Cylinder generation
is time consuming, we prefer pre-instantiate some reasonable number at the
time the main program starts up.  Then these cylinders will already be in
place to respond to ActiveMQ messages indicating where they should be
positioned within the Milwaukee map.

*.  Added string label_prefix member to RegionPolyLinePickHandler class
along with set method.  Use this member to label SIA regions in EOCITIES.

*.  Added mains/aerialEO/Qt/BG2buttons.html to repository.

*.  Added destruction member functions to Polyhedron class.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Apr 30, 2009:

*.  track::offset_time_values() adds a constant offset to all time entries
in member STL vector t and STL map *time_map_ptr.

*.  Added time_t initial_truetime,curr_truetime members to Clock class.
Added Clock::set[get]_initial_truetime() methods.

*.  Clock::secs_elapsed_since_initial_truetime() assumes that some main
program has previously called set_initial_truetime().  This method returns
the difference between that time and the current time measured in seconds.

*.  AnimationController::get_frame_corresponding_to_elapsed_secs() returns a
quantized frame number corresponding to the member clock's elapsed
number of seconds since initial truetime.

*.  No longer instantiate Clock object within TESTCITIES, EOCITIES and
QTCITIES.  Instead, instantiate pointer in these programs to
AnimationController's Clock object.

*.  Starting to see truth track Cylinders moving in EOCITIES with their
positions being communicated via ActiveMQ.

*.  Eliminated world_time_string member from AnimationController class in
favor of get_world_time_string() member function.

*.  UTC world time now evenly updates in EOCITIES.

============================================================
White disk TOUCHY2 code changes made on Tues, Apr 28, 2009:

*.  Added UTC clock into EOCITIES.  But time unevenly updates as it's
slaved to frame number.  Need to modify so that it can update according to
local computer time instead.

*.  Created Qt/web/ImageServer class which is a specialized/stripped down
version of WebServer & VideoServer.

============================================================================
White disk TOUCHY2 code changes made on Mon, Apr 27, 2009:

*.  Wrote GraphicalsGroup::get_selected_Graphical_ptr().

*.  PolyhedraGroup::broadcast_bbox_corners() retrieves the currently
selected Polyhedron which we assume is a bounding box.  It extracts the
bbox's central position as well as the relative positions of its 4 (upper)
corners.  This method broadcasts the selected bbox's ID as well as the XY
coordinates of its 4 corners.

============================================================================
White disk TOUCHY2 code changes made on Tues, Apr 21, 2009, Weds, Apr 22,
2009, Thurs, Apr 23, 2009 & Fri, Apr 24, 2009:

*.  Added note regarding cropped image size and successful powerpoint movie
playing within program mains/utilities/CROP_IMAGES.cc

*.  Overloaded tdpfunc::write_relative_xyzrgba_data() to take in a set of
red, green and blue twoDarrays which are assumed to contain EO tif image
information.  It extracts X and Y values from the arrays and writes them
(along with a constant Z=0 height) into the TDP file specified by its input
filename.  This method also extracts corresponding RGB colors and writes
them into the output TDP file.  If the number output points is very large,
this method writes tdp output to a numbered sequence of tdp files.

*.  tdpfunc::get_n_iters() returns the number of iterations which need to
be performed in order for the TDP library to successfully write out all
n_points to file.

*.  In raster_parser::open_image_file(), set ztwoDarray_ptr=NULL at end of
this method if nchannels==3.  We then don't try to delete
ztwoDarray_ptr=RtwoDarray_ptr twice within raster_parser's destructor which
causes a catastrophic seg fault.

.....................

*.  Updated Makefile_sift and Makefile_sans_sift files.

============================================================================
White disk TOUCHY2 code changes made on Sat, Apr 18, 2009:

*.  Color edges in photosynth graph according to number of SIFT features
shared by two linked photos.

*.  Added OBSFRUSTA_photo_network_messenger into BUNDLECITIES.  In 3D
viewer, blink OBSFRUSTA selected via Michael Yee's social network tool.

============================================================================
White disk TOUCHY2 code changes made on Fri, Apr 17, 2009:

*.  Incorporate Michael Yee's THUMBNAIL_URL key, value pair within
photogroup::issue_add_vertex_message().  

*.  Commented out zoomin_prohibited_flag member of Terrain_Manipulator
class along with its set/get methods.  This bool is no longer necessary
given that we can change an OBSFRUSTUM's FOV as Fredo Durand suggested.

*.  Added unerase_all_OBSFRUSTA() to OBSFRUSTAGROUP class.

*.  Starting to add functionality to erase all OBSFRUSTA except selected
ones for program BUNDLECITIES.  Then unerase all OBSFRUSTA when user zooms
away from selected OBSFRUSTUM.

============================================================================
White disk TOUCHY2 code changes made on Mon, Apr 13, 2009:

*.  In second texture_rectangle class constructor, Ross Anderson taught us
that we don't need to instantiate member char* array m_image, for
image_refptr already has data loaded into it when it's instantiated via a
call to osgDB::readImageFile.

*.  Experimenting with using imagemagick's CONVERT to create 25%x25%
thumbnail versions of Noah's photos for loading into BUNDLECITIES.  Can now
at least load in ~300 thumbnails all at once.

============================================================================
White disk TOUCHY2 code changes made on Fri, Apr 10, 2009:

*.  Program mapping/XYZP2ASCII reads in a point cloud from some input XYZP
file.  It writes out an ascii file containing XYZ points on each line.  We
wrote this special utility in April 2009 in order to send NYC points to
Noah Snavely.

*.  Added issue_show[hide]{set}_banner_message() members to photogroup
class which affects Michael Yee's social network tool.

...............

*.  Program newyork/PACKAGEWRITER is a specialized utility which writes out
a script file for running PANCITIES on dozens to hundreds of Noah's
reconstructed photos.

============================================================================
White disk TOUCHY2 code changes made on Fri, Apr 3, 2009:

*.   Renamed MODELSGROUP member Predator_altitude to aircraft_altitude.
Changed set method's name as well.

*.  Added MODELSGROUP::set_LiMIT_speed().

*.  Added setWidth() & setHeight() members to texture_rectangle class.

*.  As of 11:30 am on 4/3/09, we hardwire skymap sizes in
MODELSGROUP::generate_skymaps() to be 31x31.  We have not figured out how
to change this size within this method and have it successfully alter the
TextureRectangle's dims so that the correct image is displayed within
program LOS.  For now, we are fed up with chasing after this problem.  But
in the future, the input skymap.png should be able to have a different
pixel size than the dynamically generated texture rectangle.

*.  MODELSGROUP::generate_skymaps() first reads in the positions for
manually selected ground targets within *GroundTarget_SignPostsGroup_ptr.
After computing the targets' COM, this method instantiates a skymap
twoDarray whose box size is set at 400 km.  It then loops over each pixel
within the skymap and traces rays from the ground targets to the candidate
aircraft location.  Percentage occlusion results are stored within the
skymap as a function of aircraft velocity heading angle.  Individual skymap
results can be viewed as translucent textures floating in the sky.  And all
8 skymaps corresponding to headings varying by 45 degrees are written to
output files.

*.  MODELSGROUP::export_skymap() is a specialized method requested by
Michael Yee for his flight path planning purposes.  Michael requested that
we generate a comma-separated-value text file containing skymap score value
as a function of skymap location and aircraft heading.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Apr 2, 2009:

*.  Added afghanistan/packages/skymap.pkg to repository.

*.  After hours of debugging, we realized that the following line

   base_ptr->get_vertices_handler_ptr()->clear_vertex_map()

must be added into pyramid::reset_square_pyramid_vertices() immediately
prior to the for loop over v ranging from 1 to 4 !!!

*.  In TilesGroup::read_geotif_subtiles_overlapping_triangle(), realized
that we must passively create and destroy raster_parser inside the for loop
over index i rather than outside to avoid a catastrophic memory leak!

============================================================================
White disk TOUCHY2 code changes made on Weds, April 1, 2009:

*.  Tile mismatch problem in Michael Yee's OpenMaps thin client application
appears to have been (partially) solved by using GDALWARP to convert output
PNG files from UTM to long-lat coords.

*.  OBSFRUSTUM::raytrace_ground_targets() takes in a set of ground targets
within input *GroundTarget_SignPostsGroup_ptr.  It first determines which,
if any, of the targets lies inside the OBSFRUSTUM's z-plane trapezoid.
After loading in DTED tiles overlapping the trapezoid, this method next ray
traces the potentially visable ground targets to determine which, if any,
are occluded by terrain.  This method returns the fraction of ground
targets which are visible to the OBSFRUSTUM.

*. Added nontrivial content to operator<< in TextureSector class.

*.  Added minimum_value() member to Tensor class.

*.  Added TextureSectorsGroup::get_MoviesGroup_ptr().

*.  texture_rectangle::fill_twoDarray_image() takes in twoDarray
 *ptwoDarray_ptr which is assumed to hold probability values ranging from 0
to 1.  It transfers the contents of *ptwoDarray_ptr to member char array
m_image.

*.  geometry_func::Point_in_Triangle() implements the barycentric technique
described in http://www.blackpawn.com/texts/pointinpoly/default.html.
This website claims the barycentric technique is faster than the same-side
algorithm.  It works for both input twovectors and threevectors.

*.  Added scanline_buffer[] member array to raster_parser class for speed
purposes.  Set mdim_max=5000 in raster_parser.  

============================================================================
White disk TOUCHY2 code changes made on Tues, Mar 31, 2009:

*.  Added STL vector<twovector> latlong_points_inside_polygon &
prev_latlong_points_inside_polygon members to TilesGroup class. Added
DTED_ztwoDarray_ptr member to TilesGroup.

*.  Added new_latlong_points_inside_polygon_flag member to TilesGroup along
with get method.

*.  In TilesGroup::individual_latlong_tiles_intercepting_triangle(), set
new_latlong_points_inside_polygon_flag to true if current set of integer
latlong coordinates differs from previous set.  Test this bool flag in
TilesGroup::load_DTED_subtiles_overlapping_triangle_into_ztwoDarray()
before spending time instantiating new DTED_ztwoDarray_ptr.

*.  In MODELSGROUP::update_UAV_track(), call polyline member funcs
frac_distance_along_polyline() and edge_direction() to determine
instantaneous velocity vector rather than using difference between
even_path_points.

*.  Overloaded version of MODEL::compute_dynamic_OBSFRUSTUM() takes in a
specified position and velocity direction vector for an aircraft MODEL.  It
constructs a downward oriented OBSFRUSTUM which intercepts an EarthRegion
at presumably four locations.  Raytracing operations can subsequently be
performed using the dynamically altered OBSFRUSTUM.

*.  In TilesGroup::update_avg_LOS_tiles(), convert from UTM to
longitude-latitude coords in order to generate PNG tiles which can be
displayed in Michael Yee's Openmaps thin client.  Call GDALWARP to convert
from UTM to WGS84 coordinates.

============================================================================
White disk TOUCHY2 code changes made on Mon, Mar 30, 2009:

*. Added flv_movie_path string member to MyViewerEventHandler class along
with get method.

*.  LOSServer::generate_JSON_response_to_movie_request() returns a JSON
string to Michael Yee's thin client which should automatically load and
play a FLV movie generated by our 3D thick client.

*.  FLV movie is now autogenerated and autoplays after start and stop
recording buttons on Michael Yee's thin client are pressed and FLV movie is
returned to tomcat webapps subdir.

*.  Added copy constructors to camera, photograph and photogroup and
updated docopy methods in these classes.

============================================================================
White disk TOUCHY2 code changes made on Fri, Mar 27, 2009:

*.  Created new osgTiles subdir of osgTiles.  Moved TilesGroup class out of
osgEarth subdir into this new subdir.

*.  LOSServer::Add_Flightpath() parses post data coming from Michael Yee's
OpenMaps thin client which transmits a LINESTRING containing
longitude,latitude waypoint coordinates.  This method uses the input data
to generate a new PolyLine in *FlightPolyLinesGroup_ptr.

*.  LOSServer::generate_JSON_response() returns a list of averaged LOS PNG
filenames along with their lower-left and upper right geocoordinates in the
form of a JSON string.  After parsing this JSON string, Michael Yee's
OpenMaps thin client can (hopefully) display the averaged LOS PNG files
within a browser.

*.  OBSFRUSTUM::raytrace_occluded_ground_region() checks if member
*DTED_ptwoDarray_ptr is filled with previously calculated LOS
occlusion information.  If not, it extracts the current OBSFRUSTUM's
viewing components and computes the triangle which it projects onto the
ground z-plane.  This method then reads in DTED height information from
pre-calculated geotif tiles into the triangular region.  After masking out
the region in *DTED_ptwoDarray_ptr lying outside the ground triangle, this
method loops over every remaining pixel and shoots a ray from its ground
location towards the OBSFRUSTUM's apex.  The heights of line segment chunks
along the ray are compared with corresponding DTED heights.  If the former
is less than the latter, we assume that the ray must have passed through
some opaque surface and that the ray is occluded.  The contents of
*DTED_ptwoDarray_ptr are written out and averaged LOS probability values
are also updated at the end of this method.

*.  Started to implement 2-way communication between Michael Yee's thin
client and our 3D thick client for flight path and AVI movie generation.

*.  OBSFRUSTUM::trace_individual_ray() takes in the sensor's and ground
target's location in apex and (curr_x,curr_y) in UTM coordinates.  If the
sensor's view of the ground point is occluded by some part of the terrain
in *DTED_ztwoDarray_ptr, this method returns 0.  If the ground point is
visible to the sensor, this method returns 1.  If the ground point lies
outside the sensor's field-of-view, this method returns -1.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Mar 26, 2009:

*.  MyViewerEventHandler::generate_flash_movie() runs the MENCODER program
on a set of images within a specified subdirectory.  It first generates a
movie with an AVI format and MPEG4 codec using parameters chosen for good
intermediary quality output.  It then calls MENCODER again to convert the
intermediate movie into flash SWF format for playback within a web browser.

*.  texture_rectangle::initialize_twoDarray_image() takes in twoDarray
*ptwoDarray_ptr which is assumed to hold probability values ranging from 0
to 1.  It sets the parameters for a texture rectangle to hold a greyscale,
still image version of the input data.

*.  texture_rectangle::convert_greyscale_image_to_hue_colored() reads in
RGBA values which are currently stored wtihin the texture_rectangle's
pixels.  This method assumes n_channels=4 and that initially R=G=B for
every pixel.  It resets the pixels'hues equal to their intensity values
corresponding to their (R,G,B) coordinates spread across the interval
[hue_min,hue_max].  The pixels' saturations and values are both set to
unity.

.............

*.  Started creating osg/osgEarth/TilesGroup class to hold tiling methods
currently sitting in geofuncs namespace.

============================================================================
White disk TOUCHY2 code changes made on Weds, Mar 25, 2009:

*. Globally eliminated all references to MyViewerEventHandler class from
all main programs.

*.  Created new osg/osgWindow subdir and moved
CustomAnimationPathManipulator, MyViewerEventHandler,
SnapImageDrawCallback, ViewerManager and WindowManager files out of osg/
into this new subdir.

*.  Eliminated MyViewerEventHandler::SnapImageDrawCallback class in favor
of new isolated SnapImageDrawCallback class.

*.  Streamlined away several unnecessary member variables and functions
from MyViewerEventHandler class.  Tried to clean up this ugly class as much
as possible.

*.  MyViewerEventHandler::generate_AVI_movie() runs the MENCODER program on
a set of images within a specified subdirectory.  It uses the AVI format
and MSMPEG4V2 codec for the output file.  We have chosen default values for
the bitrate and frame rate for reasonable playback of auto-generated
Afghanistan LOS movies.

============================================================================
White disk TOUCHY2 code changes made on Tues, Mar 24, 2009:

*.  Changed single twoDarray* ptwoDarray_ptr member of ColorGeodeVisitor
class to STL vector ptwoDarray_ptrs.  Added push_back_ptwoDarray_ptr() and
clear_ptwoDarray_ptrs() methods.

*.  filefunc::files_in_subdir_matching_substring() scans through all files
within the specified input subdirectory.  It returns an STL vector of those
filenames which at least partially match the input substring.

*.  MODEL::display_average_LOS_results() loads the average line-of-sight
probabilities stored within longitude/latitude geotif tiles into an STL
vector of twoDarray pointers.  It then pushes these pointers onto
ColorGeodeVisitor member STL vector ptwoDarray_ptrs.  It also resets the
dependent coloring variable to the probability channel.

*.  MODEL::import_avg_LOS_ptwoDarray_contents() recovers all geotif files
whose names start with "avg_LOS" from the geotif_Ptiles subdirectory.  It
purges and regenerates input STL vector avg_LOS_ptwoarray_ptrs and fills
each dynamically instantiated twoDarray* with average LOS data read in from
the geotif files.  If all the data is read in successfully, this boolean
method returns true.

*.  Program LOS can now generate and display reasonable averaged
line-of-sight terrain maps.

*.  Eliminated unused pass_ptr member of MyViewerEventHandler class.

*.  Started to separate out SnapImageDrawCallback class from
MyViewerEventHandler.cc.

....................

*.  Completely eliminated dependence of WindowManager and ViewerManager
classes upon unused pass class.

============================================================================
White disk TOUCHY2 code changes made on Mon, Mar 23, 2009:

*. Added ParentVisitor_refptr member to UpdateColormapCallback class.

*.  ColorGeodeVisitor::apply(osg::Geode) now attaches update/cull callbacks
to each visited geode.  All previous coloring functionality has been moved
into UpdatecolormapCallback::operator().

*.  Ross' colormap callback approach to coloring works very fast!
Near real-time animation of Afghanistan LOS results is now achievable.

*.  Moved tdp2osga.cc from mains/newyork to mains/mapping

*.  Added specified_UTM_zonenumber and northern_hemisphere_flag members to
raster_parser class along with get methods.

*.  Starting to generate reasonable tiled average LOS results.

============================================================================
White disk TOUCHY2 code changes made on Fri, Mar 20, 2009:

*.  WindowManager::remove_EventHandler_refptr() iterates over the STL
list of GUIEventHandler reference pointers.  It searches for an
entry in the list matching the input EventHandler_refptr.  If such
an entry is found, it is erased from the STL list and this boolean
method returns true.

*.  Added OBSFRUSTUMPickHandler_refptr member to MODEL class.  Call
remove_EventHandler_refptr() for this member within MODEL's destructor.

..................

*.  Added specified_UTM_zonenumber, Flight_PolyLinesGroup_ptr and STL
vector of geopoints members to LOSServer class along with set/get methods.

*.  OBSFRUSTUM::extract_viewfrustum_components() returns the apex and
z-plane trapezoidal face polygon for the viewing pyramid located above the
zplane.  It also returns a bounding box enclosing the zplane trapezoid.
Finally, this method computes and returns the geopoints corresponding to
the apex projected into the z-plane and the two radially extremal trapezoid
vertices.

*.  Tried to streamline OBSFRUSTUM::raytrace_occluded_ground_region().

============================================================================
White disk TOUCHY2 code changes made on Thurs, Mar 19, 2009:

*.  Empirically found that it is MUCH faster to use fast rasterization
filling algorithms to mark the OBSFRUSTUM's ground z-plane trapezoid rather
than loop over each pixel and individual test whether it lies inside a
convex polygon.

*.  In ColorGeodeVisitor::color_geometry_vertices(), check contents of
*ptwoDarray_ptr for Afghanistan LOS ray tracing results.  Unit [zero]
probability value within this twoDarray indicates clear [blocked]
line-of-sight.  Set hue of ground voxels for the former [latter] case to
green [red].  Take ground voxels' intensity value to equal metadata coming
from CIB imagery.

*.  Added ModeController_ptr and WindowManager_ptr members to MODELSGROUP
class along with set methods.  Added MODELSGROUP::set_CM_3D_ptr().

*.  Specifically check if VideoType==unknown in
Movie::enable_alpha_blending() and set_alpha().

*.  In final MODEL constructor, now instantiate OBSFRUSTUMPickHandler along
with OBSFRUSTAGROUP.

*.  Added EarthRegionsGroup::get_PointCloudsGroup_ptr();

*.  Traded prev_apex_posn member of OBSFRUSTUM for prev_posn & prev_vhat
members in MODEL.

*.  MODEL::compute_dynamic_OBSFRUSTUM() now can take an PointCloud and
recompute average height for viewing OBSFRUSTUM's z-plane.  

*.  Double clicking on aircraft MODEL OBSFRUSTUM now causes virtual camera
to fly to sensor's location.  Performed several hours of code
refactoring in order to implement this functionality.

============================================================================
White disk TOUCHY2 code changes made on Weds, Mar 18, 2009:

*.  geofunc::individual_latlong_tiles_intercepting_triangles() takes in the
longitude/latitude bounds for a very large map (such as for all of
Afghanistan).  It also takes in the geocoordinates for a triangle located
somewhere within this map.  This method loops over integer pairs of
longitude,latitude coordinates and returns those which lie inside the
triangle.  We wrote this utility in Mar 2009 for fetching geotif tiles
generated from Afghanistan DTED data for raytracing purposes.

*.  geofunc::latlong_bbox_corners_intercepting_triangle() takes in the STL
vector of (longitude,latitude) geocoordinate labels for tiles intercepting
a specified triangle generated by
geofunc::individual_latlong_tiles_intercepting_triangle().  It returns the
lower left and upper right corner geopoints for the bounding box which
encloses all the input tiles.

*.  geofunc::generate_subtile_twoDarray() takes in spacing and bbox corner
information for a tile covering some specified triangle.  It generates and
returns twoDarray *ztwoDarray_ptr which can store DTED height values for
this subtile.

*.  geofunc::read_geotif_subtiles_overlapping_triangle() is a highly
specialized subroutine which we wrote in Mar 2009 in order to read in
geotif files containing Afghanistan/Pakistan DTED height information.  Each
geotif file is assumed to be named like e63n37.tif.  This method first
retrieves all tiles corresponding to the input longitude,latitude
coordinate pairs within latlong_points_inside_triangle.  It then adds their
z values into input *ztwoDarray_ptr created by method
generate_subtile_twoDarray() which is large enough to accomodate all the
input subtiles height data.

*.  geofunc::load_DTED_subtiles_overlapping_triangle() is a high-level
subroutine which outputs DTED height data into a dymically instantiated
twoDarray.  It takes in the longitude/latitude bounds of a large DTED map
(e.g. for all of Afghanistan as well as the maps specified UTM zonenumber.
It also takes in the geocoordinates for a triangle which covers some part
of this map (e.g. the triangle corresponds to the projection of an
OBSFRUSTUM onto the ground plane).  This method instantiates twoDarray
*ztwoDarray_ptr with pixel spacing set by input parameters delta_x and
delta_y.  It fills *ztwoDarray_ptr using the DTED geotif files stored in
subdirectory geotif_subdir and returns its pointer.

*.  In MODELSGROUP::generate_LiMIT_MODEL_for_flight_PolyLine(), reset
base_altitude_above_grid from 3000 meters to 50.

*.  Added threevector prev_apex_posn and twoDarray pointer
DTED_ztwoDarray_ptr members to OBSFRUSTUM class.

*.  Added ptwoDarray_ptr member to ColorGeodeVisitor class along with set
method.  Eliminated unnecessary ColorMatrix member.  

============================================================================
White disk TOUCHY2 code changes made on Tues, Mar 17, 2009:

*.  Added generate_polyline_kdtree_flag bool member to PolyLinePickHandler
with default true value along with set method.

*.  Set nonzero OBSFRUSTUM_ROLL in 
MODELSGROUP::generate_LiMIT_MODEL_for_flight_PolyLine().

*.  SignPostPickHandler::doubleclick() now allows for SignPost message
invocation within RUN_MOVIE mode.

*.  parallelepiped::wrap_bbox_around_segment() takes in threevectors V1 and
V2 which we generally assume have different Z heights.  It projects the
ray running from V1 to V2 into the XY plane.  This method constructs
parallelepiped *this which fits snugly around the ray.  We wrote this
little utility in Mar 2009 for ray tracing purposes.

============================================================================
White disk TOUCHY2 code changes made on Sun, Mar 15, 2009:

*.  Set wiki messenger for Imageplane Signpostsgroup in main program VIDEO.

*.  Hardwire MIT as extra imageplane SignPost info into program VIDEO for
lobby7 video example.

============================================================================
White disk TOUCHY2 code changes made on Fri, Mar 13, 2009:

*.  Started to instrument program VIDEO with SignPostPickHandler and
wiki messenger capabilities.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Mar 12, 2009:

*.  Added new LatLongGridKeyHandler class to repository.

*.  LatLongGridsGroup::update_display() calls
LatLongGrid::turn_off[on]_dynamic_LongLatLines() depending upon camera
Zhat's angle.  

*. Added MyNodeVisitor::initialize_LocalToWorld() which resets LocalToWorld
to identity.  Call this method in PointCloud::reload_colormap_array().

*.  xyzpfunc::convert_zp_to_hue_and_intensity() now clips hue value at red
and purple for heights greater [less] than zmax [zmin] rather than setting
hue to xyzpfunc::null_value.

*.  ColorGeodeVisitor::color_geometry_vertices() now colors points
according to Z, P or a fused combination of the two.  It no longer
generates (useless!) coloring based upon X or Y.

============================================================================
White disk TOUCHY2 code changes made on Weds, Mar 11, 2009:

*. Added ntf InputFileType in Pass class.

*.  Moved raster_parser.cc from osg/osgGIS to image subdir.

*.  Program VIDEO can now display NTF images.

*.  mains/afghanistan/FUSE_DTED_CIB is a specialized fusion program written
to merge Afghanistan DTED tdp files with CIB imagery read in from NTIF
files.

.................

*. Added point_transition_altitude_factor member to PointCloudsGroup class
along with set method.

============================================================================
White disk TOUCHY2 code changes made on Tues, Mar 10, 2009:

*. Dynamic lat/long polylines and text labels restricted to lie inside flat
LatLongGrid area.

*.  Added depth_buffering_off_flag member to LatLongGrid class along with
set method.

............................

*.  EarthRegionsGroup::generate_regions() now takes a bool
place_onto_blue_marble_flag which has default true value.

*.  Added flat_grid_flag and specified_UTM_zonenumber member vars to
postgis_database class along with set methods.

*.  Added mains/afghanistan/packages to SVN repository.

============================================================================
White disk TOUCHY2 code changes made on Mon, Mar 9, 2009:

*.  Consolidated OBSFRUSTUM construction code lines into
private member OBSFRUSTAGROUP::build_OBSFRUSTUM().

*.  Eliminated ViewFrustum_ptr and WindowManager_ptr members from Earth
class.

*.  Eliminated EarthManipulator::compute_screen_center_intercept_ECI() in
favor of Custom3DManipulator::compute_screen_center_intercept().

*.  LatLongGrid::ray_geopoint_intercept_on_grid() traces a ray from the
virtual camera's current position down onto the LatLongGrid.  It returns
the geopoint corresponding to the ray's intersection point with the
LatLongGrid.

*.  Massively overhauled Earth, EarthsGroup, LatLongGrid classes in an
attempt to get dynamic LatLongGrid display working.  As of 6:11 pm, dynamic
grid for JUSTEARTH still works OK.  But TESTCITIES does not display any
dynamic gridding capability...

============================================================================
White disk TOUCHY2 code changes made on Fri, Mar 6, 2009:

*.  Completely eliminated ArgumentParser member var from PointCloudsGroup
and from passing into PointCloud class.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Mar 5, 2009:

*.  MODELSGROUP::initialize_Path_PolyLinesGroup() & 
initialize_Path_PolyLinePickHandler() now check if
Path_PolyLines[PolyLinePickHandler]_ptr==NULL.

*.  Added multiple Messenger_ptr==NULL checks within movers_group member
functions.

*.  In ModelsGroup::update_UAV_path(), check RPY size before attempting to
push back its last element.

*.  Starting to create stripped version of QTCITIES in program PLANNER
which should someday become independent of OSG.  

*.  Starting to write EarthRegionsGroup::generate_empty_EarthRegion().


============================================================================
White disk TOUCHY2 code changes made on Mon, Feb 23, 2009:

*.  Eliminated MiniRayTracer_ptr from FeaturesGroup class.

============================================================================
White disk TOUCHY2 code changes made on Fri, February 20, 2009:

*.  Added filter_alpha_value member to PassInfo class along with set/get
methods.  Added parsing code in PassesGroup for this new external param.

*.  Added filter_alpha_value member to OBSFRUSTAGROUP.  

*.  Added maximal_rho and minimal_allowed_range member vars to PointFinder
class along with set methods.

============================================================================
White disk TOUCHY2 code changes made on Thurs, February 19, 2009:

*.  EarthRegion::clear_all_ROIs() purges the tracks within
*spatially_fixed_tracks_group_ptr, the ROI movers within movers_group_ptr
and the entries within movers_group_ptr's encountered_ROI_IDs.

*.  In EarthRegionsGroup::parse_next_message_in_queue(), added
PURGE_WAYPOINTS command which calls EarthRegion::clear_all_ROIs().

*.  MODELSGROUP::purge_UAV_MODELS_and_tracks() destroys all UAV
tracks, PolyLines and movers.

..............

*.  Added Pdotdot_prev_ptr and alphabetagamma_filter_projection_matrix()
members to camera class.

*.  camera::set_projection_matrix() now uses a-b-c filter rather than a-b
filter to temporally smooth raw input P matrices.

============================================================================
White disk TOUCHY2 code changes made on Weds, February 18, 2009:

*.  EarthRegionsGroup::generate_ROI() takes in a candidate ROI_center
geopoint.  It first checks whether any ROI already essentially exists at
the input ROI's location.  If so, this boolean method returns false.
Otherwise, this method generates a new nominated ROI and returns true.

*.  Added bool compute_posns_with_distinct_dirs_flag input argument to
movers_group::issue_add_track_message().

*.  MODELSGROUP::generate_task_assignments() now dynamically generates and
returns a reduced track containing only waypoint locations for the UAV
corresponding to input UAV_ID.  After these reduced tracks' contents have
been broadcast, we destroy them in
MODELSGROUP::parse_next_message_in_queue().

*.  Eliminated REPLAN_UAV_PATHS message in favor of more general
UPDATE_UAV_PATHS message.

============================================================================
White disk TOUCHY2 code changes made on Tues, February 17, 2009:

*.  Modified ActiveMQ message commands for 2/27 ISAT demo to be more
intuitive.

..........................

*.  Added new constructor and get_UTM_posn() member to geopoint class.

*.  Eliminated recover_UTM_posn() from MODELSGROUP class.

*.  In EarthRegionsGroup::parse_next_message_in_queue(), altered parsing of
ADD_ROI_CENTER/ADD_NEW_WAYPOINT to read long,lat,alt all from one string
rather than from 3 separate strings.

============================================================================
White disk TOUCHY2 code changes made on Fri, February 13, 2009:

*.  In EarthRegionsGroup::generate_PointCloud_EarthRegion(), compute UTM
coordinates for lower left and upper right longitude/latitude corners of
common zone fixed by input ladar point cloud pass.

*.  In LatLongGrid::set_text_character_sizes(), we found that tick and axis
char label sizes for very large EarthRegions (e.g. all of western
Massachusetts) were too small.  So we added a conditional to amplify their
sizes for these large cases.

*.  Created flightpath_sender variant of mains/isds/message_sender
specialized for Feb 27 ISAT demo development purposes.  This program emits
ADD_WAYPOINTS rather than ADD_ROI_CENTER messages.

*.  MODELSGROUP::parse_next_message_in_queue() can now parse ADD_WAYPOINTS
ActiveMQ messages.

*.  Added orig_track_ptr member to mover class along with set/get methods.

*.  In QTCITIES, renamed MODELSGROUP_ptr as Cessna_MODELSGROUP_ptr.

*.  In MODELSGROUP::generate_Predator_Model_for_flight_PolyLine(), set the
new UAV mover's ID equal to the predator MODEL's.

*.  ROI polylines are messed in QTCITIES Bluegrass demo as of 1:32 pm on
touchy2 (pfiles2_13k.tgz).  After an hour of searching, we found that 
--ROI_skeleton_height 350
--ROI_skeleton_color white
lines were missing from lubbock_fused_touchy2.pkg.

*.  Resuscitated mains/OSG/ross_tile.cc back to life.

........................

*.  Added auto_resize_points_size_flag in PointCloudsGroup class along with
set method.  Check this bool's param in PointCloudsGroup::update_display().

============================================================================
White disk TOUCHY2 code changes made on Thurs, Feb 12:

*.  Added OSGREGIONS dir to bigclean and fusionclean in all Makefiles.  

*.  Added new make osgclean to all makefiles.

*.  Moved static_camera_posn_offset member out of OBSFRUSTAGROUP into
MoviesGroup along with set/get methods.

*.  SignPostsGroup::project_SignPosts_into_video_plane() instantiates
member *imageplane_SignPostsGroup_ptr if it does not already exist and
generates a 2D imageplane SignPost for every 3D SignPost within *this.  It
then loops over every 3D SignPost and projects it into the 2D imageplane
for *Movie_ptr.  If the UV coords for the projected SignPost's tip lies
inside the movie's allowed UV range, this method sets the imageplane
SignPost's UV coordinates so that it appears within the movie's viewport.

*.  Lobby7 video sequence is now automatically annotated with SignPosts!

*.  camera::clear_previous_projection_matrices() initializes *P_prev_ptr and
*Pdot_prev_ptr to the zero matrix.

*.  In FeaturesGroup::read_feature_info_from_file(), query user to ask if
input pass numbers should be converted to current passnumber for OSG
display.

============================================================================
White disk TOUCHY2 code changes made on Weds, Feb 11, 2009:

*.  In OBSFRUSTAGROUP::generate_SignPost_at_imageplane_location(),
instantiate stationary imageplane SignPosts at t=t_initial rather than
t=t_curr.

*.  Added SignPostsKeyHandler_ptr member to Decorations class along with
get methods.

*.  Added Movie_ptr member to SignPostsGroup along with set method.

*.  Some catostrosphic error found in Baghdad demo at 1 pm on Weds, Feb 11.
In movers_group::get_mover_network_index(), movers_map_ptr = 0 which is
impossible.  Saved current bad state of code tree in pfiles_2_11d.tgz.

*.  As of 5 pm on Weds, Feb 11, Baghdad demo seems to work OK on touchy2.
Attempt to checkin current version of codes on touchy2.  Saved current,
working code tree in pfiles_2_11e.tgz  

*.  Baghdad demo definitely crashes in SVN version 1720 definitely crashes.

*.  GeometricalsGroup class appears to be culprit for Baghdad demo crash.
When we revert to Feb11e version of GeometricalsGroup but with SVN version
1720, Baghdad demo seems to run OK.

*.  package_subdir and package_filename_prefix appeear to be culprit member
vars within GeometricalsGroup.h that causes Baghdad demo crash.  After
eliminating these member vars, Baghdad demo appears to be OK.

============================================================================
White disk TOUCHY2 code changes made on Tuesday, February 10, 2009:

*.  Eliminated az_extent and el_extent members of camera class in favor of
new FOV_u and FOV_v members.

*.  camera::square_pixel_FOV() computes the FOV for a single square pixel
which is assumed to be precisely centered along the camera's line-of-sight.
Note that pixels located away from the line-of-sight in a rectangular array
have smaller angular extents wrt the camera's center.

*.  camera::compute_fields_of_view() calculates the horizontal and vertical
fields-of-view for an entire image using the focal length and camera center
parameters.  FOV_u and FOV_v are somewhat smaller than n_horizontal_pixels
* square_pixel_FOV and n_vertical_pixels * square_pixel_FOV.

*.  camera::focal_param_corresponding_to_image_rescaling() takes in
parameter rho which represents a scale factor for an image (and also equals
square pixel rescaling factor).  It returns the new focal parameter which
yields the requested angle-space image rescaling in 3D.

*.  optimizer::rescale_focal_lengths() multiplies the focal parameters for
each calibrated photo in *photogroup_ptr by the input scale_factor.  It
then computes in closed-form the compensating relative rotation between
each photo pair which keeps tiepoint pairs aligned.  The focal and rotation
angle parameters are adjusted for each photo's camera.

*.  Separated off GeometricalsGroup::import_package_params() from
OBSFRUSTAGROUP::reset_OBSFRUSTUM_from_packagefile().  This method searches
the subdirectory specified within GeometricalsGroup member string
package_subdir for a package whose filename ends with the current
framenumber.  If it finds such a file, this method attempts to extract both
frustum_sidelength and 3x4 projection matrix entries and returns true.
Otherwise, this boolean method returns false.

..........

*.  Started adding video imageplane manip methods into SignPostsGroup
class.


============================================================================
White disk TOUCHY2 code changes made on Monday, February 9, 2009:

*.  Added static_camera_posn_offset threevector member to OBSFRUSTAGROUP
class along with set method.  Set this threevector to nonzero value for
Lobby7 video sequence in PANCITIES.

*.  When 'g' is pressed in OBSFRUSTAKeyHandler, video OBSFRUSTUM is
recolored red while all other static panorama OBSFRUSTA are colored white.
Virtual camera also flies to video OBSFRUSTUM camera's location.

*.  Added member threevector final_posn to CustomAnimationPathManipulator,
and pass its value via modified constructor.  In this class'
reset_CM_posn_and_orientation() method, we explicitly copy the contents of
final_posn into M (and subsequently recompute Minv) to ensure the Custom
Manipulator's position is reset to the requested final position.

*.  Commented out unused method PointCloudsGroup::get_pt_ptr().

*.  Pressing 'j'/'k' keys in MANIPULATED_FUSED_DATA mode causes
OBSFRUSTAKeyHandler to reset movie downrange distance by -/+ 1%.

*.  OBSFRUSTAGROUP::project_SignPosts_into_imageplanes() loops over every
SignPost within input *SignPostsGroup_ptr and extracts its XYZ tip position
in world-space coordinates.  It then loops over every OBSFRUSTUM within
*this and projects XYZ into each image plane.  For each set of UV
coordinates lying within the valid intervals [Umin,Umax] and [Vmin,Vmax],
this method computes the 3D distance between the projected image plane
SignPost and the panorama camera's position.  It instantiates a new
SignPost for the projection lying closest to the camera.

============================================================================
White disk TOUCHY2 code changes made on Fri, Feb 6, 2009:

*. Added bool fit_external_params_flag to optimizer class along with
set/get methods.

*.  Streamlined and simplified optimizer_func::set_camera_params().

*.  Bundle adjustment for global rotation params is starting to work.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Feb 5, 2009:

*. Added coordinate deletion member funcs to instantaneous_obs class.

*.  instantaneous_obs::change_passnumber() first checks whether input
passnumber p_old exists within STL vector member pass_numbers.  If so, it
copies the UVW coords, vertices, quaternion, scale and score corresponding
to pass p_old onto temporary storage.  This method then deletes from member
STL maps all traces of the pass p_old.  It subsequently inserts the
temporary variables into new instantaneous observations.  Finally, this
method removes p_old from pass_numbers and adds p_new.

*.  optimizer::extract_manual_feature_info() loops over all features within
input *manual_FeaturesGroup_ptr.  It extracts XYZ and UV coordinates for
each manually established tiepoint pair and stores them within member STL
vector XYZ_manual and genmatrices *u_manual_ptr and *v_manual_ptr.

============================================================================
White disk TOUCHY2 code changes made on Weds, February 4, 2009 & Thurs, Feb
5, 2009:

*.  Privatized ViewerManager::get_SceneView_ptr();

*.  TIEPOINTS & PANORAMA pgms work fine on touchy2 with Lobby7 example.

*.  Renamed public FeaturesGroup::set_ntiepoints_matrx() as private
generate_ntiepoints_matrix().

*.  Significantly simplified and reworked
FeaturesGroup::read_feature_info_from_file().

*.  Eliminated FeaturesGroup::read_in_ladar_features().

*.  Added STL vector XYZ_manual and genmatrix ptrs u_manual_ptr,
v_manual_ptr to optimizer class.

*.  optimizer::projection_error() takes in photo index q along with 3x4
projection matrix P which is supposed to project manually selected 3D
feature coordinates stored in member STL vector XYZ_manual onto photo q.
This method returns the summed squared residual between the projected
features and the manually extracted photo coordinates stored within members
*u_manual_ptr and *v_manual_ptr.

*.  Added STL vector<int> pass_numbers member to instantaneous_obs class.

*.  instantaneous_obs::find_first_passnumber_greater_than_input() loops
over the integers within member STL vector pass_numbers.  It returns the
first integer which exceeds input p.  If no such integer is found, this
method returns -1.

*.  Globally renamed
push_back_{UVW_coords},{vertices},{quaternion},{scale},{score} in
instantaneous_obs class as insert_...

*.  Eliminated deque<pair<int,osg::Quat>> multiple_image_attitude member in
instantaneous_obs class in favor of STL map multiple_image_attitude_ptr.
Cleaned up this class' comments.

============================================================================
White disk TOUCHY2 code changes made on Fri, January 30, 2009:

*.  Added camera_posn member to PassInfo class along with set/get methods.

*.  Overloaded
OBSFRUSTAGROUP::generate_still_imagery_frusta_from_camera_params() to read
camera world position from Pass arguments rather than having it explicitly
passed as an input argument.

..............................

*.  sift/PANCITIES is a variant of OSG/TESTCITIES designed to display
photogroup along with ladar point cloud (plus Yahoo surface texture).

..............................

*.  Derived approximate global rotation which maps relative UVW rays to
absolute world-space XYZ rays for Lobby7 example.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Jan 29, 2009:

*.  In OBSFRUSTAGROUP::generate_still_imagery_frusta_from_camera_params(),
add explicit passtype==video check.

*.  Started to write FeaturesGroup::read_in_ladar_features().

============================================================================
White disk TOUCHY2 code changes made on Weds, Jan 28, 2009:

*.  OBSFRUSTUM::generate_SignPost_at_imageplane_location() now forces the
SignPost's pole to lie parallel to the image plane (assuming that the
SignPost's direction approximately equals z_hat).

*. OBSFRUSTAGROUP::generate_SignPost_at_imageplane_location() takes in the
UV coordinates for the tip of a new SignPost to annotate the image plane
within the OBSFRUSTUM labeled by the input ID argument.  This method
instantiates and returns a new SignPosts member of input
*SignPostsGroup_ptr whose cone tip is located at a 3D location
corresponding to UV and which is parallel to the specified image plane.

============================================================================
White disk TOUCHY2 code changes made on Tues, Jan 27, 2009:

*. Added WindowManager_ptr member to OBSFRUSTAKeyHandler class.  Following
Fredo Durand's advice, we now rescale_viewer_FOV by 0.98 [1.02] to
zoom in [out] if Key_Right[Left] is depressed.

*. bool OBSFRUSTAGROUP::reset_OBSFRUSTUM_from_package_file() now returns
true when OBSFRUSTUM has actually been updated.  Also added
prev_OBSFRUSTUM_framenumber member to OBSFRUSTAGROUP class and now check
whether get_curr_framenumber()==prev_OBSFRUSTUM_framenumber.  If so,
reset_OBSFRUSTUM_from_package_file() immediately returns false and no
longer temporally filters OBSFRUSTUM's angular position.  After this fix,
we no longer see mysterious OBSFRUSTUM settling in 3DVIDEO program.

*.  Added int64 denom_factor to FFMPEGVideo class.  

*.  On 1/27/09, we learned the hard and painful way that we need to include
the next two lines into FFMPEGVideo::recompute_nframes(), in order to avoid
mysterious delays between the playback of the Boston skyline video sequence
and the rotation of its OBSFRUSTUM:

   setAndDecodeNextFrame(0);
   setNextFrameIndex(1);

*.  Movie::imageplane_location() takes in a pair of 2D UV coordinates.  It
returns the corresponding 3D point which is displaced in the What direction
relative to the image plane by delta_rho.

*.  OBSFRUSTUM::generate_SignPost_at_imageplane_location() takes in a pair
of UV coordinates along with a *SignPostsGroup_ptr.  It instantiates a new
SignPost at the 3D location corresponding to the UV imageplane coordinates
which is displaced forward in range (along the +What direction).

============================================================================
White disk TOUCHY2 code changes made on Fri, Jan 23, 2009:

*.  GraphicalsGroup::parse_next_message_in_queue() and all of its private
virtual derivatives now returns a boolean indicating whether the message
was handled.

*.  In QTCITIES, instantiate FlightLines_GoogleEarth_messenger to transmit
messages coming from an external "GoogleEarth" sender which contains both
ground target and UAV statevector information.

============================================================================
White disk TOUCHY2 code changes made on Thurs, Jan 22, 2009, & Fri, Jan 23,
2009:

*.  Movers_group::generate_new_vehicle() instantiates a dynamic track to
accompany the new vehicle mover.

*. movers_group::generate_ROI_posns() replaced with more general
movers_group::generate_ground_target_posns().

*.  QTCITIES running for Baghdad demo can now read in Bluegrass truth
tracks & translate/scale them from Lubbock to Baghdad.  The modified truth
tracks can now act as time-dependent ground target inputs for Michael and
Luca's UAV path planning algorithms.

*.  Eliminated unused Grid::is_grid_on() method.

*. Boolean method Grid::point_lies_inside_grid_borders() returns true if
the input point's X and Y values lie within the intervals [xmin,xmax] and
[ymin,ymax].

*.  movers_group::check_for_UAV_ROI_encounters() generalized to
check_for_UAV_ground_target_encounters() which sets
previously_encountered_flags to true for both ROIs and VEHICLES overflown
by UAVs.

*.  In EarthRegion::broadcast_dynamic_tracks(), check whether current
dynamic mover has been previously visited before by some UAV.  If so, do
NOT broadcast dynamic site to ActiveMQ.  Implement this condition so that
UAVs are not directed by Michael Yee's travelling salesman algorithm to
revisit sites which were previously visited by some UAV in the past.

*.  In MODELSGROUP::update_display(), changed get_EarthRegion_ptr(0) to
get_ID_labeled_EarthRegion_ptr(0).

*.  In EarthRegion::propagate_all_tracks(), deleted all references to
(dumb!) member dynamic_tracks_group_ptr. 

*.  Added continuously_plan_UAV_paths_flag member to MODELSGROUP along with
set method.  Also added prev_UAV_path_planning_time member.  In
MODELSGROUP::update_display(), periodically broadcast sensor and target
statevectors to Luca's matlab code if this flag==true.

*.  track::rescale_time_values() stretches all time entries in member STL
vector t and STL map *time_map_ptr by input scale_factor relative to the
track's earliest time.

============================================================================
White disk TOUCHY2 code changes made on Tues, Jan 20, 2009:

*.  SignPost::set_label() positions input_label atop the SignPost.
Additional vertical white space separation between the top of the
SignPost's cylinder and bottom of the input_label text can be specified by
a non-zero value for extra_frac_cyl_height.

*.  SignPostsGroup::generate_new_SignPost_on_video() takes in the UV
coordinates for a SignPost cone tip as well as the extremal UV values for
the associated video plane.  This method generates a SignPost lying within
the UV image plane which is rotated by 0, 90, 180 or 270 degrees wrt its
canonical downward direction.  The rotated orientation is chosen so as to
minimize the SignPost's overlap on top of the video image.

============================================================================
White disk TOUCHY2 code changes made on Weds, Nov 26:

*.  Moved all SKSDataServer war files out of /usr/local/apache-tomcat-5.5.26
into /usr/local/apache-tomcat-5.5.26/webapps

*.  Installed JDK1.6.0_10 into /opt/java.  

*.  Made minor changes to QTCITIES to help Karyn grab some screenshots.

*.  QTCITIES works OK on touchy2 as of Weds, Nov 26 at 5 pm.

============================================================================
TOUCHY2 code changes made on Tues, Sep 16:

*.  Baghdad and Bluegrass demos appear to run OK on touchy2 red disks as of
3:15 pm on Tues, Sep 16, 2008 (pfiles9_16a.tgz)

*.  Final check in from touchy2 before red disks go classified.

============================================================================
TOUCHY2 code changes made on Mon, Sep 15:

*.  Added export note to README.svn_commands.

*.  Renamed mains/bluegrass/AVS/menu_buttons_local.html as
bluegrass_buttons_local.html

*.  In MODELSGROUP::parse_next_message_in_queue(), explicitly check whether
returned track_ptr==NULL before broadcasting it to GE channel.

*.  In MODELSGROUP::generate_task_assignments(), we explicitly check
whether input ROI_ID values < 0.  If so, this method returns a NULL track
ptr.

*.  In MODELSGROUP::broadcast_sensor_and_target_statevectors(), check
whether any dynamic and spatially fixed ground tracks exist.  If not, do
not broadcast any sensor and target statevector information, for Michael
Yee's traveling salesman module is expecting to receive at least one ground
target.  In the future, we may need to relax this constraint if/when other
modules interested only in air vehicle tracks are listening.

*.  Privatized movers_group::insert_mover_into_network().

*.  movers_group::get_next_unused_ID[network_index]() loops over all
entries within movers_map_ptr.  It returns the smallest integer which does
not correspond to any mover ID [network_index] within the map.

*.  In movers_group::generate_new_mover(), set ID=get_next_unused_ID()
rather than size().  Deletion and recreation of UAVs in Baghdad demo now
seems to work OK after this bug fix.

*.  Added vector<Graphical*> get_all_Graphical_ptrs(), get_all_MODEL_ptrs()
and get_all_PolyLine_ptrs().  These methods may not be necessary.  

============================================================================
TOUCHY2 code changes made on Thurs, Sep 11:

*.  In MODELSGROUP::update_UAV_track(), assign UAV flight path's RGB color
to UAV_track.  

*.  Renamed movers_group::issue_generate_track_message() as
issue_add_track_message().  Broadcast 'ADD_TRACK' rather than
'GENERATE_TRACK' verb.  Added movers_group::issue_delete_track_message().

*. In movers_group::issue_add_track_message(), broadcast track's
label_ID and RGB color.

*.  MODELSGROUP::broadcast_delete_tracks_to_GoogleEarth_channel() issues
delete message(s) encased by START[STOP]_PACKET messages.  Delete track
messages are now broadcast whenever individual or entire sets of tracks are
cleared.

..........................................................

*.  Updated Makefile_debug.

*.  Started to eliminate sources for as many g++ compiler warning messages
as possible.

============================================================================
TOUCHY2 code changes made on early am Thurs, Sep 11:

*.  track::compute_posns_with_distinct_directions() first recomputes all
track line segments.  It next pushes the first track position onto local
STL vector posns_with_distinct_directions.  This method subsequently loops
over all intermediate line segments and compares their direction vectors
with the last one stored in distinct_directions.  If they are different, it
pushes the corresponding track posn onto posns_with_distinct_directions.
Finally, this method pushes the last track position onto
posns_with_distinct_directions and returns the STL vector.

*.  MODELSGROUP::broadcast_track[s]_to_GoogleEarth_channel takes in
track_ptr [vector<track*>].  It first broadcasts a START_PACKET message on
the GE channel.  This method then generates a message containing the
track[s] longitude,latitude coordinates.  Finally, it broadcasts a
STOP_PACKET message.

*.  Eliminated MODELSGROUP::issue_last_track_message() in favor of
broadcast_track_to_GoogleEarth_channel()

============================================================================
TOUCHY2 code changes made on Weds, Sep 10 & Thurs, Sep 11:

*.  In MODELSGROUP::generate_flight_PolyLine_among_ROIs(), explicitly
initialize UAV_posns with UVW_coords for UAV_MODEL_ptr corresponding to
get_curr_t().

*.  Added track::purge_all_values().  Call this method in
MODELSGROUP::update_UAV_track().

*.  MODELSGROUP::generate_flight_PolyLine_among_ROIs() now returns a ptr to
the new PolyLine rather than void.  The original input PolyLine ptr is set
to NULl by this method.

*.  MODELSGROUP::generate_task_assignments() now performs a more
brute-force but intelligent sanity check on input UAV_ID value. 

*.  In OSGButtonServer::clear_UAV_paths(), reset selected_PolyLine_ID to -1
after destroying selected PolyLine.

*.  Pass track rather than mover ptr as last argument in
movers_group::issue_generate_track_message().

*.  track::compute_posns_with_distinct_velocities() fills member STL
vectors posns_with_distinct_velocities & distinct_velocities with the first
and last posn and velocity threevector values.  It also includes
intermediate track positions and velocities if they are not nearly equal to
their immediate predecessors.

*.  Experimenting with calling track::compute_decimated_posns() rather than
track::get_distinct_posns() in movers_group::issue_generate_track_message()

============================================================================
TOUCHY2 code changes made on Mon, Sep 8:

*.  Added secret_flag member to FOUOHUD class.  When true, write SECRET
rather than FOUO message in upper right corner.  Can set secret flag in
FOUOHUD constructor within VIDEOCITIES and QTCITIES.

*.  Added few more notes to README.Baghdad_demo following this morning's
testing with Tim Schreiner.

*.  Can specify skeleton color for both manually entered and auto nominated
ROIs within QTCITIES.

*.  Call private method MODELSGROUP::add_flight_path_arrows() for both
manually entered and auto generated UAV PolyLines.

*.  Hardwired random set of (long,lat) coords into message_sender in order
to have interesting set of Baghdad ground targets for UAVs to service in
QTCITIES.

============================================================================
TOUCHY2 code changes made on Fri, Sep 5:

*.  Set producer_ptr=NULL in Messenger::initialize_member_objects().
Eliminates core dumps at end of TESTCITIES after escape is pressed.

*.  Replaced all instances of deprecated finite() math function with
isfinite() instead.  Eliminated irrelevant basic_math::myfinite() method.

============================================================================
TOUCHY2 code changes made on Weds, Sep 3:

*.  Added SELECT_UAV button to UAV Control menu.  

*.  Added most_recently_added_ID member to GraphicalsGroup along with get
method.  Set this member variable in
GraphicalsGroup::insert_Graphical_into_list().

*.  In MODELSGROUP::update_display(), assign most recently added PolyLine's
ID to new UAV MODEL.  

*.  Can now delete individual UAVs irrespective of the order in which they
were instantiated.

*.  Moved several Flight_PolyLinePickHandler initialization commands out of
VIDEOCITES & QTCITIES into
MODELSGROUP::initialize_Path_PolyLinePickHandler().

*.  Added polyline::get_last_vertex() method.

*.  polyline::find_edge_containing_point() loops over every edge within the
polyline and tests whether the input point lies along it.  If so, this
method returns the edge index.  Otherwise, it returns -1.

*.  polyline::frac_distance_along_polyline returns -1 if the input
currpoint does not lie along the polyline.  Otherwise, it returns
currpoint's fractional distance starting from the zeroth vertex.

============================================================================
TOUCHY2 code changes made on Tues, Sep 2:

*.  Cleaned up and privatized instantiate_OBJECT and select_OBJECT members
of several PickHandler classes.  Latter method returns bool value
(selected_OBJECT_ID > -1).

*.  Eliminated unused LineSegmentPickHandler from Makefile.

*.  Added bool member allow_manipulator_translation_flag to ModeController
class along with set/get methods.  Default value = false.

*.  We want users in MANIPULATE_POLYLINE mode to be able to both translate
the background map as well as select UAV PolyLines via single picks.  So if
pick_flag==false in the PUSH case of PickHandler, we set ModeController's
allow_manipulator_translation_flag to true so that the left button mouse
event can fall through to Custom3DManipulator to be handled as a
translation.

*.  Changed location of PickHandlerCallbacks_ptr != NULL check in
MODELPickHandler::select_MODEL() and
CylinderPickHandler::select_Cylinder().
 
============================================================================
TOUCHY2 code changes made on Mon, Sep 1:

*.  Changed colors for 4 predators in
OBSFRUSTUM::set_UAV_OBSFRUSTUM_colorings(int UAV_ID) &
MODELSGROUP::UAV_flight_path_color(int UAV_ID).

*.  Use dark_predator.osg rather than mypredator.osg.  Former stands out
better against Baghdad point cloud.

*.  Added Decorations::get_last_MODELPickHandler_ptr().

*.  Added MODELPickHandler::doubleclick() &
MODELSGROUP::follow_selected_MODEL().  Can now double click on a moving UAV
and have TerrainManipulator center virtual camera and follow MODEL over
time until next double click.

*.  track::get_distinct_posns() now calls compute_distinct_posns() if
distinct_posn.size()==0.

*.  Added STL vector posns_with_distinct_velocity member and
compute_posns_with_distinct_velocities() to track class.

*.  Longitude, latitude, altitude coords for coarse UAV track are now
broadcast on GoogleEarth channel following completion of UAV path entry in
QTCITIES.

============================================================================
TOUCHY2 code changes made on Fri, Aug 29:

*.  Replaced postgis_db with postgis_db_ptr in QTCITIES & TESTCITIES.

============================================================================
TOUCHY2 code changes made on Mon, Aug 18:

*.  Fixed some main programs broken by massive refactoring of
G99VideoDisplay class into texture_rectangle class & G99VD.

============================================================================
TOUCHY2 code changes made on Mon, July 28:

*.  Changed earth_filename from hires_earth.osga to earth_bright60.osga in
JUSTEARTH and EARTH programs.

============================================================================
TOUCHY2 code changes made on Weds, July 2:

*.  Delsey changed name of former 'bluegrass' database to 'bluegrass_gis'
on touchy2, touchy and ISDS3D.  We have modified touchy_lubbock_GIS.pkg to
reflect this change.  

============================================================================
TOUCHY2 code changes made on Tues, July 1:

*.  Added changes_touchy2.txt to repository.

*.  Ross Anderson taught us that we cannot increment map_iter within the
for loop in Earth::update_lines_map() after the erase line is called.
map_iter++ is no longer defined after the erase command is executed!  So we
instead live with the ugly hack of looping over the iterators within a
local STL vector map_iters which are unaffected by the erase command.

........................

*.  Cleaned up filefunc::files_matching_pattern() by initializing globbuf 
structure to zero, printing error message if glob call return value != 0,
and freeing dynamically allocated memory in globbuf object before it goes
out of scope.

