============================================================================
ISDS3D code changes made on Tues, Oct 28:

*.  ISDS demos and standard pgms seem to work OK as of Fri, Nov 14 at 7 pm 
on ISDS3D laptop (pfiles11_14c.tgz)

============================================================================
ISDS3D code changes made on Tues, Oct 28:

*.  Cleaned up rotation::rotation_sanity_check().  In particular, now
explicitly call ::nearly_equal() rather than nearly_equal member of Tensor
class!

*.  ISDS demos and standard pgms seem to work OK as of Tues, Oct 28 at
11:30 am on ISDS3D laptop (pfiles10_28b.tgz)

============================================================================
ISDS3D code changes made on Mon, Oct 27:

*.  ISDS demos and standard pgms seem to work OK as of Mon, Oct 27 at 11 am
on ISDS3D laptop (pfiles10_27a.tgz)

============================================================================
ISDS3D code changes made on Sat, Oct 18 & Sun, Oct 19:

*.  In OBSFRUSTAGROUP::update_display(), uncommented
MoviesGroup_ptr->update_display().  ESB video now plays again in NYC demo.

*.  Added libxml to QT .pro files in mains/bluegrass/AVS.

*.  ISDS demos and standard pgms seem to work OK as of Sat, Oct 18 at 6:45
pm on ISDS3D laptop (pfiles10_18b.tgz)

*.  Graphical::consolidate_instantaneous_observations() takes in time t
along with *other_graphical_ptr.  It constructs the union of the
instantaneous observations for both graphicals corresponding to time t.

*.  GraphicalsGroup::consolidate_instantaneous_matching_observations()
consolidates instantaneous observations for all Graphicals with matching
IDs.

*.  GraphicalsGroup::find_nonmatching_IDs() performs a brute force search
over all Graphicals within *other_GraphicalsGroup_ptr and *this.  It
returns an STL vector containing the IDs of those Graphicals within the
former which do not exist within the latter.

*.  FeaturesGroup::consolidate_instantaneous_observations() first
determines which features within *other_FeaturesGroup_ptr have no matching
counterpart in *this.  It instantiates new features in *this to match those
in *other_FeaturesGroup_ptr.  This method then consolidates matching
instantaneous observations from *this and *other_FeaturesGroup_ptr.

============================================================================
ISDS3D code changes made on Mon, Oct 6:

*. In movers_group::purge_all_particular_movers(), reset latest_ROI_ID to
-1 so that ROI number restarts at 0 after CLEAR ROIs button is pressed.

*.  Renamed FOUOHUD class as ClassificationHUD.

*.  In movers_group::issue_add_vertex_message(), commented out section
which broadcasts red, green & blue values individually.  Michael's Oct 3
version of GraphExplorer now supports consolidated 'RGB COLOR' key.

*.  EarthRegion::generate_nominated_ROI() and
PolyLinesGroup::issue_add_vertex_message() now take in an annotation_label
string argument for labeling ROI nodes in Michael's GraphExplorer tool.

*.  ISDS demos and standard pgms seem to work OK as of Mon, Oct 6 at 3:30 pm 
on ISDS3D laptop (pfiles10_6f.tgz)

============================================================================
ISDS3D code changes made on Sat, Oct 4 & Sun, Oct 5 & early, Mon Oct 6:

*.  Eliminated secret_flag member of PassesGroup in favor of more general
classification member which takes unclassified, FOUO and secret states.

*. Moved adding of Movie PAT to OBSFRUSTUM PAT out of
MODELSGROUP::instantiate_OBSFRUSTUM() into
OBSFRUSTAGROUP::initialize_new_OBSFRUSTUM()

*.  Eliminated OBSFRUSTUM_ptr->get_PAT_ptr()->addChild(
Movie_ptr->get_PAT_ptr()) from OBSFRUSTAGROUP::generate_movie_OBSFRUSTUM(),
for it's made within OBSFRUSTAGROUP::init_new_OBSFRUSTUM().

*.  In PolyLinesGroup destructor, call remove_OSGgroup_from_OSGsubPAT() for
Intersection_PointsGroup and then explicitly delete
Intersection_PointsGroup_ptr.

*.  Added GeometricalsGroup::remove_bunched_geometries_from_OSGsubPAT().

*.  ISDS demos and standard pgms seem to work OK as of Sun, Oct 5 at 8 am 
on ISDS3D laptop (pfiles10_5c.tgz)

*. Added bool dynamically_instantiated_polyhedron_flag member to Polyhedron
class.  Only delete polyhedron_ptr in destructor if this flag==true.

*.  In GraphicalsGroup destructor, call new method
AnimationController::unregister_GraphicalsGroup().

*.  Moved instantiation of Nimages camera objects out of
Movie::allocate_member_objects() into private method
instantiate_cameras_for_images().  Latter method is called by
get_camera_ptr(imagenumber) and read_camera_params_for_sequence() if
camera_ptrs.size()==0.

*.  Movie::get_camera_ptr() now calls get_camera_ptr(imagenumber).

*.  Streamlined MODELSGROUP::generate_new_Model() s.t. it now calls
insert_graphical_PAT_into_OSGsubPAT(curr_Model_ptr,OSGsubPAT_number).

*. In MODELSGROUP::generate_predator_OBSFRUSTUM(), eliminated redundant and
WRONG adding of predator MODEL OBSFRUSTAGROUP's OSGgroup_ptr to
OSGsubPAT_ptr.  This is already performed within instantiate_OBSFRUSTUM()
which is called by the former method.

*.  In MODELSGROUP::destroy_MODEL(), eliminated explicit call to
OBSFRUSTAGROUP_ptr->destroy_all_OBSFRUSTA().  Instead, MODEL destructor now
successfully calls delete OBSFRUSTAGROUP_ptr.

*.  ISDS demos and standard pgms seem to work OK as of Mon, Oct 6 at 7 am 
on ISDS3D laptop (pfiles10_6b.tgz)

============================================================================
ISDS3D code changes made on Thurs, Oct 2 & early Fri, Oct 3:

*.  In MODELSGROUP::UAV_flight_path_color() and
OBSFRUSTUM::set_UAV_OBSFRUSTUM_colorings(), extended number of colors from
4 to 10.

*.  In OSGButtonServer::clear_UAV_paths(), now explicitly delete UAV tracks
when UAV models are destroyed.

*.  Overloaded operator<< in tracks_group class.

*.  Renamed tracks_group::purge_tracks() as destroy_all_tracks().

*.  tracks_group::destroy_track(track_ptr) resets to NULL the pointer value
within member STL vector tracks_ptrs rather than erasing it.

*.  Added GraphicalsGroup_name string and get_name() members to
GraphicalsGroup.  Initialized string each GraphicalsGroup
initialize_member_objects() method.

*.  Privatized tracks_group::get_track_ptr() and added
tracks_group::get_track_given_label() & tracks_group::get_all_track_ptrs().

*.  Replaced vector<track*> track_ptrs member of tracks_group with
TRACK_PTRS_MAP* track_ptrs_map_ptr.

*.  Privatized EarthRegion::display_track_as_PolyLine()

*.  ISDS demos and extended pgms seem to work OK as of Fri, Oct 3 at 2 pm
on ISDS3D laptop (pfiles10_3f.tgz)


============================================================================
ISDS3D code changes made on Tues, Sep 30 & early Weds, Oct 1:

*.  Reordered buttons within Baghdad & Bluegrass demo controls menu to
better match Baghdad demo script.

*.  Eliminated MODELSGROUP_ptr member of OBSFRUSTUM.  CylindersGroup_ptr
and LineSegmentsGroup_ptr members of OBSFRUSTUM are no longer automatically
instantiated in OBSFRUSTUM::allocate_member_objects().  Instead, they are
allocated only in
OBSFRUSTUM::draw_rays_thru_imageplane_features_to_worldplane().  Their
OSGGroup_ptrs are added to the OBSFRUSTUM's PAT within this member function
and no longer in OBSFRUSTAGROUP::initialize_new_OBSFRUSTUM().

*.  Moved Pass::determine_file_and_pass_type_from_suffix() into private
method PassesGroup::determine_file_and_pass_type_from_suffix().  Eliminated
redundant method PassesGroup::get_passtype_from_suffix().

*.  ISDS demos and standard pgms seem to work OK as of Weds, Oct 1 at 9:50
am on ISDS3D laptop (pfiles10_1b.tgz)

*.  VIDEOPAN now takes filenames for panorama as well as Quicktime video as
input arguments inside a package file.

*.  Generalized first PassesGroup::generate_new_pass(int r,int ID) member
function.  This bool method now returns false if the input pass type is
unknown.

*.  ISDS demos and standard pgms seem to work OK as of Weds, Oct 1 at 5 pm
am on ISDS3D laptop (pfiles10_1e.tgz)

============================================================================
ISDS3D code changes made on Mon, Sep 29:

*.  Added alpha filter into mains/mit/VIDEOPAN in order to remove worst of
temporal jittering.

*.  Added annotation_label member to mover class along with set/get
methods.

*.  Added Baghdad demo script into README.Baghdad_demo file.

*.  movers_group::issue_add_vertex_message() can now broadcast Annotation
label information as well as more compact RGB COLOR message to Michael's
social network tool.

============================================================================
ISDS3D code changes made on Sat, Sep 27, Sun, Sep 28 & early Mon, Sep 29:

*.  Added virtual destructor declarations within KDTree::Accessor() and
_Bracket_accessor() structs.

*.  ISDS demos seem to work OK as of Sat, Sep 27 at 11:40 am on ISDS3D laptop
(pfiles9_27b.tgz)

*.  colorfunc::rgb_to_RGB() converts floating point rgb values ranging from
[0,1] to integer RGB values ranging from [0,255]

*.  Tried to eliminate sources of warning messages in several OSG classes.

*. Special purpose homography::parse_homography_results() reads in the
homography results generated by Soonmin Bae from a text file.  Soonmin's
file contains the name of an individual video frame followed by the 9
elements which make up the homography that matches the frame to a
background panorama image.

*.  Overloaded operator<< in texture_rectangle class.

*.  homography::convert_video_to_panorama_coords() takes in some foreground
video frame's (U,V) coordinates for some feature.  This method return the
feature's corresponding (U,V) coordinates within the background panorama.

*.  MoviesGroup::compute_video_frame_corners_in_panorama() takes in homography
*curr_H_ptr which maps the current video frame within *video_ptr onto a
static background panorama image.  This method computes the panorama (U,V)
coordinates of the video frame's corners.  It resets the video's geometry
vertices so that the 2D video frame appears overlaid on top of the 2D
panorama.

*. Movie::construct_video_frame_corners() fills and returns an STL vector
containing threevectors corresponding to the current Movie corners' (U,V)
coordinates.  This STL vector is needed for transforming and displaying an
instantaneous video on top of a background panorama image.

*.  In Key_Down and Key_Up cases of MovieKeyHandler::handle(), set
local_Movie_ptr to Movie_ptr.  If NULL, reset local_Movie_ptr to 0th Movie
entry in MoviesGroup.

*.  Program mains/mit/VIDEOPAN is a testing grounds for visualizing dynamic
video superposed on top of a static panorama image.

*.  ISDS demos and standard pgms seem to work OK as of Mon, Sep 29
at 8 am on ISDS3D laptop (pfiles9_29b.tgz)

============================================================================
ISDS3D code changes made on Sun, Sep 21:

*. OSGButtonServer::nominate_ROIs forms an SKS query for all tracklets
where the vehicle's speed lies within the interval [minSpeed,maxSpeed] for
at least minDuration seconds.  SKS returns a set of bounding box
(longitude,latitude) coordinates which are used to instantiate bbox ROI
PolyLines.  It also returns the vehicle labels for those tracks within
these bounding boxes which satisfy the slow speed criteria.  It is
important to note that other tracks which do not satisfy the slow speed
criteria and yet also intersect these bounding boxes are NOT associated
with the nominated ROIs.

*.  Overloaded movers_group::associate_vehicles_with_ROI() which takes in
some ROI's ID along with a vector of vehicle label IDs.  It adds network
links between the ROI and the vehicles.  This method also issues add_edge
ActiveMQ messages.

============================================================================
ISDS3D code changes made on Tues, Sep 16:

*. Eliminated redundant MODEL::set_attitude_posn(int pass_number,
      const std::vector<threevector>& RPY,
      const std::vector<threevector>& posn,int init_frame=0) which exactly
matches the same method in Graphical.

*.  In MODELSGROUP::update_UAV_track(), explicitly call
UAV_MODEL_ptr->Graphical::set_attitude_posn(
get_passnumber(),RPY,even_path_point,initial_framenumber);

*.  In MODELSGROUP::update_UAV_track(), check whether number of evenly
spaced path points is less than remaining number of frames.  If not,
jettison track points which will not be reached by
AnimationController_ptr()->get_last_framenumber():

============================================================================
ISDS3D code changes made on early Tues, Sep 16:

*.  Added OBSFRUSTAGROUP_ptr member to OSGButtonServer class along with set
method.

*.  In texture_rectangle constructor#2, eliminated call to
read_and_set_image().

*.  GraphicalsGroup::get_OSGgroup_nodemask() now outputs integer 0 if its
input is negative.

*.  Explicitly set movies_group OSGgroup nodemask to one in QTCITIES &
VIDEOCITIES.

*.  Added README.feely to repository.

*.  In MODELSGROUP::generate_Predator_Model_for_flight_PolyLine(), we
learned the painful and hard way that *Movie_ptr must have its alpha value
initially set equal to zero so that the full CH video doesn't momentarily
pop-up before its geometry is resized and its alpha value is set back to
zero for the Baghdad demo!

*.  ISDS demos and extended pgms seem to work OK (except for Baghdad demo
with added ROIs!) as of Tues, Sep 16 at 12:50 pm on ISDS3D laptop
(pfiles9_16g.tgz)

============================================================================
ISDS3D code changes made on Sat, Sep 13 & early Mon, Sep 15:

*.  In ADD_ROI_CENTER section of
EarthRegionsGroup::parse_next_message_in_queue(), check whether new input
ROI already essentially exists within ROI spatially fixed tracks group.  If
so, do not instantiate it again.

*.  Added genmatrix* Minv_ptr member to rubbersheet class along with get
method.

*.  mains/bluegrass/GEOREGISTER_VIDEO reads in a set of manually selected
(easting,northing) and (U,V) tiepoints from two feature text files
generated by programs TESTCITIES & VIDEO.  It performs a least squares
minimization of a chisq function that quantifies the discrepancy between
the (easting,northing) and (U,V) feature coordinates.  We determine the
linear transformation of the relative X and Y coordinates of the manually
selected 2D features of the form UV = M XY + T where M is a 2x2 matrix
close to the identity, T is the translation 2-vector, XY holds the
(easting,northing) coordinates, and UV holds the (U,V) video feature
coordinates.  We evaluate the closed-form solution for the 4 parameters in
M and the 2 translations in T.

GEOREGISTER_VIDEO performs two rounds of rubber sheeting.  After the first
one, it can discard some number of tiepoint pairs.  It then performs a 2nd
round with a reduced set of feature inputs.  Once the final linear
transformation parameters are determined, this program uses the inverse
transformation to compute the geocoordinates for the four video corners.

*.  Eliminated Display Setup menu from Baghdad demo buttons html file.  

*.  Added GraphicalsGroup::get_OSGgroup_nodemask().

*.  OSGButtonServer::toggle_video() toggles MoviesGroup nodemask.  If the
video is to be toggled from on to off, this method sets the alpha values
for all Movies within *MoviesGroup_ptr equal to zero.  (UAV video chips
along with Constant Hawk video are then all hidden, and main program
throughput is significantly faster.)  If the video is to be toggled from
off to on, alpha for the zeroth Movie (assumed to correspond to the
Constant Hawk video) is initialized to zero so that it can later be faded
in via the Up arrow key.  On the other hand, all other Movies (assumed to
correspond to UAV video chips) have their alphas set equal to unity so that
they immediately appear.

=====================================================
ISDS3D code changes made on Fri, Sep 12 & early Sat, Sep 13:

*.  Added previously_encountered_flag member to mover class along with
set/get methods.

*.  movers_group::check_for_UAV_ROI_encounters() loops over every ROI
within *this and UAV mover within input *UAV_movers_group_ptr.  After
extracting their XY positions, this method computes their 2D separation.
If the separation distance is less than encounter_distance, the ROI mover's
previously_encounter_flag is set equal to true.

*.  Made several member functions of movers_group class const.

*. In movers_group::delete_mover(), only issue delete_vertex_message if
channel does not equal GoogleEarth.  This is a hack.

*.  Added vector<int> encountered_ROI_IDs member to movers_group along with
get method.

*. Added dX & dY member vars to PickHandler class along with get methods.
Compute screen coord displacements dX & dY in PUSH case of
PickHandler::handle().  In PolyLinePickHandler::pick(), test whether |dX| &
|dY| > 1E-6 before calling continue_PolyLine().  This should eliminate
unwanted double clicks/no mouse movements when entering UAV flight paths.

*.  PolyLinesGroup::recolor_encountered_ROI_Polylines() loops over all ROIs
which have been previously visited by some dynamic mover.  It recolors
their bottom and top PolyLines so that they are distinguishable from ROIs
which have not yet been visited.  We wrote this utility for the Baghdad UAV
demo.

*.  In MODELSGROUP::update_display(), added explicit
AnimationController_ptr != NULL check.

*.  ISDS demos and extended pgms seem to work OK (except for SignPost
placement on bald earth in JUSTEARTH) as of Sat, Sep 13 at 6:20 am on
ISDS3D laptop (pfiles9_13b.tgz)

*.  In EarthRegion::broadcast_spatially_fixed_tracks(), check whether
current spatially fixed site has been previously visited before by some
dynamic mover.  If so, do NOT broadcast fixed site to ActiveMQ.  As of Sep
13, 2008, we implement this condition so that UAVs are not directed by
Michael Yee's travelling salesman algorithm to revisit sites which were
previously visited by some UAV in the past.

*.  Added n_ROI_states as member to PassesGroup along with get method.
Added OSGButtonServer::set_n_ROI_states().  Set n_ROI_states=1 in
run_baghdad for Baghdad demo (where we no longer push the MONITOR ROI
button).

*.  In OSGButtonServer::clear_ROIs(), call
movers_group_ptr->get_encountered_ROI_IDs().

*.  Altered GenericHUD::reset_text_size() so that 2nd text line is treated
in parallel to 1st text line.

*.  secret labels now appear in upper right and lower left corners.

*.  Added secret_flag bool member to PassesGroup along with get method.
Can now change classification within run_baghdad startup script.

============================================================================
ISDS3D code changes made on Thurs, Sep 11:

*.  ISDS demos and standard pgms seem to work OK as of Thurs, Sep 11
at 10 am on ISDS3D laptop (pfiles9_11a.tgz)

*.  Added baghdad_buttons_local.html to repository

============================================================================
ISDS3D code changes made on Tues, Sep 9:

*. Added ROI_skeleton_height & ROI_skeleton_color members to PassInfo
classes along with set/get methods.  Added parsing for these params in
PassesGroup.

*.  Now pass ROI skeleton height and color as input parameters within
packages/baghdad_sat_EO.pkg.  

*. Changed default temporally_sort_flag bool param value from true to false
in set_posn_velocity() member of track.h

*.  In MODELSGROUP::generate_flight_PolyLine_among_ROIs(), explicitly check
whether current UAV posn is equal to previous UAV posn when filling UAV
posns corresponding to times prior to current framenumber.  Recall that we
must not attempt to construct polylines from repeated vertices.

============================================================================
ISDS3D code changes made on Sat, Sep 6, Sun, Sep 7, & early Mon, Sep 8:

*.  Can now view Baghdad Locations of Interest as SignPosts on Baghdad sat
EO point cloud.

*.  Added world_start[stop]_UTC_string and world_time_step members to
PassesGroup along with get methods.

*.  Operations::set_master_world_start[stop]_UTC() takes in a comma
separated value string and decomposes its contents into year, month, day,
etc subcomponents.  We no longer hardwire start[stop]_UTC times into
VIDEOCITIES & QTCITIES.  Instead, these parameters are now passed within
the run_bluegrass[bahgdad] scripts.

*.  EarthRegionsGroup::generate_regions loops over all passes within the
input PassesGroup and generates either PointCloud or SurfaceTexture
EarthRegions.  It also stores the northern hemisphere flag and UTM
zonenumber specified within *get_pass_ptr() into this EarthRegionsGroup's
corresponding member variables.

*.  Renamed badly named subdirectory src/fusion as src/passes.  Made
necessary changes throughout library tree to accommodate this large
refactoring.

*.  In MODELSGROUP::alter_UAV_Path_PolyLine(), recompute Predator MODEL's
track from its initial starting time and NOT from the current game clock's
world time.

*.  polyline::distance_along_polyline() returns a negative value if the input
currpoint does not lie along the polyline.  Otherwise, it returns
currpoint's distance along the polyline starting from the zeroth vertex.

*.  polyline::edge_point_at_distance_along_polyline() takes in arclength s
and computes its corresponding fractional distance frac.  After clamping
frac to lie within the interval [0,1], this method returns the point along
the polyline corresponding to s.

*.  polyline;:smooth_raw_vertices() takes in correlation distance ds along
with a set of raw vertices.  This method performs a brute force convolution
of the input vertices with a set of (somewhat arbitrary) weights. The
smoothed set of vertices are returned by this method.

*.  Low-pass filter UAV flight path polylines in lowpass_filter_polyline()
& merge_PolyLines() members of PolyLinesGroup.

*.  In OSGButtonServer::alter_UAV_path(), reset UAV PolyLine's altitude so
that it lies close to world grid.  Perspective effects are then
significantly reduced, and it is much easier to alter the flight path
relative to the background map.

*.  In MODELSGROUP::alter_UAV_Path_PolyLine(), reset all UAV PolyLine
altitudes to several kms above world grid after original & most recently
selected PolyLines have been merged.

*.  ISDS demos and standard pgms seem to work OK as of Mon, Sep 8
at 6:35 am on ISDS3D laptop (pfiles9_8a.tgz)

*.  Broadcast START[STOP]_PACKET messages before[after] GENERATE_TRACK
message is broadcast to ActiveMQ by
MODELSGROUP::generate_Predator_Model_for_flight_PolyLine().

============================================================================
ISDS3D code changes made on Thurs, Sep 4, Fri, Sept 5 & early Sat, Sep 6:

*.  ISDS demos and standard pgms seem to work OK as of Thurs, Sep 4
at 7:45 am on ISDS3D laptop (pfiles9_4a.tgz)

*.  polyline::vertices_in_frac_interval() generates an STL vector of
threevectors containing the current polyline's vertices whose fractional
distances lie within [f_start,f_stop].

*.  PolyLinesGroup::merge_PolyLines() takes in an original PolyLine and
retrieves the most recently added PolyLine.  It first computes the points
along the original PolyLine that lie closest to the correction PolyLine's
endpoints.  It next partitions the original PolyLine's vertices into those
lying before & after the new points.  This method forms a new set of
vertices from the before & after vertices plus those from the most recently
added PolyLine.  After destroying the original PolyLine and the most
recently added one, it instantiates a new PolyLine from the new set of
vertices and assigns it the original PolyLine's ID.

*.  MODELSGROUP::alter_UAV_Path_PolyLine() retrieves the UAV MODEL and
flight PolyLine corresponding to member label ID_for_path_to_alter.  It
then merges this PolyLine with the most recently added PolyLine.  After
recomputing the modified Path PolyLine's sampled edge points kdtree, this
method updates the UAV model's track.

*.  Added regular_vertex_spacing member to PolyLinePickHandler class along
set/get methods.

*.  Moved ~cho/gis/gdal.notes and ~cho/Desktop/README.configure into
~cho/programs/c++/svn/projects/READMEs/README.GDAL & README.qgis_configure

*.  ISDS demos and standard pgms seem to work OK as of Sat, Sep 6
at 1:45 pm on ISDS3D laptop (pfiles9_6a.tgz)

============================================================================
ISDS3D code changes made on Weds, Sep 3:

*.  ISDS demos and standard pgms seem to work OK as of Weds, Sep 3
12:45 pm on ISDS3D laptop (pfiles9_3a.tgz)

============================================================================
ISDS3D code changes made on Tues, Sep 2:

*.  In MODELSGROUP::destroy_all_MODELS(), added
set_selected_Graphical_ID(-1). 

*. In VIDEOCITIES & QTCITIES, added
Flight_PolyLinePickHandler_ptr->set_z_offset(5) so that initial UAV ground
paths show up on top of Baghdad point cloud.  Also added
Flight_PolyLinePickHandler_ptr->set_approx_range_to_polyline(3).

*.  In PolyLinePickHandler::select_PolyLine(), no longer project Z-lines
into grid plane but rather into Z-plane defined by each polyline.

*.  Eliminated irrelevant handle_dim_specific() method from all
CustomManipulator classes.

*.  MODELSGROUP::follow_select_MODEL() now takes a min_altitude argument =
z_grid+1500.  This allows for virtual camera to zoom closer into earth than
UAV position.

*.  Eliminated kbm_events member of CustomManipulator.  Eliminated
events_tracker class from Makefile.

*.  ISDS demos and extended pgms seem to work OK (except for SignPost
placement on bald earth in JUSTEARTH) as of Tues, Sep 2 at 11:30 am on
ISDS3D laptop (pfiles9_2e.tgz)

============================================================================
ISDS3D code changes made on Fri, Aug 29 & Sun, Aug 31 and early Mon, Sep 1:

*, PolyLinesGroup::issue_last_track_message() retrieves the last mover
from the movers group queue.  It broadcasts an ActiveMQ message containing
the track's distinct point positions in (longitude,latitude,altitude)
coordinates.

*.  movers_group::issue_generate_track_message() extracts distinct
track position information from input *mover_ptr.  It converts from
UTM eastings and northings into longitudes and latitudes.  This
method subsequently broadcasts a series of
(longitude,latitude,altitude) string triples from which the track
can be reconstructed.

*.  Added movers_group_ptr member to PolyLinesGroup class along with get
methods.  Instantiate *movers_group_ptr in
PolyLinesGroup::allocate_member_objs().

*.  Wrote mains/baghdad/EOTIF2TDP which takes in a registered geotiff EO
satellite image and generates a corresponding point cloud in TDP output
format.  We wrote this specialized utility program in August 2008 when we
discovered that the .osga files generated by osgdem for the Baghdad data
set failed on the classified touchy2 disks.  We believe that the classified
touchy2 disks are flawed and not the programs nor the osgdem files (which
both seem to work fine on other computers).  So we had to resort to
generating point cloud .osga files which hopefully will work on touchy2 in
time for the Sept RCO sponsor review.

*.  Wrote mains/baghdad/BAGDHAD_EO_TILES which generates a script file that
runs gdal_translate, eotif2tdp and lodtree for a sequence of Baghdad
subtiles.  We wrote this program in late Aug 2008 as a desperate attempt to
get some Baghdad background to work on the classified touchy2 disks (which
we believe are fundamentally corrupted).

*.  In movers_group::issue_generate_track_message(), perform explicit check
whether Messenger_ptr==NULL.

*.  ISDS demos and standard pgms seem to work OK as of Mon, Sep 1 at
6:53 am on ISDS3D laptop (pfiles9_1a.tgz).

============================================================================
ISDS3D code changes made on Mon, Aug 25, Tues, Aug 26, Weds Aug 27, Thurs
Aug 28 and early Fri Aug 29:

*.  In OSGButtonServer::clear_ROIs() and clear_vehicle_tracks(), we now
purge spatially-fixed_tracks_group & dynamic_tracks_group members of
EarthRegion #0.

*.  In menu_buttons_local.html, changed display:none to display:block in
Display Setup section so that buttons automatically appear when webpage is
first opened.

*.  BluegrassClient::eliminate_repeated_tracks() deletes from input
ROI_tracks_group_ptr all tracks which already exist within input STL vector
ROI_tracks_group_ptrs.  This method performs a brute force search over
elements of the former for matches with elements of the latter.

*.  Moved ROI_tracks_group_ptrs member from OSGButtonServer class to
EarthRegion.  Also moved generate_ROI_tracks_group() and
purge_ROI_tracks_group_ptrs().

*.  Added BluegrassClient::get_auto_nominated_bboxes().  Call this method
in OSGButtonServer::clear_ROIs().

*.  In OSGButtonServer::clear_vehicle_tracks(), no longer purge
dynanmic_tracks_group_ptr member of *EarthRegion_ptr.

*.  EarthRegionsGroup::form_SKS_query_for_speed_ROIs() now takes
vector<tracks_group*>& vehicle_tracks_group_ptrs as input argument.

*.  Eliminated dependence of OSGButtonServer class upon EarthRegion members
dynamic_tracks_group_ptr and spatially_fixed_tracks_group_ptr.

*.  ISDS demos and standard pgms seem to work OK as of Fri, Aug 29 at
8 am on ISDS3D laptop (pfiles8_29b.tgz)

============================================================================
ISDS3D code changes made on Thurs, Aug 21, Fri, Aug 22, Sat Aug 23 & Sun,
Aug 24:

*.  ISDS demos and standard pgms seem to work OK as of Thurs, Aug 21 at
7:30 am on ISDS3D laptop (pfiles8_21a.tgz)

*.  G99VideoDisplay::generate_2D_chip takes in 4 corner texture fractions.
Their values are clipped to lie within the physical range [0 , 1] for both
U and V.  The corners' geometry vertices are then set based upon the
clipped texture fractions.

*.  G99VideoDisplay::generate_3D_chip() takes in 4 corner subtexture
fractions as well as world-space positions for the corners of the full
video.  This method first clips the subtexture fractions so that they lie
within the range [0 , 1].  It then computes the bilinearly interpolated
world-space positions corresponding to the input subtexture fractions.  The
current Video's geometry vertices are then set to these subtexture
world-space corner positions.

*.  Separated off lines from
TextureSectorsGroup::generate_TextureSector_geode() into
generate_TextureSector_texture_rectangle(), generate_TextureSector_Movie()
and generate_TextureSector_video_chip().

*.  Generalized homography::compute_homography_matrix() so that it can
handle 8x9 homography matrices.

*.  Split off generate_PointCloud_EarthRegion() and
generate_SurfaceTexture_EarthRegion() member functions from huge, ugly
EarthRegionsGroup::generate_regions().

*.  Cleaned up Movie and G99VideoDisplay destructors.

*.  G99VideoDisplay::compute_2D_chip() takes in 4 corner texture fractions.
Their values are clipped to lie within the physical range [0 , 1] for both
U and V.  The corners' geometry vertices are then set based upon the
clipped texture fractions.

*.  G99VideoDisplay::initialize_3D_chip() takes in 4 corner subtexture
fractions as well as world-space positions for the corners of the full
video.  This method first clips the subtexture fractions so that they lie
within the range [0 , 1]. It next computes the homography and inverse
homography which maps the UV plane into the world XY plane.  This method
also computes and stores the average of the input world corner vertices' Z
values.

*. G99VideoDisplay::compute_3D_chip() takes in UV image plane coordinates
for 4 corner vertices.  It first resets the texture fractions.  This method
next computes the XYZ world-space points corresponding to the input image
plane coordinates.  Finally, the video's geometry vertices are reset based
upon the XYZ world-space points.

*.  ISDS demos and standard pgms seem to work OK as of Sat, Aug 23 at 10:20
am on ISDS3D laptop (pfiles8_23a.tgz)

*.  In MODELSGROUP::update_UAV_track(), time origin no longer coincides
with frame 0 but rather frame corresponding to current time.

*.  Generalized Graphical::set_attitude_posn() so that it takes in
init_frame argument rather than assuming initial frame=0.

*.  Globally renamed POI as LOI in OSGButtonServer class.  Added
OSGButtonServer::toggle_activity_regions().

*.  Modified Michael Yee's dropdownmenu1.html so that it implements button
functionality.  Use new menu_buttons_local.html in place of prevous
OSGbuttons_local.html and UAV_buttons_local.html.

*.  Replaced stupid brute-force search within
stringfunc::first_substring_location() with STL find method.  SKS track
searches now go an order of magnitude faster!

*.  Streamlined BluegrassClient::retrieve_mover_tracks() in an effort to
speed up track generation following SKS Graph Server call.

*.  In track class, added temporally_sort_flag argument with default true
value to set_posn_velocity() member.  Also added
temporally_sort_posns_and_velocities() member.  In
BluegrassClient::retrieve_mover_tracks(), now call former with false bool
value and latter only after all track info has been read in.  Instantiation
of truth tracks is now an order of magnitude faster!

*.  ISDS demos and extended pgms seem to work OK (except for SignPost
placement on bald earth in JUSTEARTH) as of Mon, Aug 25 at 7 am on ISDS3D
laptop (pfiles8_25a.tgz)


============================================================================
ISDS3D code changes made on Weds, Aug 20:

*.  Added line_width member to PassesGroup along with get method.  Can now
pass line_width as argument in package files to compensate for varying
projector/screen resolutions (e.g. line_width = 2 [4] for touch table
projector [ISDS3D laptop]).

...........................................................

*.  In MODELSGROUP::update_display(), added ugly logic so that Predator
MODELS and their OBSFRUSTA are not generated on the current OSG update
cycle but rather on the following one.  We have empirically found that
instantiating a Predator from an entered flight path is time-consuming.  So
the user has to wait several seconds from the time he double-clicks(taps)
to the time when the Predator's future history is instantiated.  We prefer
that the user quickly see the elevated version of his entered ground path
followed later by the Predator with its OBSFRUSTUM so that he receives
prompt visual feedback as to when his entry of the flight path is
terminated:

*.  Added PointsCloudsGroup::update_display() and Terrain_Manipulator_ptr
members.

*.  PointCloudsGroup::update_display() modifies the point size based upon
the virtual camera's height above the Z-grid if Terrain_Manipulator_ptr !=
NULL.

*.  Added notes about large Sharp monitors to README.bluegrass_demo.

============================================================================
ISDS3D code changes made on Tues, Aug 19:

*.  Added GoogleEarth messenger into QTCITIES.

*.  Added mains/bluegrass/AVS/run_local_qtcities and run_local_videochip to
repository.  Added mains/bluegrass/AVS/*local.html to repository.

============================================================================
ISDS3D code changes made on Mon, Aug 18 & Tues, Aug 19:

*.  Added GoogleEarth_Messenger_ptr member to EarthRegionsGroup class.

*.  Moved several lines of code out of NOMINATE_ROI section in
OSGButtonServer into EarthRegion::generate_nominated_ROI().  This method
takes in threevector vertices for a Region-of-Interest nominated via some
manual or automatic mechanism (e.g. vehicle speed or Google Earth hot-point
considerations).  It instantiates a new polyhedral skeleton for the ROI.
This method also generates a new ROI member of *movers_group_ptr.

*.  Eliminated AnimationController_ptr member of G99VideoDisplay class in
favor of AC_ptr member of texture_rectangle class.

*.  MoviesGroup::generate_new_texture_rectangle() and
generate_new_movie(texture_rectangle_ptr) now (theoretically) allow for
multiple movies to be based upon a single texture_rectangle.

*.  Moved all subtexture members and methods out of texture_rectangle back
into G99VideoDisplay class.

*.  Program VIDEO can now display two chips from same movie.

*.  ISDS demos and standard pgms seem to work OK as of Tues, Aug 19 at
12:10 pm on ISDS3D laptop (pfiles8_19h.tgz)

============================================================================
ISDS3D code changes made on Sat, Aug 16 & Sun, Aug 17:

*.  In MODELSGROUP::update_UAV_track(), implemented poor-man's UAV
loitering by filling all frames past last specified frame with last
computed UAV position and velocity.

*.  Eliminated internal dependence of G99VideoDisplay upon m_vidWidth,
m_VidHeight and mNchannels.  Replaced with calls to get methods instead.

*.  Performed massive refactoring of G99VideoDisplay class.  Spun off new
texture_rectangle class from G99VideoDisplay.  The latter holds all
geometry variables and manipulations.  The former holds animation and
texture manipulation methods.  Performed this refactoring as prelude to
multi-chip handling following Ross' suggestion to split all
TextureRectangle functionality away from Geode and geometry parts of Video
class.

*.  ISDS demos and standard pgms seem to work OK as of Mon, Aug 18 at 12:33
pm on ISDS3D laptop (pfiles8_18g.tgz)

============================================================================
ISDS3D code changes made on Sat, Aug 9, Tues Aug 12 and Fri, Aug 15:

*.  Added README.firefox to repository.

*.  CLEAR_ROIS button on OSGButtons panel now purges just ROIs and not
vehicle tracks.

*.  Overloaded operator<< in movers_group class.  Write out IDs for ROIs
and Vehicles along with vehicle-ROI neighbor links.

*.  Added notes about running and modifying Luca's Matlab codes to
README.bluegrass_demo.

.........

*.  ISDS demos and standard pgms seem to work OK as of Fri, Aug 15 at
6:55 pm on ISDS3D laptop (pfiles8_15b.tgz)

============================================================================
ISDS3D code changes made on Tues, Aug 5, Weds, Aug 6, Thurs, Aug 7 & Fri,
Aug 8:

*.  Perform sanity check on UAV_ID values in
MODELSGROUP::generate_task_assignments().

*.  Generalized CLEAR_TRACKS section in OSGButtonServer to
CLEAR_VEHICLE_TRACKS and CLEAR_ROIS_AND_VEHICLE_TRACKS.  Former purges just
vehicle tracks, while latter purges both vehicle and ROIs.  Modified
OSGbuttons_local.html so that user can now toggle between CLEAR_TRACKS
and CLEAR_ROIs using one webpage button.

*.  In OSGButtonServer class, separated off implementation of button
handling out of huge if statement into multiple new private member
functions.

*.  Temporarily commented out Movie_ptr assignment lines in
MODELSGROUP::generate_Predator_Model_for_flight_PolyLine() to avoid
VIDEOCITIES from crashing when two UAVs are instantiated.  

*.  For UAV flight path entry on touch table purposes, we now set
picking_mode_flag=true in ModeController::setState() if
m_state=INSERT_POLYLINE along with INSERT_LINE.  No longer need to hold
shift key down to insert PolyLine.  But cannot translate map while UAV
flight path is being inserted.

*.  MODELSGROUP::UAV_flight_path_color() sets distinct colors for up to
four UAV flight path PolyLines.  The colorings are similar to the UAV
OBSFRUSTUM's colorings established in
OBSFRUSTUM::set_UAV_OBSFRUSTUM_colorings().

*.  OBSFRUSTUM::set_UAV_OBSFRUSTUM_colorings() takes in an ID for some UAV
MODEL.  In order to readily distinguish up to 4 UAV's, this method assigns
different colors to the UAV's OBSFRUSTUM based upon the input ID modulo 4.

*.  In PolyLinesGroup::reset_PolyLine_altitudes(), offset each new PolyLine
altitude by PolyLine.ID*100 meters so that multiple UAVs do not fly at
exactly the same heights.

*.  Pressing 'COMPUTE_PATH' button on UAV Control Buttons panel now causes
call to UAV path planning to be executed.  Pressing 'CLEAR_UAVS' button
causes all UAV MODELS and OBSFRUSTA to be destroyed.

*.  Added OBSFRUSTAGROUP::destroy_all_OBSFRUSTA().

*.  Confused about deleting GraphicalsGroup members of higher-level
Graphicals (e.g. PointsGroup member of PolyLine, OBSFRUSTAGROUP member of
MODEL, etc). 

*.  Added critically important note about disabling McAfee firewall on
windows machines when they're connected to private networks.

*.  While in RUN_MOVIE mode of Bluegrass demo, can now press 's' to toggle
on/off Constant Hawk model plus translucent FOV.  Commented out "TOGGLE
SENSOR" button in OSGButtons_local.html.

*.  ISDS demos and standard pgms seem to work OK as of Fri, Aug 8 at
6:30 pm on ISDS3D laptop (pfiles8_8g.tgz)

============================================================================
ISDS3D code changes made on Fri, Aug 1, Sat, Aug 2 and Sun, Aug 3:

*. Eliminated unused ROI_posn member of mover class along with set & get
methods.

*. Moved constant_vertices_altitude member out of PolyLinePickhandler into
PolyLinesGroup along with set method.  Moved reset_PolyLine_altitudes() out
of PolyLinePickHandler into PolyLinesGroup.

*. MODELSGROUP::generate_flight_PolyLine_among_ROIs() takes in an ordered
sequence of IDs for ROIs to be visited by a UAV.  It first recovers the
UAV's track up till the current time.  It next reads in the fixed ground
positions of the ROIs.  It overrides any existing flight path PolyLine and
generates a new one that visits each ROI.  Finally, this method resets the
altitude of the PolyLine's vertices to
Path_PolyLinesGroup_ptr->constant_vertices_altitude.

*. MODELSGROUP::update_UAV_track() fills the input UAV model's track with
time, position and velocity information.  It also reorients the UAV model
at each sample point so that it's pointed along the flight path.

*. MODELSGROUP::generate_task_assignments() takes in the IDs for some UAV
and the ground target ROIs which it is supposed to visit in the immediate
future.  It first converts the ROI IDs into ROI positions.  It then resets
the Path_PolyLine_ptr corresponding to the input UAV so that the aircraft
flies over the input ROIs.  Finally, this method updates the UAV MODEL's
track with the new flight path information.

*. Messenger constructor assigns time-dependent msg_sender_ID if input
message_sender_ID doesn't equal "ALLOW_SELF_MESSAGES".

*. Messenger::onMessage() now ignores self-messages only if msg_sender_ID
!= "ALLOW_SELF_MESSAGES".

*. Eliminated vector<message> message and last_message members of
GraphicalsGroup in favor of new deque<message> message_queue member.
Eliminated get_last_message() and retrieve_last_message() from
GraphicalsGroup in favor of new retrieve_messages(),
get_n_messages_in_queue() and get_next_message_in_queue().

*.  Added parse_latest_messages() to GraphicalsGroup.  Eliminated
parse_last_message() members of POLYLINESGROUP, CYLINDERSGROUP,
EARTHREGIONSGROUP and MODELSGROUP in favor of virtual
parse_next_message_in_queue(curr_msg).

*.  Globally renamed predator_ptr as predator_MODEL_ptr in MODELSGROUP
class.

*.  Modified several methods in MODELSGROUP class to take Movie_ptr as
argument rather than movie_filename. 

*.  ISDS demos and extended pgms seem to work OK (except for SignPost
placement on bald earth in JUSTEARTH) as of Mon, Aug 4 at 6 am on ISDS3D
laptop (pfiles8_4a.tgz)

============================================================================
ISDS3D code changes made on Weds, July 30 & early Thurs, July 31:

*.  MODELSGROUP::broadcast_sensor_and_target_statevectors() first sends out
a START_PACKET message.  It then loops over each MODEL within the current
MODELSGROUP object and broadcasts its track's current statevector.
Finally, this method sends out a STOP_PACKET message.

*.  Added UAV as a MoverType in mover class.

*.  Replaced movers_group::get_vehicle_IDs() with the more general
get_particular_mover_IDs(mover::MoverType m_type).

*.  Eliminated purge_all_vehicles() and purge_all_ROIs() in movers_group
class in favor of more general purge_all_particular_movers(mover::MoverType
m_type).

*.  Eliminated get_n_vehicles() and get_n_ROIs() in movers_group class in
favor of more general get_n_particular_movers(mover::MoverType m_type).

*.  Added track_ptr member to mover class along with set/get methods.

*.  Added ROI_posn member to mover class along with set & get methods.

*.  Added boolean spatially_fixed_flag member to track class along with set
& get methods.

*.  Renamed tracks_group_ptr member of EarthRegion class as
dynamic_tracks_group_ptr.  Added spatially_fixed_tracks_group_ptr member to
EarthRegion along with get() method.

*.  movers_group::generate_new_ROI() instantiates a new track within input
*spatially_fixed_tracks_group_ptr for the new ROI mover.

*.  Separated off ActiveMQ broadcast lines from
EarthRegion::propagate_all_tracks() into separate method
broadcast_dynamic_tracks().

*.  ROI and UAV statevector info are now broadcast to ActiveMQ as
multi-message packet in QTCITIES after user instantiates a UAV model +
multiple ROIs when in MANIPULATE_MODEL mode by pressing 'x' key.

*.  ISDS demos and standard pgms seem to work OK as of Thurs, July 31 at
7:40 am on ISDS3D laptop (pfiles7_31a.tgz)

============================================================================
ISDS3D code changes made on early Tues, July 29:

*.  Changed generate_message() to print_sent_message_contents() in
MESSAGE_SENDER.

*.  ISDS demos and standard pgms seem to work OK as of Tues, July 29 at 5:15
am on ISDS3D laptop (pfiles7_29a.tgz)

============================================================================
ISDS3D code changes made on Weds, July 23, Thurs, July 24 & early Fri, July
25:

*.  Replaced PolyLinePickHandler::add_new_vertex() with better-named
PolyLine::add_vertex_points().

*.  Completely moved skeleton_height, movers_group_ptr,
regenerate_PolyLine() & form_polyhedron_skeleton() members out of
PolyLinePickHandler class into PolyLinesGroup.

*.  In NOMINATE_ROIS section of OSGButtonServer, require number of vertices
within auto-generated ROI polylines to be at least 4 as a sanity check.

*.  Added vector<bounding_box*> bbox_ptrs member to EarthRegion along with
get method.  Fill contents of *bbox_ptrs in EarthRegion::generate_bbox().

*.  Performed ugly hack within OSGButtonServer NOMINATE_ROI section.
Hardwire rather than pass in bbox for ActivityRegion #1 = bbox #0.

*.  Separated off issue_add_vertex_message() from
PolyLinesGroup::form_polyhedron_skeleton().  Now make explicit call to this
method in both PolyLinePickHandler::doubleclick() and OSGButtonServer
NOMINATE_ROI section.

*.  movers_group::get_vehicle_IDs() iterates over all movers within
*movers_network_ptr and returns their vehicle IDs within an STL vector.

*.  track::intercepts_bbox() assumes that member STL vector distinct_posn
has been filled via a prior call to compute_distinct_posns().  It performs
a brute force search for any distinct posns along the current track object
which lie inside the bounding box passed as an input parameter.  If so,
this boolean method returns true.

*.  Wrote constructor bounding_box(const polyline* polyline_ptr)

*.  Bluegrass demo worked acceptably at end of Thurs July 24
(pfiles7_24n.tgz).

*.  Added vector<bounding_box> auto_nominated_bboxes to BluegrassClient
class.  Use this STL vector member to make sure an auto-nominated bbox was
not previously defined before instantiating it.

*.  Started incorporating refined SKS speed search output which includes
bbox results into BluegrassClient::generate_ROIs_from_parsed_XML().

*.  In PolyLinesGroup::compute_altitude_dependent_text_label_sizes(),
changed min_eye_altitude from 1000 meters to 750 meters.
 
*.  Now explicitly set Geometrical color to permanent_color or local_colors
(if multicolor_flag==true) in GeometricalsGroup::reset_colors() to try
avoiding blinked PolyLine tracks from being left in white state.

*.  ISDS demos and standard pgms seem to work OK as of Fri, July 25 at 10
am on ISDS3D laptop (pfiles7_25e.tgz)

===============================================================
ISDS3D code changes made on Tues, July 22 & early Weds, July 23:

*.  In VIDEOCITIES & QTCITIES, we now dynamically manipulate a single
Constant Hawk OBSFRUSTUM at run-time rather than precalculate ~6000
OBSFRUSTA at program startup.  

*. In MODELSGROUP::generate_Predator_Model_for_flight_PolyLine(), call
curr_PolyLine_ptr->add_flow_direction_arrows() to show Predator's direction
along flight path.

*.  In MODEL class, globally renamed z_offset as z_base_face.

*.  Incorporated reasonable Predator speed and altitude values within
MODELSGROUP class based upon 25 kft ceiling & 70 knot loiter speed taken
from UAS Roadmap 2005 MQ-1 Predator table.

*.  In program VIDEOCITIES, can now insert multiple Predator models in
INSERT_POLYINE mode (obtained by pressing 'G' on keyboard).  

*. EarthRegionsGroup::form_SKS_query_for_speed_ROIs() loops over all
EarthRegions and extracts their vehicle tracks' entity IDs.  It then forms
an SKS string query for all tracklets where vehicle speeds lie between some
specified range for at least some minimum time duration.  SKS should then
return an XML list of tracklets along with an automatically derived list of
Regions of Interest (ROIs) where these speed and time conditions hold.  The
input radius parameter is needed to thicken tracklet lines for ROI
generation...

*. Added new NOMINATE_ROIS button to OSGbuttons_local.html.  Starting to
process this button's action within OSGButtonServer.cc

*.  Beginning to parse response to speed SKS query within
BluegrassClient::generate_ROIs_from_parsed_XML(XML_input).

*.  Created new namespace mover_funcs.cc within src/track.  Moved
compute_relative_ROI_size() & extrude_bottom_ROI_face() code from
PolyLinePickHandler into this new namespace.

*.  polyline::reset_vertex_altitudes() resets all of the current polyline
vertices' z-values to input parameter constant_vertices_altitude.

*.  Moved most content out of PolyLinePickHandler::regnenerate_PolyLine()
into method with same name in PolyLinesGroup class.

*.  ISDS demos and standard pgms seem to work OK as of Weds, July 23 at 7 am
on ISDS3D laptop (pfiles7_23f.tgz)

*.  Moved large code chunk out of PolyLinePickHandler::doubleclick() into
form_polyhedron_skeleton().  This method takes the latest entered PolyLine
as the base outline for a polyhedron skeleton.  It extrudes the base face's
vertices upward to a constant height set by member skeleton_height.  This
method then instantiates a second PolyLine which traces out both the top
and sides of the polyhedron skeleton.  Once both the bottom and top
PolyLines forming the polyhedron skeleton have been instantiated, an add
vertex message for the last mover within the movers_group queue is issued.

============================================================================
ISDS3D code changes made on Mon, July 21 & early Tues, July 22:

*.  Added vector<mover*> movers_queue member to movers_group class along
with get & add_mover_to_outgoing_queue() methods.

*.  Added movers_group_ptr member to PolyLinePickHandler class along with
set method.

*.  issue_add_vertex_message(ROI mover) message now sent to ActiveMQ from
PolyLinePickHandler::doubleclick() rather than from
OSGButtonServer::get().  ROIs now appear in social network tool AFTER
the user has finished entering the ROI region within the 3D map tool.

*.  Added relative_size and avg_time_duration members to mover class along
with set & get methods.

*.  Partially fixed polygon::docopy().  But linesegment edges are not
copied over!

*.  In PolyLinePickHandler::doubleclick(), compute area of bbox surrounding
bottom ROI face.  Then form relative_ROI_size = sqrt(bbox_area)/65.0
meters.  Broadcast ROI's relative_size as part of ActiveMQ add_vertex
message.

*.  Modified PolyLinesGroup::find_intersection_points() to generate text
file containing longitude,latitude pairs for road intersections in Lubbock,
TX.

*.  Added OBSFRUSTUM_z_base_face member to MODEL class along with set & get
methods.

*.  In OBSFRUSTUM class, globally renamed z_offset as z_base_face.

*.  Added GraphicalsGroup::get_OSGsubPAT_nodemask(int OSGsubPAT_number)

*.  In MODELSGROUP::update_display(), compute & display dynamic OBSFRUSTA
only if it's not currently masked.

*.  ISDS demos and standard pgms seem to work OK as of Tues, July 22 at 7 am
on ISDS3D laptop (pfiles7_22c.tgz)

============================================================================
ISDS3D code changes made on Sat, July 19, Sun July 20 & early Mon, July 21:

*.  Added STL map VERTEX_MAP* vertex_map_ptr member to vertices_handler
class to store vertex indices as a function of vertex positions.

*.  vertices_handler::get_vertex_ptr() takes in threevector posn and
searches member STL map *vertex_map_ptr for a corresponding vertex
ID.  If none is found, this method returns NULL.  Otherwise, it
returns a pointer to the located vertex.

*.  vertices_hander::reset_vertex_posn() takes input threevector old_posn
and searches member STL map *vertex_map_ptr for a corresponding vertex ID.
If the ID is found, this method deletes the old vertex entry within
*vertex_map_ptr and instantiates a new entry containing the vertex's new
position.  It also updates the vertex's information within members
vertex_IDs_chain and vertex_table/*vertex_table_ptr.

*.  ISDS demos seem to work OK as of Sat, July 19 at 11:20 am on ISDS3D
laptop (pfiles7_19d.tgz)

*.  Added reset_vertex_posn() member function to edge, face & polyhedron
classes.

*.  Eliminated vertices_handler::copy_vertex_from_table_to_chain() in favor
of vertices_handler::push_back_vertex_onto_chain().

*.  Eliminated apex_ptr member of pyramid class in favor of
origin_vertex_ptr member of polyhedron class.  Eliminated unused
pyramid::set_apex().

*.  In vertices_handler::push_back_vertex_onto_chain(), eliminated call to 
update_vertex_table_key(V).

*.  Generalized vertices_handler::update_vertex_in_table_and_chain() to
update_vertex_in_table_chain_and_map().

*.  Renamed vertices_handler::push_back_vertex_onto_chain(V) as private
method update_vertex_ID_in_chain(V).

*.  Added update_vertex_map() members to edge, face & polyhedron classes
which each update individual class' vertices_handler members and call child
class update_vertex_map() methods.

*.  pyramid::reset_square_pyramid_vertices() reassigns the apex and base
vertices of the current pyramid object to the threevectors passed as
inputs.

*.  Added dynmically_compute_OBSFRUSTUM_flag bool member to MODEL class
along with set method.  Added OBSFRUSTUM_alpha, OBSFRUSTUM_beta,
OBSFRUSTUM_roll and OBSFRUSTUM_pitch angle members to MODEL class along
with set methods.

*.  MODEL::compute_dynmamic_OBSFRUSTUM() extracts the MODEL's current
velocity heading angle from the quaternion associated with the current time
and pass number.  It then dynamically builds the OBSFRUSTUM corresponding
to the input ID parameter which is aligned with the MODEL's velocity
direction vector and whose 3D opening angles are set by members
OBSFRUSTUM_alpha and OBSFRUSTUM_beta.  OBSFRUSTUM's absolute location is
updated at run-time rather and does not need to be pre-computed.  If the
OBSFRUSTUM is successfully constructed, this boolean method returns true.

*.  ISDS demos and extended pgms seem to work OK (except for SignPost
placement on bald earth in JUSTEARTH and slow OBSFRUSTUM FOV in bluegrass
demo) as of Mon, Jul 21 at 6 am on ISDS3D laptop (pfiles7_21a.tgz)

*.  Overloaded OBSFRUSTUM::build_current_frustum() which takes in the
viewing pyramid's instantaneous position and velocity direction vector.  It
also takes in opening angle alpha between the velocity direction vector
(assumed to lie exclusively in the XY plane) and the observation frustum's
side projected into the XY plane.  Angle beta between the observation
frustum's 3D side and -z_hat is also passed as an input parameter.  The
OBSFRUSTUM is also rotated about the MODEL's velocity direction vector by
angle roll, and it is then rotated about w_hat=v_hat x z_hat by angle
pitch.  This method recomputes the vertices for the viewing pyramid above
the Z plane and rebuilds the corresponding OSG Pyramid.

============================================================================
ISDS3D code changes made on Fri July 18:

*.  Added Intersection_PointsGroup_ptr member to PolyLinesGroup along with
get method.

*.  PolyLinesGroup::find_intersection_points() performs a brute-force
search over all pairs of PolyLines for points of intersection.  It then
instantiates member *Intersection_PointsGroup_ptr if it doesn't already
exist.  Finally, this method generates an intersection Point for display.

*.  linesegment::point_on_segment() now takes in an
endpoint_distance_threshold rather than having this parameter hardwired.
If the external point lies within this distance of either endpoint, it is
declared to lie on the line segment.

*.  mains/bluegrass/AVS/ROADS.cc is a variant of QTCITIES which computes
the intersections within a roads network read in from a PostGIS database.

============================================================================
ISDS3D code changes made on Tues, July 15, Weds July 16, Thurs, July 17 and
early Fri July 18:

*. Eliminated vector<vertex> vertices member of polyhedron in favor of
new vertices_handler_ptr member.

*.  Send X, Y, Z values relative to grid origin to robots channel in
EarthRegion::broadcast_track_statevector().

*.  vertex_handler::get_vertex_ptr() performs a brute-force search over
the dependent position values within either STL vector member
vector_table or Hashtable member *vertex_table_ptr.  If some vertex
position nearly equals the input posn threevector, this method
returns a pointer to that vertex.  We wrote this method so that the
positions of vertices in edge, face and polyhedron objects can be
changed without altering their 3D graph structures.

*.  Replaced threevector apex member of pyramid class with apex_ptr.  New ptr
member should be treated only as an alias for some vertex within member
*vertices_handler_ptr.

*. polyhedron[pyramid,face]::absolute_position() now calls
polyhedron[pyramid,face]::translate().

*.  Replaced threevector origin member of polyhedron with
origin_vertex_ptr.  Modified set & get origin methods.

*.  Eliminated threevector origin member of face class in favor of existing
COM member.  

*.  ISDS demos and standard pgms seem to work OK as of Fri, July 18 at 5:15
am on ISDS3D laptop (pfiles7_18a.tgz

*.  Decorations::get_SignPostsGroup_ptr(int n) now explicitly checks
whether n < get_n_SignPostsGroups().

*.  polyline::intersection_points_with_another_polyline() performs a
brute-force search over each edge segment within the current polyline to
see whether it intersects any edge segment of input polyline p.  If so, the
intersection point is stored within the STL vector which is returned by
this method.

*.  PolyLinesGroup::find_intersection_points() performs a brute-force
search over all pairs of PolyLines for points of intersection.

============================================================================
ISDS3D code changes made on Sat, July 12 & Sun, July 13:

*.  In geometry/edge class, replaced vertex members V1 & V2 with pointer
versions V1_ptr & V2_ptr.  

*.  Eliminated face::get_vertex_chain() in favor of get_vertex_chain_ptr().

*.  Modified mains/tracking/truth_velocities.cc to accomodate Delsey's
latest, cleaned version of Bluegrass ground truth tracks database.

*.  Wrote new vertices_handler class within src/geometry to hold list of
vertices outside of face & polyhedron classes.  Embeded vertices_handler
within edge & face classes.

*.  Performed MASSIVE overhaul of edge, face, polyhedron & pyramid classes
in src/geometry in order to start treating these geometrical objects as 3D
graphs.

*.  Eliminated threevector V1 & V2 members of edge class.

*.  Eliminated base & zplane_face members of pyramid in favor of face*
base_ptr and zplane_face_ptr.

*.  ISDS demos and extended pgms seem to work OK (except for SignPost
placement on bald earth in JUSTEARTH) as of Mon, Jul 14 at 8:15 am on
ISDS3D laptop (pfiles7_14d.tgz)

============================================================================
ISDS3D code changes made on Weds, Jul 9, Thurs, July 10 & early Fri, July 11:

*.  Shrunk size of play and pause video player icons so that they better
match fast forward and begin buttons' sizes.

*.  Introduced constant_vertices_altitude member and
fix_PolyLine_altitudes_flag of PolyLinePickHandler class along with set
methods.  PolyLinePickHandler::reset_PolyLine_altitudes() resets all of the
current PolyLine's vertices' z-values to constant_vertices_altitude.

*.  Created & added to repository OSG/packages/dted.pkg.  

*.  In RAYTRACE, can draw PolyLine on ground surface, elevate finished
PolyLine to constant altitude flight path, select predator model and then
fly model along flight path.

*. MODELSGROUP::initialize_Path_PolyLinePickHandler() customizes member
Path_PolyLinePickHandler so that it can be easily used for instantiating
flight paths for UAV models.

*. MODELSGROUP::generate_Predator_Model_for_flight_PolyLine() dynamically
instantiates a Predator model to fly along the last PolyLine member of
*Path_PolyLinesGroup_ptr.  It computes the UAV's variable orientation so
that it points forward everywhere along the flight path.
This method computes the flight path sampling distance based upon a
specified Predator speed and world game clock time step.

*.  Added delta_world_time_per_frame member to AnimationController along
with get method.

*.  Added speed member to MODEL class along with set/get methods.

*.  Can now enter flightpaths for more than one UAV within RAYTRACE via
PolyLinePickHandler.  

*.  Eliminated LineSegmentPickHandler from Decorations class.

*.  Added INSERT/MANIPULATE_POLYLINE as new mode to ModeController class.

*.  Added bool PolyLine_rather_than_Line_mode member to PolyLinePickHandler
class along with set/get methods.  Check this bool's value when also
checking MODE value.

*.  Added check for Path_PolyLinesGroup_ptr != NULL into
MODELSGROUP::update_display().

*.  ISDS demos and standard pgms seem to work OK as of Fri, July 11 at 9 
am on ISDS3D laptop (pfiles7_11d.tgz)

*.  Added set_permanent_color() to PolyLinePickHandler.

============================================================================
ISDS3D code changes made on Mon, July 7, Tues, July 8 & early Weds, July 9:

*.  Set urban_network_Messenger_ptr and robots_Messenger_ptr members to
NULL in EarthRegionsGroup::initialize_member_objects().

*.  Can now pass OSG filename as input argument for
MODELSGROUP::generate_Predator_MODEL().

*.  Added uniform_PolyLines_color member to MODELSGROUP class along with
set method.

*.  Added STL vector PolyLinesGroup_ptrs member to Decorations class.
Eliminated single PolyLinesGroup_ptr member in favor of this STL
vector. Modified get and add_PolyLine methods.  Added STL vectors
PolyLinesKeyHandler_ptrs and PolyLinePickHandler_ptrs as members to
Decorations class.  Eliminated single PolyLinePickHandler_ptr member.
Added/modified corresponding get methods.

*.  Added STL vectors MODELSGroup_ptrs, MODELSKeyHandler_ptrs and
MODELPickHandler_ptrs (along with Model analogs) as members to Decorations
class.  Eliminated single MODELPickHandler_ptr member.  Modified get and
instantiate_MODEL_key_and_pick_handlers() methods.

*.  Added azimuth member to track/observation class along with set/get
methods.

*.  In BluegrassClient::retrieve_mover_tracks(), now extract velocity
azimuth values from SKS version 2.2.2 and return actual vehicle velocity
vectors.  Track messages sent to ActiveMQ for vehicle 154 seem reasonable.

*.  Added README.SKS_vehicles to repository.

*.  Changed PACKET_START and PACKET_STOP text commands in
EarthRegionsGroup::update_display() to verbs START_PACKET & STOP_PACKET.

*.  Eliminated frame_counter_change_OK_flag from AnimationController class.

*.  Cease all packet broadcasts in EarthRegions classes to robots channel
when AnimationController game clock is paused.

*.  ISDS demos and standard pgms seem to work OK as of Weds, July 9 at 9:30
am on ISDS3D laptop (pfiles7_9e.tgz)

============================================================================
ISDS3D code changes made on Fri, July 4, Sat, July 5, Sun, July 6 and early
Mon, July 7:

*.  Moved few lines in VideoServer section of QTCITIES so that program can
be run if no surface texture is specified.

*.  Added track::get_interpolated_statevector() which generalizes
get_interpolated_posn().

*.  EarthRegion::communicate_track_statevector() sends key-value string
pairs to ActiveMQ for multi-UAV simulation purposes.

*.  Privatized vector<message> messages and last_message members of
GraphicalsGroup.  Eliminated GraphicalsGroup::set_Messenger_ptr() in favor
of pushback_Messenger_ptr().  Eliminated GraphicalsGroup::Messenger_ptr in
favor of vector<Messenger*> Messenger_ptrs. Added
GraphicalsGroup::get_n_Messenger_ptrs().

*.  Added urban_network_Messenger_ptr and robots_Messenger_ptr to
EarthRegionsGroup class along with
assign_EarthRegionsGroup_Messenger_ptrs().

*. Renamed message/messenger.h & .cc files as Messenger.h & .cc files.

*.  EarthRegion::broadcast_subpacket() takes in command and property
strings and broadcasts them via *robots_Messenger_ptr.

*.  EarthRegion::broadcast_track_statevector() constructs key-value string
pairs containing track statevector information.  We wrote this specialized
utility to communicate with Luca Bertucelli's MATLAB Multi-UAV C2
simulator.

*.  EarthRegionsGroup::update_display() broadcasts PACKET_START &
PACKET_STOP messages to EarthRegions' robots_Messenger_ptr members.

*.  Added math/ltonevector.h to repository, and cleaned up lttwovector.h

*.  ISDS demos and standard pgms seem to work OK as of Sun, July 6 at 11:30
am on ISDS3D laptop (pfiles7_6d.tgz)

*. In G99VideoDisplay::display_current_frame(), changed
FFMPEGVideo_ptr->getCurrFrame() to getNextFrame().  Can now slowly step
backwards (and very slowly play in reverse) .mov files!

============================================================================
ISDS3D code changes made on Weds, July 2:

*.  ISDS demos and standard pgms seem to work OK as of Weds, July 2 at
6 :30 am on ISDS3D laptop (pfiles7_2b.tgz)

*.  Added Delsey's notes on how to clone postgres databases to
README.more_postgres_notes

*.  Started to integrate Kevin Chen's latest FFMPEGVideo class into our
library tree.

*.  Video handling most likely has a serious memory leak!

.........................

*.  Generlized PassesGroup and G99VideoDisplay classes so that they can
accept .mov in addition to .mp4 files.

*.  Kevin's new FFMPEGVideo class appears to play .mov version of CH movie
OK!

.........................

*.  Added README.valgrind to repository.

*.  Changed /future/new_video-h264.mp4 to
/future/fullvideo_2700-h264_quicktime.mov on disk as well as in
ar1_texture_frames_all_orig.pkg.  Seeking with Kevin Chen's new FFMPEGVideo
class does indeed seem to work very well (at least on touchy2)!

============================================================================
ISDS3D code changes made on Sat, Jun 28, Sun, Jun 29, Mon, Jun 30 and early
Tues, July 1:

*.  Overloaded & higher-level PolyLine::add_flow_direction_arrows() takes
in a distance_between_arrows parameter and computes a reasonable set of
arrow position fractions along the current PolyLine object.  It then calls
the preceding version of PolyLine::add_flow_direction_arrows().

*.  In EarthRegion::display_track_as_PolyLine(), we recall that track
positions lie on top of each other whenever the mover stands still.  So we
use only the subset of distinct track positions to generate the new
PolyLine.

*.  polyline::generate_regularly_spaced_edge_points_kdtree() takes in
polyline spacing parameter ds.  It fills member STL vector
regularly_spaced_edge_points with fourvectors containing XYZ triples along
the polyline along with integer indices labeling the triples.  It then
instantiates a KDtree for the fourvectors which can later be used in fast
searches for regularly spaced edge points close to some external point.

*.  track class copy constructor now calls allocate_member_objects().
track::docopy() explicitly copies contents of *time_map_ptr.

*.  track::compute_distinct_posns() loops over all vertex positions within
the current track.  It stores within member STL vector distinct_posn those
which do not lie on top of each other.

*. tracks_group::compute_speed_dependent_vehicle_track_colors() assigns
colors at each DISTINCT track vertex point.

*.  Mask PolyLines' arrow head Cones whenever they're colored according to
speed.

*.  ISDS demos and standard pgms seem to work OK as of Sun, Jun 29 at
10 am on ISDS3D laptop (pfiles6_29e.tgz)

*.  Wrote specialized & more efficient versions of
threevector::unitvector() and threevector::sqrd_magnitude().

*.  Privatized all previously protected members of polyline class.

*.  polyline::min_sqrd_distance_to_point() takes in external threevector
currpoint along with an approximate desired range to the currently
polyline.  It first performs a KDtree search for regularly spaced polyline
vertices to the input external threevector.  This method subsequently
performs a brute-force search only over the small number of returned nodes
for the minimal squared distance to the external threevector.

*.  Only allow PolyLines to be dragged in MANIPULATE_LINE mode and no
longer in INSERT_LINE mode.

*.  Limit maximum number of times searches can be performed in all 3 
kdtreefunc::find_closest_nodes() methods. 

*.  Added get_reference_origin() to PolyLine class.

*.  As of 6/30/08 at 6:30 am, we have trivially disabled
PolyLinePickHandler::drag() until we have a chance to rethink this
operation carefully.

*.  Added Allow_Insertion_flag & Allow_Manipulation_flag bool members to
GeometricalPickHandler along with set methods.  Default value = true.

*.  Added PolyLine::get_or_construct_polyline().

*.  geometry_func::line_to_line_squared_distance() computes the minimal
squared distance between two infinite lines which are labeled by their base
points (v1 and w1) and their direction vectors (e_hat and f_hat).

*.  polyline::min_sqrd_distance_to_ray() takes in the basepoint and
direction vector for an input ray which we assume is generally aligned with
the Z-axis (i.e. for point or line picking within the XY plane, the LOS
from the camera basically points along -Zhat).  This method first performs
a KDtree search for the polyline vertices closest to the ray's grid
intercept position.  Approximating each edge associated with these vertices
as an infinite line, we next compute the 3D impact parameter for the input
ray with the edges.  The squared length of the smallest 3D impact parameter
is returned by this method.

*.  In PolyLinePickHandler::select_Polyline(), if two or more polyline
segments lie very close to the input ray, add their IDs to STL vector
close_polyline_IDs.  Below, we systematically cycle through these IDs so
that a user can eventually pick any polyline (even if it's occluded by some
other polyline):

*.  Picking of tracks in QTCITIES works reasonably well!

*.  ISDS demos and standard pgms seem to work OK as of Tues, July 1 at
7 am on ISDS3D laptop (pfiles7_1b.tgz)

============================================================================
ISDS3D code changes made on Fri, Jun 27:

*.  Changed n < get_last_framenumber() to n <= get_last_framenumber() in
GraphicalsGroup::set_constant_scale().

*.  Added GraphicalsGroup::get_initial_t() which returns first_framenumber
from AnimationController.

*.  In MODELSGROUP::finish_waypoint_entry(), set model scale at each flight
path point equal to its initial scale.

......................

*.  Added ConesGroup_ptr member to PolyLine class along with get methods.

*.  Added Cone::set_color(const osg::Vec4& color).

*.  Added PolyLinesGroup::get_width().

*.  PolyLine::add_flow_direction_arrows() takes in an STL vector containing
fractional locations of arrow heads along the current PolyLine object.  It
instantiates new Cone members of the PolyLine's ConesGroup member.  The
size of the arrow heads is proportional to the input linewidth parameter.

============================================================================
ISDS3D code changes made on Tues, Jun 24 and Thurs, Jun 26:

*.  Removed -lippi from link list in Makefile for touchy2 and new laptop
compilation purposes.

*.  Changed SMALL LOI size from 4.0 to 2.0 so that Dead Drop 1.3 label does
not obscure two tracks in its vicinity.

*.  Extended start time for truth tracks in order to pick up more of 2nd
track near Dead Drop 1.3

*.  Perform sanity speed check in tracking/TRUTH_VELOCITIES.cc

*.  Added Dynamic_WikiPage_URL member to BluegrassServer along with set
method.  Added Dynamic_WikiPage_URL member & get method to PassesGroup
class.  mains/bluegrass/AVS/BLUELOGIC now sets Dynamic_WikiPage_URL after
instantiating BluegrassServer.

*.  In WebServer constructor, we now follow Ross & Dave's suggestion to set
host_address to QHostAddress::Any so that Server can listen for client
calls coming from any IP address and port.

*.  Added n_horiz_output_pixels as member to VideoServer.  Can now specify
this parameter's value as a get() argument.  Generalized
video_chip[_local].html webform so that user can specify size of output
video chip.

..............

*.  Added speed member to tracking/observation class along with set/get
methods.

*.  Read truth car speeds from SKS DataServer rather than flat file!

*.  Main program tracking/TRUTH_TRACKS is a specialized version of
TRUTH_VELOCITIES.  It outputs truth track times relative to t_start (secs),
Eastings and Northings relative to a hardwired Lubbock grid origin
(meters), and Vx & Vy in meters/sec.  We wrote this little utility in order
to give Luca B. sanitized versions of a few truth tracks.

============================================================================
ISDS3D code changes made on Sat, Jun 21 & Sun, Jun 22:

*.  Added multicolor_flag bool member to Geometrical class along with
set/get methods.  Added set/get_multicolor_flags to GeometricalsGroup
class.

*.  Added vector<threevector> velocity member to track class along with
set/get methods.

*.  Removed RUN/MANIPULATE MOVIE button from OSGButtons_local.html along
with OSGButtonServer.cc.  Replaced with SHOW/HIDE SPEEDS button.

*.  Added vector<tracks_group*> ROI_tracks_group_ptrs member to
OSGButtonServer class.  Push back dynamically instantiated tracks_group
each time ROI is monitored.  Purge STL vector's contents when CLEAR TRACKS
button is pressed.

*.  tracks_group::compute_speed_dependent_vehicle_track_colors() loops over
each track within *this.  At each track point, it computes the ground
vehicle's speed in miles-per-hour.  A pure hue with maximal intensity is
then assigned based upon a specialized colormap hardwired into this method.
Slow ground speeds (which potentially mark threatening spatial locations)
correspond to warm colors (red, orange), while rapid ground speeds (which
presumably cannot correspond to instantaneously threatening ground
vehicles) correspond to cool colors (cyan,blue).

*.  Separated off from Monitoring ROI section of OSGButtonServer generation
of ROI tracks groups into private method generate_ROI_tracks_group().

*.  New tracks generated in Monitoring ROI section are colored locally by
speed or globally by track number depending upon current show speed state.

*.  track::get_track_point_index() takes in time t and searches STL map
member *time_map_ptr for a matching time entry.  If one is found, the
integer track point index corresponding to the input time is returned.
(This index may subsequently be used to obtain the position and velocity
corresponding to the track point labeled by input time t.)  Otherwise, this
method returns -1.

*.  Added virtual void set_colors(vector<osg::Vec4> colors) to Geometrical
class.  Added vector<osg::Vec4> local_colors as protected member of
Geometrical class along with get method.

============================================================================
ISDS3D code changes made on Fri, Jun 20:

*.  Set n_vertices check to n_vertices-1 in
piecewise_linear_vector::value() and piecewise_linear::value().

*.  In overloaded filterfunc::brute_force_filter() taking STL vector args,
do not renormalize filtered output if hsum==0.

*.  Blink ROI_PolyLines for 5 secs rather than default 10 secs.

.............................

*.  Program mains/tracking/TRUTH_VELOCITIES is a specialized utility for
computing Bluegrass truth vehicle velocity vectors.

============================================================================
ISDS3D code changes made on Thurs, Jun 19

*.  Added tracks_group::destroy_track(track_ptr).

*.  Privatized PointFinder::find_closest_world_point(
      const threevector& ray_basepoint,const threevector& ray_ehat,
      threevector& closest_worldspace_point,double tan_theta=.004363323);

*.  Major change!!!  In PointFinder::find_closest_world_point(), take
ray_basepoint to be given by CM_3D_ptr->get_eye_world_posn() rather than
result returned by Transformer::compute_ray_into_screen(X,Y).  Still use
latter method to get ray's world-space direction.  This change seems to
yield much faster and more reliable 3D point picking.

*.  Eliminated unnecessary call to Transformer::compute_ray_into_screen()
in ConePickHandler::select_Cone(), PyramidPickhandler::select_Pyramid(),
EarthManipulator::compute_screen_center_intercept_ECI() 
and Earth::compute_camera_to_screen_center_distance().

*.  Eliminated Transformer::compute_screen_ray_intercept_with_ellipsoid().

*.  ISDS demos and standard pgms seem to work OK as of Thurs, Jun 19 at
12:15 pm on ISDS3D laptop (pfiles6_19d.tgz)

*.  Started writing program to compute track velocities.

============================================================================
ISDS3D code changes made on Weds, Jun 18:

*.  In EarthRegionsGroup::parse_last_message(), added delete_mover call to
movers_group for ROIs.

*.  Explicitly count number of acceptable input key-value string pairs
within VideoServer::extract_chip_...() methods.  If they do not equal
n_args, these bool methods return false.  We now also accept a TimeStamp
key for automatic javascript updating purposes.

............................................

*.  Eliminated irrelevant last_used_ID member from GraphicalsGroup class.

*.  Added latest_ROI_ID to movers_group class and get_next_unused_ROI_ID()
method which simply increments latest_ROI_ID.

*.  Changed several get_PolyLine_ptr() calls in
PolyLinesGroup::parse_last_message() to
get_ID_labeled_PolyLine_ptr(PolyLine_ID).

*.  Call movers_group_ptr->get_latest_ROI_ID() in monitoring ROI section of
OSGButtonServer.

*.  Deleting and blinking of ROI PolyLines works somewhat better than
before (though it definitely still contains bugs).

============================================================================
ISDS3D code changes made on Tues, Jun 17:

*.  Comment out call to parse_last_message() within
CylindersGroup::update_display().

*.  In QTCITIES, instantiate separate EarthRegions_urban_network_messenger,
TrackLines_urban_network_messenger and ROILines_urban_network_messenger
objects to ensure ActiveMQ messages are broadcast to both EarthRegionsGroup
and PolyLinesGroup with no mail messages being purged before being read.

*.  Externally received DELETE_VERTEX messages now lead to track polylines
and movers_group nodes being deleted.

*.  Added mover_ptr member to PolyLine class along with set/get methods.

*.  Can now blink ROI PolyLines as well as vehicle track PolyLines by
selecting nodes in social network graph.

============================================================================
ISDS3D code changes made on Mon, Jun 16:

*.  Renamed PolyLinesGroup_ptr as TrackLinesGroup_ptr in QTCITIES and
OSGButtonServer.

*.  EarthRegion::generate_track_colors() assigns distinct colors to each
track within input *curr_tracks_group_ptr.  Track color information is
saved within each track's RGB_color member.

*.  movers_group::issue_delete_all_message() should be called when a
map-client user wants to purge all Regions-of-Interest and vehicle tracks.
Michael Yee's social network program can then simply respond by destroying
all vertices and edges.

============================================================================
ISDS3D code changes made on Sun, Jun 15 & early Mon, Jun 16:

*.  Deleted root->addChild(centers_group.get_OSGgroup_ptr()) in VIEWCITIES,
TESTCITIES, VIDEOCITIES and QTCITIES.  Tiling in of ladar clouds in these
programs seems to be noticeably faster.

*.  Recreated SATCITIES starting from current VIEWCITIES.  SATCITIES
performance is now OK.

*.  ISDS demos and standard pgms seem to work OK as of Sun, Jun 15 at 8 am
on ISDS3D laptop (pfiles6_15b.tgz)

*.  Added label_ID integer member to track class along with set & get
methods.

*.  Added TRACK_LABELS_MAP* track_labels_map_ptr member and get method to
tracks_group class.  Store (track_label_ID,track_ID) pairs within this STL
map.

*.  Added EarthRegion_ptr member to VideoServer class along with set
method.

*.  VideoServer::extract_chip_centered_on_track() extracts a truth
vehicle's label ID along with a radius parameter measured in meters from
the input STL vector of string pairs.  (The input vector's size must equal
2.)  This method computes a geopoint whose coordinates correspond to the
vehicle's instantaneous position.  It then calls Movie member functions
which generate a stringstream for a PNG video chip whose diagonal radius
equals the input parameter.  If any of the input parameters are
nonsensical, this boolean method returns false.

*.  G99VideoDisplay::generate_central_bbox() takes in the height and width
for a video chip measured in pixels.  It also takes in the bounding box's
fractional size, the bbox color and the unsigned char* array which holds
the video chip data.  This method draws a single pixel wide box surrounding
the video chip's center location.

*.  G99VideoDisplay::color_subimage_array() colors the 3 RGB entries within
char* array m_subimage located at pixel_offset from its start.

*.  Updated bluegrass/AVS/video_chip.html.

*.  Globally renamed set[get]_selected_Graphical_number() as
set[get]_selected_Graphical_ID() in GraphicalPickHandler & GraphicalsGroup
and all their descendant classes.

*.  Added surface_picking, cloud_picking and Zplane_picking flags to
GraphicalPickHandler along with set methods.  These flags can be used to
prohibit certain types of searches from being performed.  Forbid Zplane
point picking when entering ROI regions in QTCITIES.

*.  Eliminated n_vertices as member of Geometrical class.
Geometrical::get_n_vertices() now returns vertices_refptr->size().

*.  Added min_points_picked member to PolyLinePickHandler class along with
set method.  PolyLinePickHandler::doubleclick() returns false if
curr_PolyLine_ptr->get_n_vertices() < min_points_picked.

*.  Call new method movers_group_ptr->purge_all_ROIs() in CLEAR_TRACKS
section of OSGButtonServer,

*.  Generalized OBSFRUSTUM::set_color() so that side_edge, zplane_edge and
volume colors can all be separately specified.  Color Constant Hawk
OBSFRUSTUM's zplane edges brick to better distinguish them from the yellow
side edges.

*.  ISDS demos and standard pgms seem to work OK as of Mon, Jun 16 at 9 am
on ISDS3D laptop (pfiles6_16b.tgz)

============================================================================
ISDS3D code changes made on Fri, Jun 13:

*.  Added more notes to README.bluegrass_demo based upon June RCO program
review in G104 conference room.

*.  Added notes regarding G104 conference room's video switch to
README.G104_scrn_presets.

*.  Instantiate VideoServer_ptr in QTCITIES with default NULL value.  If
VideoServer_URL.size() > 0, then dynamically generate a new VideoServer
object and assign to this pointer.

============================================================================
ISDS3D code changes made on Mon, Jun 9 & Tues, Jun 10:

*.  Increased alpha_selected from 0.10 to 0.15 in
EarthRegion::initialize_track_mover_Cylinder().

*.  In OSGButtonsServer, reset call to associate_vehicles_with_ROI() AFTER
call to display_tracks_as_PolyLines().  Recall message queue broadcasts
PolyLine colors for tracks so that edges in Michael Yee's social network
program can be color coordinated.

*.  VideoServer::extract_chip_corresponding_to_center_and_radius() extracts
a center point's longitude and latitude coordinates along with a radius
parameter measured in meters from the input STL vector of string pairs.
(The input vector's size is assumed to equal 3.)  After converting to UTM
coordinates, this method computes a longitude-latitude bbox from the input
arguments.  It then calls Movie member functions which write to file output
a video chip whose number of horizontal pixels is fixed at a large enough
value to be comfortably viewed within a web browser window.  The output PNG
file is written to the output_subdir specified within this method.

*.  Added default min & max longitude & latitude values to
video_chip[_local].html file in mains/bluegrass/AVS.  Added new section
where center longitude,latitude plus radius can be entered.  Chip bbox then
automatically generated within
VideoServer::extract_chip_corresponding_to_center_and_radius().

*. Movie::export_current_subframe() now takes n_horiz_pixels as an input
integer argument.

*.  Replaced resampling call to gdal_translate with ImageMagick's convert
program in G99VideoDisplay::write_curr_frame().

....................................

*. In WebServer::readSocket(), write out responseHeader generated for both
text and binary get requests.

*. G99VideoDisplay::retrieve_curr_subframe_byte_data() now uses OSG's
Image::scaleImage() to upsample input image file and force number of horiz
output pixels to agree with specified input number while maintaining
image's aspect ratio.

....................................

*.  Introduced ugly hack to avoid servicing two expensive back-to-back
get() requests to VideoServer.  For reasons we don't understand,
readyRead() signal is fired twice for video chip get requests.  So we
ignore every other call to VideoServer's get() method.

============================================================================
ISDS3D code changes made on Sun, Jun 8 in afternoon and early Mon, Jun 9:

*.  On ISDS3D, deleted 3.2G /future/fullvideo_2700-h264.mp4 and replaced
with 5.2G /future/new_video-h264.mp4.  Verified that original frame times
for AR1_002 supplied by Chris Sataline work acceptably (though not
perfectly) well with 5.2G file.  So globally changed input video package
file from ar1_texture_frames_all.pkg to ar1_texture_frames_all_orig.pkg on
both ISDS3D and TOUCHY.  Appearance of 5.2G file output from DiamondTouch's
1024x768 projector is noticeably better than 3.2G file.

*.  In GraphicalsGroup, eliminated check_messages() and parse_messages() in
favor of retrieve_last_message().

*.  In CylindersGroup, eliminated parse_messages() in favor of
parse_last_message().  

*.  Added mailbox_locked_flag and clearing_mailbox_flag boolean and
n_sent_messages and n_received_messages members to Messenger class.  Added
get_n_messages_in_mailbox(), get_n_curr_messages(), get_n_sent_messages()
and get_n_received_messages() to Messenger class.

*.  Number of messages sent by movers_group issue member functions appears
to match number received by MESSAGE_RECEIVER program when QTCITIES is run
locally on ISDS3D.

*.  VIDEOCHIP ran overnight on ISDS3D without crashing.  Could still
retreive chips via web browser interface in morning.

*.  Eliminated GraphicalsGroup member message_substrings.

============================================================================
ISDS3D code changes made on Sat, Jun 7 & Sun, Jun 8:

*.  Added more notes to README.bluegrass_demo on ISDS3D.

*.  Cleaned up html files in bluegrass/AVS.

*.  AnimationController::increment[decrement]_frame_counter() now print out
statements indicating when looping to first[last] frames occurs.

*.  tracks_group::destroy_track() performs a brute force search for the
track pointer corresponding to the input ID.  If found, the pointer is
deleted from member STL vector track_ptrs and this boolean method returns
true.

*.  Added bool Server_listening_flag to WebServer class along with get
method.

============================================================================
ISDS3D code changes made on Thurs, Jun 5:

*.  G99VideoDisplay::process_video_chip_query() takes in an STL vector of
string key-value pairs whose size is assumed to equal 4.  It loops over
these string pairs and pulls out min & max longitude & latitude values.
This method then extracts the current video subframe corresponding to the
lower left and upper right bbox corners.  It returns the video subframe's
byte content within member QBytearray PNG_data_array.

============================================================================
ISDS3D code changes made on Weds, Jun 4:

*.  Added write_text_content_to_socket_flag bool member to WebServer class
with a default true value.

*.  Added QByteArray PNG_data_array member to VideoServer class.

*. Member function VideoServer::get() is significantly different from
WebServer::get().  It is designed specifically to return PNG output to a
web client which requests a video chip via a longitude-latitude bounding
box.  Because the returned image represents binary rather than text data,
we bind a new QDataStream to the output socket and do not send any output
to the QTextStream which is opened within WebServer::readSocket().  [Once
this method is finished writing output to QDataStream, it sets WebServer's
write_text_content_to_socket_flag to false so that no additional
information is written to the output socket within
WebServer::readSocket().] Secondly, we need to return the contents of
QByteArrays (basically char*) rather than QStrings.  With lots of help from
Dave Ceddia, we also learned the painful and hard way that we must send
both the ResponseHeader and PNG data payload to QDatastream via its
writeRawData member function rather than Operator<<.  The latter introduces
spurious bytes between the header and payload which causes the browser to
malfunction.

*.  Program VIDEOCHIP can finally return PNG chips from the current video
frame to a browser issuing an http get() command corresponding to input
long-lat bboxes.

*.  G99VideoDisplay::retrieve_curr_subframe_byte_data() takes in the
horizontal and vertical fractions of the current video frame which define a
subimage.  It extracts the contents of this subframe to string member
output_image_string in the form of an image whose type is specified by the
output_image_suffix input argument.  The byte contents of
output_image_string can later be returned to an http client such as a web
browser for display.

.......................

============================================================================
ISDS3D code changes made late on Mon, Jun 2 and Tues, Jun 3:

*.  Added more notes to README.bluegrass_demo

.......................

*.  Followed Ross' changes for get() and post() members of Qt/web/WebServer
class.  These functions now return QByteArrays rather than Qstrings.

*.  Followed Ross and added QHttpResponseHeader argument to get() and
post() members of WebServer class and its descendants.  In
VideoServer::get(), overwrite response Header's content type from default
text/xml to image/png.

*.  Added Geometrical::change_text_size(int i,double factor) method.

*.  VideoServer::get() no longer takes in QDomDocument doc or QDomElement
html input args.

============================================================================
ISDS3D code changes made late on Fri, May 30, Sun, Jun 1 and early Mon,
Jun 2:

*.  Defined typedef std::pair<std::string,std::string> Property in message
header.

*.  Added PolyLine_ID member to track class.

*.  Added track_ptr member along with set/get methods to PolyLine class.

*.  Added map<string,string>* key_value_map_ptr member to message class
along with extract_and_store_property_key_and_values() and
get_property_value() methods.

*.  Can blink specified PolyLine track by passing SELECT_VERTEX message via
ActiveMQ.

*.  In QTCITIES, do not attempt to instantiate VIDEOSERVER unless
VideoServer_URL.size() > 0.

============================================================================
ISDS3D code changes made late on Thurs, May 29 and early on Fri, May 30:

*.  Added CylinderPickHandler_ptr member to CylindersKeyHandler class.

*.  Added CylindersKeyHandler_ptr member to Decorations class along with
get methods.

*.  CylindersGroup::find_Cylinder_ID_given_track_label() takes in integer
track_label.  It performs a brute force search over all Cylinders
associated with tracks.  If some Cylinder's track label matches the input
track_label, this method returns the Cylinder's ID.  Otherwise, it returns
-1.

*.  In MANIPULATE_CYLINDER mode, user can enter 's' to input ground truth
track label.  CylindersKeyHandler code then forces Bluegrass demo system to
act as if user had double clicked on the specified truth mover.

*.  In PolyLinesGroup::update_display(), call reset_colors() to enable
PolyLine blinking.

*.  Added single_blink_duration and max_blink_period members to Geometrical
class along with set methods.

*.  Can now blink PolyLines.

============================================================================
ISDS3D code changes made early on Thurs, May 29:

*.  Header files from Qt/web apparently need to be placed near top of
#include statements in main programs in bluegrass/AVS.

*.  Wrote Qt/web/VideoServer class to handle http calls for video chips

*.  Added Movie_ptr member to TextureSector class along with set & get
methods.  Save dynamically generated Movie_ptr in
TextureSectorsGroup::generate_TextureSector_geode().

*.  Wrote messenger::connected_to_broker_flag() which should be called
prior to attempting to send or receive ActiveMQ messages.  Added this call
into movers_group::issue_add/delete_vertex/edge_message() member funcs.

*.  Started README.bluegrass_demo and added to repository.

*.  Added VideoServer member to PassesGroup along with get method.

*.  G99VideoDisplay::clip_texture_fracs() clips the bbox fractions within
input twovector V to the viable range [0.0 , 1.0].  

*.  Program VIDEOCHIP is a variant of VIDEO which stands up a video server.
A standard http get request containing longitude-latitude bounding box
coordinates can be passed into the server.  A chipped subimage from the
current frame corresponding to the bounding box region is then exported by
this program.

*.  Added VideoServer into QTCITIES so that subimage chips can be generated
via http calls.

============================================================================
ISDS3D code changes made early on Weds, May 28:

*.  Renamed EarthRegionsGroup::finish_generating_region() as
initialize_new_EarthRegion().

*.  movers_group::delete_mover() removes the input mover from
 *movers_network_ptr.  It then destroys the dynamically generated mover
itself.  This method also issues appropriate DELETE_EDGE and DELETE_VERTEX
ActiveMQ messages.

*. Wrote issue_delete_vertex_message() and issue_delete_edge_message()
members of movers_group class.

*.  Relaxed check on int r in movers_group::get_mover_ptr(int r) to just r
>= 0 and no longer r < movers_network_ptr->size().

*.  movers_group::issue_add_vertex_message() can now output mover RGB color
metadata.

*.  EarthRegionsGroup::generate_new_EarthRegion() now consistently assigns
IDs to PointCloud and SurfaceTexture regions.

*.  ISDS demos and standard pgms seem to work OK as of Weds, May 28 at 3:20
pm on ISDS3D laptop (pfiles5_28g.tgz)

.....................

*.  Movie::export_current_subframe() takes in coordinates for a
longitude-latitude bounding box.  This method assumes that the current
Movie object corresponds to an aerial nadir video which is reasonably well
georegistered.  It chips out from the current frame a sub-image
corresponding to the input bbox and exports it to a PNG file whose name
contains the bbox information.

============================================================================
ISDS3D code changes made on Tues, May 27:

*.  G99VideoDisplay::write_curr_frame() chips out the region defined by the
input lower left and upper right corner fractions.  If input parameter
n_horiz_output_pixels != -1, this method uses gdal_translate to resample
the output image so that its horizontal size matches the specified input
value.

*.  Added vector<threevector> video_corner_UTM_coords member to Movie
class.

*.  Movie::georegister_subtexture_corners() takes in a bounding box in
longitude,latitude space.  This method computes and resets the
corresponding sub-texture fractions (ranging from 0 to 1 in both the
horizontal and vertical directions!) for the movie's 4 corners.

It is important to note that the lower left and upper right corners will be
correctly georegistered.  However, the longitude and latitude coordinates
for the lower right and upper left will NOT generally be given by
(max_longitude,min_latitude) and (min_longitude,max_latitude).  And the
geocoordinates for all other pixel locations within the subtexture will be
only approximately correct as well.

*.  Messenger::sendTextMessage() incorporates time stamp into message
property prior to sending it.

*.  Main pgm MESSAGE_SENDER mimics ADD_VERTEX & ADD_EDGE commands with type
and ID information passed as properties.

..............

*.  Added MESSENGER_H ifndef/define guards to messenger.h file.

*.  Added Messenger_ptr member to mover_groups class along with set/get
methods.

*.  In Messenger class, moved messengerThread_ptr->start() command out of
allocate_member_functions() into finish_construction() after broker_URI is
defined.

*.  No longer instantiate and start messengerThread object in
MESSAGE_SENDER.  Instead, rely upon messengerThread_ptr member of Messenger
class.

*.  movers_group::issue_add_vertex_message() takes in *new_mover_ptr and
generates an ActiveMQ "ADD_VERTEX" message.  The mover's type and ID are
encoded as key-value string pair properties.

*.  movers_group::issue_add_edge_message() takes in *mover1_ptr and
mover2_ptr and generates an ActiveMQ "ADD_EDGE" message.  The two movers'
types and IDs are encoded as key-value string pair properties.

============================================================================
ISDS3D code changes made on Fri, May 23, Sat May 24, Sun May 25, and Mon
May 26:

*.  Renamed Network::get_nsites() as size().

*.  Eliminated instantiation of tracks_group object in QTCITIES.  We now
instead use tracks_group_ptr which is automatically generated in each
EarthRegion object.

*.  Eliminated mover_tracks_ptr member from EarthRegionsGroup along with
set & get methods.  Moved display_tracks_as_PolyLines() from
EarthRegionsGroup class into EarthRegion.

*.  Created track/movers_group class which holds mover network along with
network instantiation and linking methods.  Eliminated all mover dependence
from tracks_group class.  EarthRegion now instantiates a *movers_group_ptr
member.

*.  Added tracks_group_ptr and movers_group_ptr members to EarthRegion
class.

*.  movers_group::associate_vehicles_with_ROI() takes in *tracks_group_ptr
which is assumed to hold vehicle tracks passing through the last entered
Region of Interest (ROI).  This method loops over all the vehicle tracks,
extracts their Bluegrass labels as vehicle IDs and forms ROI-vehicle links
within *movers_network_ptr.

*.  G99VideoDisplay::write_curr_frame() uses OSG's built-in file writer
plugins to output the current contents of image_refptr as a png
file.

============================================================================
ISDS3D code changes made on Fri, May 23

*.  Created tracks/mover.cc class to hold vehicle and ROI metadata.

*.  Added Network<mover* >* movers_network_ptr and MOVERS_MAP*
movers_map_ptr members to tracks_group class.

*.  Wrote testdir/NETWORKTEST.cc to experiment with high-level formation of
vehicle and ROI network formation.

============================================================================
ISDS3D code changes made on Thurs, May 22:

*.  Decreased size of road text labels from 10 to 6 in QTCITIES.

*.  Elevated base face altitude from grid_origin.z to min_z+100 in QTCITIES.

*.  Changed alpha for CH OBSFRUSTUM from 0.2 to 0.1 in
MODELSGROUP::generate_MODEL_FOV_OBSFRUSTUM()

============================================================================
ISDS3D code changes made early on Weds, May 21 and early on Thurs, May 22:

*.  In Geometrical class, replaced single osg::Vec4 text_color member with
permanent_text_color,selected_text_color & archived_text_color.  Added
set/get methods for permanent_text_color.  Eliminated
Geometrical::get_text_color().

*.  Geometrical::set_text_color(const osg::Vec4& color) loops over
n_text_messages and calls set_text_color(i,osg::Vec4).

*.  Geometrical::compute_altitude_dependent_text_label_sizes() introduces
virtual camera altitude dependence into the display of Region of Interest
(ROI) text labels for the Bluegrass demo.  In particular, we do not want
moving vehicles within the CH video to be obscured by text labels when the
user zooms in towards the bottom of a ROI polyhedron.  So if the virtual
camera's altitude is less than some min_eye_altitude, we drastically shrink
the size of all ROI PolyLine text labels so that they effectively
disappear.  When the virtual camera rises above the min_eye_altitude
ceiling, we restore the text labels' sizes to their original values.

*.  Changed type for CM_3D_refptr member of CylindersGroup from
Custom3DManipulator to Terrain_Manipulator.

*.  Added n_anim_steps as argument with default value of -1 to
Terrain_Manipulator::flyto() methods.

*.  Terrain_Manipulator::jumpto() is a stripped-down version of flyto().
It executes an animation path generated from a single final_posn and
final_R input.  Call this method from
CylinderPickHandler::select_Cylinder() when ground truth vehicle is double
clicked in order to force virtual camera to the screen center with a
canonical orientation.

============================================================================
ISDS3D code changes made early on Weds, May 21:

*.  In OSGButtonServer, ensure reset time never precedes earliest possible
game time.

* In CylindersGroup::follow_selected_cylinder(), disallow user to
translate, tilt or spin virtual camera when a mover is being followed by
setting rotation part of M to identity matrix.

*.  Added ROIlines_group_ptr member to EarthRegion class along with get &
generation methods.

*.  In Decorations::add_PolyLines(), added
instantiate_key_pick_handler_flag as input argument which has default true
value.

*.  In QTCITIES, instantiate separate PickHandler which takes ROILinesGroup
rather than PolyLinesGroup as input arg. In OSGButtonServer, work with
ROILinesGroup rather than PolyLinesGroup in Entering and Monitoring ROI
sections.

============================================================================
ISDS3D code changes made on Tues, May 20:

*.  EarthRegionsGroup::generate_roadlines_group() takes in integer r
labeling a particular EarthRegion.  It instantiates PolyLinesGroup
*roadlines_group_ptr and assigns its pointer to the particular
EarthRegion's member pointer of the same name.

*.  Added Graphical_name=LatLongGrid in
LatLongGrid::initialize_member_objs().

*.  Added private method CylindersGroup::initialize_new_Cylinder().

*.  Created new EarthRegionsKeyHandler class.

*.  Eliminated unnecessary regions and get_n_EarthRegions() members from
EarthRegionsGroup class.

*.  Overloaded operator<< in Grid and LatLongGrid classes.

*.  Eliminated corners_COM member of G99VideoDisplay class in favor of
compute_corners_COM() method.

*.  Movie::get_absolute_altitude() takes COM of movie's 4 corners as 
initial position for the movie.  It then adds the z displacement
corresponding to the input curr_t and pass_number parameters.  This method
returns the sum of the initial height and z offset as the current absolute
altitude for the movie in world space.

*.  EarthRegionsGroup::generate_annotation_bboxes(),
display_tracks_as_PolyLines() and initialize_track_mover_Cylinders() now
take input integer r labeling specific EarthRegion.

*.  EarthRegion::generate_roadlines_group() instantiates PolyLinesGroup
member *roadlines_group_ptr and masks its contents.

============================================================================
ISDS3D code changes made on Mon, May 19:

*. In GeometricalsGroup::attach_bunched_geometries_to_OSGsubPAT(),
condensed two lines into call to
insert_OSGgroup_into_OSGsubPAT().

*.  Wrote overloaded version of void PolyLinesGroup::set_uniform_color() 
which takes OSGsubPAT_number as explicit argument.  PolyLine text labels
are also colored by these methods.

============================================================================
ISDS3D code changes made on Sun, May 18 and early on Mon, May 19:

*.  Added skeleton_height member to PolyLinePickHandler class.

*.  PolyLinePickHandler now retrieves n_text_messages from PolyLinesGroup
member rather than hardwiring its value to zero.

*.  Eliminated unused font_refptr member of Decorations class.

*.  Added temporary lines into PolyLinePickHandler::doubleclick() to enable
labeling of ROI's.

*.  PolyLine::set_label() is a high-level method which calls lower-level
methods for setting text position and size.

*.  PolyLine::set_COM_label() takes in a label string along with a height
parameter.  We assume the PolyLine corresponds to a closed contour.  The
label is positioned at the contour's center-of-mass, and its size is scaled
based upon its approximate mean radius.

*.  Wrote GraphicalsGroup::get_last_Graphical_ptr().

*.  Wrote string Geometrical::get_text_label(int i=0).

*.  Geometrical::set_text_direction() takes in threevector text_dir and
performs quaternion rotation of OSG text object.

*.  NYROADS can again display street names next to PolyLines.

*.  Eliminated passing of confusing int geom_name_column argument in favor
of more intuitive string geom_name in postgis_database class.

*. PolyLinesGroup::generate_new_Polyhedron() and initialize_new_PolyLine()
now take OSGsubPAT_number as argument with default 0 value.

*.  Created new subdir mains/mit to hold programs & data related to
collaboration project with Fredo Durand.

*. In TextureSectorsGroup::generate_TextureSector_geode(), test whether
video_corner_vertices.size() > 0 to distinguish TextureSectors which are to
be mapped onto general quadrilaterals versus perfect rectangles.

*.  ISDS demos and standard pgms seem to work OK as of Mon, May 19 at 12:45
pm on ISDS3D laptop (pfiles5_19d.tgz)

============================================================================
ISDS3D code changes made on Fri, May 16:

*.  In G99VideoDisplay constructor, restored instantiation of m_image as
unsigned char* array for still image types which was erroneously removed in
April 08 when we were incorporating mp4 handling in this class.

*. Wrote stringfunc::remove_leading_whitespace() which is analogous to
remove_trailing_whitespace().

*.  mains/OSG/MITDEMO is a variant of TESTCITIES specialized for the MIT
collaboration project.  Have not yet checked this main program into the
repository.  MITDEMO displays fused ladar/satellite EO point cloud,
reconstructed OBSFRUSTUM for panorama and Yahoo aerial image as large
underlay.

============================================================================
ISDS3D code changes made late on Thurs, May 15:

*.  Added 3 overloaded versions of GeometricalsGroup::set_size() which
mimic change_size().

*.  Improved big and small sizes for Bluegrass SignPosts.

============================================================================
ISDS3D code changes made late on Tues, May 13 and early on Weds, May 14:

*.  Added bluegrass/packages/ar1_sensor_metadata.pkg to repository.

*.  Added sensor_metadata as a pass_type in Pass class.  Added parsing code
for sensor_metadata argument in PassesGroup class.

*.  Added Decorations and Operations ptr members to OSGButtonServer class
along with set methods.  Eliminated set methods for Geometricals, AC_ptr
and MC_ptr in OSGButtonServer class.

*.  Consolidated some lines in PassesGroup into private method
parse_package_arguments().

*.  Added posn & orientation members to PassInfo to hold airborne sensor
meta data.

.........................

*.  Wrote new class filter/piecewise_linear_vector which generalizes
piecewise_linear to threevectors as a function of time.

*.  MODELSGROUP::regularize_aircraft_posns_and_orientations() takes in an
STL vector containing airborne sensor position and orientation information
as functions of video frame number.  It instantiates
piecewise_linear_vector objects in order to interpolate the irregularly
sampled aircraft positions and orientations onto evenly spaced temporal
bins.

*.  Programs VIDEOCITIES & QTCITIES now display translucent CH FOV which is
synced with video images.

*.  Added MODELSKeyHandler_ptr member to Decorations class along with get
methods.  Added 'toggle sensor' button in OSGbuttons.html which toggles
aircraft+OBSFRUSTUM display.

============================================================================
ISDS3D code changes made on Tues, May 13:

*.  Replaced public vector<int> pyramid::common_edges_between_two_faces()
with private int pyramid::common_edge_between_two_faces().

*. In OBSFRUSTUM::build_current_frustum(), explicitly check whether all
corner rays point downward.  If so, construct
*viewing_pyramid_above_zplane_ptr via simple special code rather than calls
to very expensive generate_viewing_pyramid() and
compute_viewing_pyramid_above_Zplane() methods.

*.  Tried to streamline multiple member functions of
instantaneous_obs class by eliminating pair assignment lines.

*.  Globally eliminated GraphicalsGroup::get_Graphicalslist_ptr().

*. Added call to GraphicalsGroup::insert_Graphical_into_list() in
PlanetsGroup::generate_new_Planet().

..........................

*.  Replaced GraphicalsList_ptr member for STL map* graphical_ptrs_map_ptr
member in GraphicalsGroup class.

*.  Fixed ID labeling of recreated PolyLines in
PolyLinePickHandler::regenerate_PolyLine().

*.  Added TINY constraint in polygon::point_inside_polygon() before
bothering to print out dotproduct values lying outside [-1,1].

*.  ISDS demos and standard pgms seem to work OK as of Tues, May 13 at
5:20 pm on ISDS3D laptop (pfiles5_13i.tgz)

============================================================================
ISDS3D code changes made late on Mon, May 12 and early Tues, May 13:

*.  Eliminated unused method pyramid::base_part_above_Zplane().

*.  Eliminated redundant sides member of pyramid class.

*.  ISDS demos and standard pgms seem to work OK as of Tues, May 13 at
7:30 am on ISDS3D laptop (pfiles5_13a.tgz)

============================================================================
ISDS3D code changes made on Fri, May 9, Sun, May 11, & Mon, May 12:

*.  Added track_ptr != NULL check in
CylindersGroup::follow_selected_cylinder()

*.  Fixed u0,v0 initialization in camera::initialize_member_objects() when
video_ptr is NULL.

*.  ISDS demos and extended pgms seem to work OK (except for SignPost
placement on bald earth in JUSTEARTH) as of Sun, May 11 at 8 am on ISDS3D
laptop (pfiles5_11b.tgz)

*.  Handle RESTART_MOVIE and CLEAR_TRACKS button events in
OSGButtonServer.cc.

*.  colorfunc::generate_distinct_colors() now takes n_preceding_colors
integer argument to avoid outputing previously generated colors.  Modified
method is called within EarthRegionsGroup::display_tracks_as_PolyLines().

*.  Streamlined MODEL::instantaneously_orient_and_position_OBSFRUSTUM() and
added overloaded OBSFRUSTUM::build_current_frustum() which takes phi,theta
angles rather than n_hat.

*.  Added vector<vertex>* face::get_vertex_chain_ptr() to minimize STL
vector copying in pyramid::extract_parts_above_Zplane().

*.  Streamlined pyramid::extract_parts_above_Zplane().  Eliminated calls to
ensure_face_handedness().

*.  Introduced TINY=1E-9 constant in math/ltthreevector.h.

*.  Replaced calls to brute force search method find_vertex_ID_given_posn()
with index_map_ptr->find(V2_ptr->get_posn()),


============================================================================
ISDS3D code changes made on Weds, May 7 & Thurs, May 8:

*.  Pressing 'd' key in MANIPULATE_LINE mode now calls
destroy_all_PolyLines().  Added this event for reinitializing AVS demo
purposes.

*.  Added twovector members lower[upper]_left[right]_texture_frac to
G99VideoDisplay class along with reset_texture_coords().  In VIDEO, can now
pull out any quadrilateral region to display within movie player.

*.  Added LogicServer member to PassesGroup along with set/get methods.
Eliminated WebServer member from PassInfo with its set/get methods.
Modified run_qtcities script along with ar1_dataserver.pkg.

============================================================================
ISDS3D code changes made on Mon, May 5:

*.  colorfunc::generate_distinct_colors() returns the hardwired colorfuncs
colors if n_output_colors < 10.  Otherwise, it returns colors from our
hue_value colormap.

*.  Added BIG_POI and SMALL_POI enum states to OSGButtonServer class.

============================================================================
ISDS3D code changes made on Sat, May 3 and Sun, May 4:

*.  Formed new SKSClient class split off from BluegrassServer.  It uses
Qt's http methods to communicate with the SKSDataServer.

*.  SKSClient::query_SKSDataServer() takes in a URL subpath along with a
set of query parameters.  After lots of trial & error experimentation,
Delsey and Peter found on 5/3/08 that using a Qt post command with header
information explicitly entered separately from the main post body works
with the SKSDataServer.

*.  Specify PassesGroup params SKSDataServer_URL and
SKSDataServer_query_type within run_qtcities rather than
ar1_dataserver.pkg.

*.  Can finally extract and display tracks passing through polygonal
regions within Bluegrass data set!

*.  Added Movie_ID arg to MoviesGroup::move_z() with default zero value.

*.  Simplified GraphicalsGroup::move_z() by calling
get_ID_labeled_Graphical_ptr() rather than performing contorted linked list
node extraction.

*.  Added get_TextureSector_ptr() and get_ID_labeled_TextureSector_ptr()
methods to TextureSectorsGroup class.

*.  MoviesGroup::get_total_altitude() first retrives the input Movie's z
value relative to its starting position.  It next computes the average of
the Movie's video corner vertices (which we assume were specified in some
input package file).  The sum of the global and relative z values is
returned.

*.  Added destroy_all_PolyLines() to PolyLinesGroup class.  Must be careful
about 

*.  colorfunc::generate_distinct_colors() outputs an STL vector
containing n_output_colors evenly sampled from our hue_value colormap.
n_output_colors should be larger than 10 but less than 150.

*. In GeometricalsGroup::reset_colors(), set text_color to Geometrical's
selected or permanent color.  But lock text_color's alpha value to 1.

*.  In EarthRegion::initialize_track_mover_Cylinder(), set selected mover's
cylinder color to green and all others to red.

*.  Added prev_state member to AnimationController class.  After jumping,
revert back to previous state.

*.  Empirically determined temporal delay between truth data and video.
Wrote mains/bluegrass/FIXTIMES in order to add interpolated delay to all
video frame times using a piecewise_linear object.

*.  Added t.size() > 0 check into track.get_earliest[latest]_time().

*.  Wrote polygon constructor which takes in a polyline argument.

*.  track::closest_approach_time() takes in a point of interest (POI).
After performing a brute-force loop over the track's positions, it returns
the time corresponding to the position closest to the POI.
tracks_group::closest_approach_times() returns an STL vector with approach
times.

*.  In Monitoring section, back up master game clock by one minute prior to
point of closest approach.

============================================================================
ISDS3D code changes made on Fri, May 2:

*. Added JUMP_FORWARD and JUMP_BACKWARD AnimationController states.  Added
'j' and 'k' keyboard button events in AnimationKeyHandler which invoke
jumping to quantized framenumbers in a video.

*.  Decreased alpha blending of vehicle cylinders from 0.25 to 0.15 for
mediocre touch table projector display purposes.

*.  Added few sanity checks in OSGButtonServer on initial state of browser
buttons.

*.  Created osg2D/FOUOHUD class to be used with all Bluegrass displays.
Incorporated into VIDEOCITIES and QTCITIES.

============================================================================
ISDS3D code changes made on Thurs night, May 1 and early Friday, May 2:

*.  EarthRegionsGroup::form_SKS_query_for_tracks_intersecting_polyline()
takes in *PolyLinesGroup_ptr whose final PolyLine is assumed to correspond
to a user-entered, closed contour surrounding some Region of Interest
(ROI).  This method converts the polyline's UTM coordinates to
longitude,latitude.  It then forms the query to the SKS DataServer which
should return all vehicle tracks intersecting the ROI.

*.  Added GraphicalsGroup::set_PassesGroup_ptr().

============================================================================
ISDS3D code changes made on Thurs, May 1:

*.  Added AnimationController::get_true_framenumber() method.

*.  Append world time in secs onto names of output snapshot png files.

*.  Can snap screen shots of 3D viewer when it's centered on some truth
car.  PNG files are saved within a directory tree labeled by Bluegrass
vehicle IDs.

*.  Comment out call to OBSFRUSTAGROUP_ptr->generate_skyscraper_bboxes() in
mains/bluegrass/VIDEOCITIES.  Explicitly set
PolyhedraGroup_ptr->set_OSGgroup_nodemask(0) within VIDEOCITIES to hide
Activity Region bboxes at start of demo.

*. PolyhedraGroup::generate_new_Polyhedron(ID,OSGsubPAT_number) now takes
OSGsubPAT_number as argument with default 0 value.

*. Renamed GraphicalsGroup::set_OSGsubPAT_mask() as
set_OSGsubPAT_nodemask(). Also added toggle_OSGsubPAT_nodemask().

*.  Added PolyhedraKeyHandler_ptr member to Decorations class.

*.  In PolyLinePickHandler::doubleclick(), form Polyhedra skeletons from
two PolyLines rather than Polyhedra themselves.  For reasons we don't
understand, the latter cause our 3D viewer programs to core dump shortly
after we instantiate them on 3D point clouds.

*.  Added specified_northern_hemisphere_flag and specified_UTM_zonenumber
members to EarthRegionsGroup in order to avoid excessive param passing
through OSGButtonServer for QTCITIES.

============================================================================
ISDS3D code changes made early on Weds, Apr 30:

*.  Wrote Qt/web/OSGButtonServer class to handle web button events.

*.  Created tarball of astro_geo/countries on ISDS3D.  Subsequently deleted
this subdir from repository.  Note that tarball contains .svn files all
over the place.

*.  Added OSGButtonServer_URL member to PassInfo class and made
accompanying modifications to PassesGroup.  Renamed SKSDataServer_host_URL
as SKSDataServer_URL and HTMLServer_hostname to HTMLServer_URL.

*.  stringfunc::get_hostname_from_URL() and get_portnumber_from_URL()
extract prefix and suffix before : separator.

*.  Eliminated unused methods sysfunc::get_htmlrootdir() and get_htmlURL().

..........................

*.  Instrumented mains/bluegrass/AVS/QTCITIES with OSGButtonServer object.
Can now change modes via webpage buttons.

*.  Followed Ross' advice to create pure virtual PickHandlerCallbacks class
containing display_selected_vehicle_webpage() member.  BluegrassClient
class inherits from PickHandlerCallbacks.  Pass PickHandlerCallbacks ptr to
CylinderPickHandler to avoid Qt contaminating our OSG library classes.

*.  Created tarball of mains/OSG/countries on ISDS3D.  Subsequently deleted
this subdir from repository.  Note that tarball does NOT contain any .svn
files.

*.  Double clicking on Bluegrass truth mover causes BluegrassClient to send
get command to BluegrassServer containing Bluegrass vehicle label.
BluegrassServer subsequently calls Michael Yee's launcher program with
vehicle label which brings up web page designed by Dave Ceddia on separate
computer.

*.  Moved OSGButtonServer_URL and HTMLServer_URL members from PassInfo
class into PassesGroup. Made appropriate revisions to set and get methods.

*.  Added ViewerMananger::get_MyViewerEventHandler_ptr() method.

*.  Tried to simplify ugly MyViewerEventHandler class so that name of
output snapped images can be specified.

============================================================================
ISDS3D code changes made on Tues, Apr 29:

*.  Completely rewrote BluegrassClient using Ross Anderson's approach
involving QHttp objects rather than his earlier QTcp hack.  No longer
instantiate WebClient for each call.  Instead, dynamically allocate
*http_ptr just once and repeatedly use it to make multiple calls to
Bluegrass Server.

*.  DOMParser::extract_attribute_values_from_children_elements() takes in a
parent QDomElement and iterates over all its children whose tagNames match
the input parameter.  This method then searches for attributes within the
matching children whose input key matches the input parameter.  It fills
and returns the output STL vector values with the string values
corresponding to the input key.

*.  Globally replaced WebServer_hostname with WebServer_URL in PassInfo and
PassesGroup classes.  Made cooresponding package file parameter changes in
mains/uavs and mains/bluegrass/AVS.

*.  BluegrassClient::retrieve_mover_tracks() is an XML replacement for
EarthRegionsGroup::retrieve_mover_tracks() which is based upon Dave
Ceddia's JSON parsing code and libCURL.

*.  Added track_ptr member to Cylinder class along with set/get methods.

*.  Display Bluegrass vehicle labels on truth cylinders rather than
sequential integer IDs.

============================================================================
ISDS3D code changes made late on Mon, Apr 28 and early on Tues, Apr 29:

*.  Added mains/bluegrass/AVS to repository

*.  Created skeleton for Qt/web/BluegrassClient class.

============================================================================
ISDS3D code changes made on Mon, Apr 28:

*.  Eliminated PassInfo::SKSDataServer_hostname in favor of
SKSDataServer_host_URL along with set/get methods.

*.  No longer hardwire SKSDataServer web app within
EarthRegionsGroup::retrieve_mover_tracks().  Instead, pass full subdir as
SKSDataServer_host_URL input param.

*.  Added projects/README/README.QT to repository.

*.  Moved WebClient, WebServer, DOMParser, SKSDataServerInterfacer,
BluegrassServer and SAMServer classes out of mains/uavs into new subdir
src/Qt/web.  Added this subdir plus its /include analog to repository.

============================================================================
ISDS3D code changes made on Sat, Apr 26, Sun Apr 27 and early Mon, Apr 28:

*.  Full AR1 video successfully georegistered to Lubbock point cloud using
program mains/isds/TRANSFORM_COORDS.

*.  Implemented getCurrFrame() in addition to getNextFrame() in Kevin
Chen's FFMPEGVideo class.  Frame skipping and reverse playing now work OK
for mp4 videos.  Though playing mp4 videos in reverse is an order of
magnitude slower than playing in forward direction.

*.  Reasonable temporal alignment between ground truth tracks and vehicles
seen in video using Chris Sataline's latest frame timing info for AR1 11 am
- 12 noon with secs_offset=0 in VIDEOCITIES.

*  Generalized Cylinder::text_displacement member from double to
threevector.

*.  In EarthRegion::initialize_track_mover_Cylinder(), decreased car
cylinder alpha from 0.3 to 0.25.  Also laterally displaced ID number in X
and Y directions in order to not cover car signal within video.

*.  CylindersGroup::follow_selected_cylinder() locks the
Custom3DManipulator virtual camera's lateral position to the instantaneous
X & Y coordinates of the selected.  We wrote this method in order to
facilitate user monitoring of particular vehicles within Bluegrass
applications.

*.  User can now doubleclick on a ground truth cylinder to select it and
lock its position in the center of the OSG window. 

*.  Eliminated G99VideoDisplay::jump_to_frame() in favor of pre-existing
goto command within AnimationController class.

*.  Renamed FFMPEGVideo::setNextFrameIndex() as setAndDecodeNextFrame().
Then added simple set method FFMPEGVideo::setNextFrameIndex().  Looping and
jumping for FFMPEGVideo is now working when video clock is slaved to master
clock within VIDEOCITIES.

*.  Renamed PassInfo::dataserver_host_URL and dataserver_query_type as
SKSDataServer_host_URL and SKSDataServer_query_type.  Changed set and get
methods.  Also modified SAM code to take SKS_DataServer_host_URL instead of
SKSDataServer_hostname.  Will eventually eliminate latter member in favor
of former.

============================================================================
ISDS3D code changes made on Fri, Apr 25:

*.  Incorporated latest version of Kevin Chen's FFMPEGVideo class into our
source code tree.  Seeking works most of the time, and looping to start of
mp4 movies appears to work OK.

*.  Eliminated UnsignedByteArray member from G99VideoDisplay class.  

============================================================================
ISDS3D code changes made on Thurs, Apr 24 and early Fri, Apr 25:

*.  polyhedron::generate_prism_with_rectangular_faces() takes in the
vertices for a planar polygon along with a height. This method extrudes the
bottom polygon upwards and forms a cylindrical prism.  By default, top face
is flat rather and does not follow varying terrain.

*.  Added picking_mode_flag bool member to ModeController class along with
get method.  For touch table purposes, set this bool to true if
MODE==INSERT_LINE.

*.  Pass ModeController ptr as argument in GraphicalPickHandler constructor
down to base PickHandler class.  

*.  Removed osg/wx subdirectory from repository.

*.  Added osg/osgGeometry/PolyhedraKeyHandler class to repository.  Added
instantiate_Polyhedra_key_handler() method to Decorations class.

============================================================================
ISDS3D code changes made on Weds, Apr 23:

*.  ISDS demos and extended pgms seem to work OK (except for SignPost
placement on bald earth in JUSTEARTH) as of Weds, Apr 23 at 6:01 pm on
ISDS3D laptop (pfiles4_23a.tgz).

============================================================================
ISDS3D code changes made on Tues, Apr 22:

*.  Added z_offset member to PolyLinePickHandler class along with set
method.

*.  Added PolyhedraGroup_ptr member to PolyLinesGroup class.
Decorations::add_PolyLines() now passes Decorations member
PolyhedraGroup_ptr as argument to PolyLinesGroup constructor.

*.  In mains/OSG/VIEWPYRAMIDS, added Pyramid1_ptr->build_current_pyramid()
and Pyramid2_ptr->build_current_pyramid() calls in order to see pyramid
output in OSG window.  Similarly added build_current_polyhedra() calls
within VIEWPOLYHEDRA.

============================================================================
ISDS3D code changes made on Sun, Apr 20 and Mon, Apr 21:

*.  Incorporated Kevin Chen's FFMPEGVideo, ReferenceCountedArray and
BasicTypes.h classes into our ffmpeg subdirectory.

*.  Began to modify G99VideoDisplay class to use Kevin Chen's FFMPEGVideo
class to parse mp4 files.  Eliminated dependence upon Anye Li's deprecated
FFMpegStream class.  Main program VIDEO can now display
benchmark+1700.mp4.  bluegrass/VIDEOCITIES now runs without core dumping.


============================================================================
ISDS3D code changes made on Mon, Mar 31:

*.  Copied Kevin Chen's libbilagrid code over to mains/Qt/video and added
to repository.  Renamed and modified .pro file.

*.  Added README.SAM_demo to repository

============================================================================
ISDS3D code changes made on Weds, Mar 26:

*.  Incorporated more changes from Ross in his WebServer::ReadSocket()
class to send number of bytes across in header information.

============================================================================
ISDS3D code changes made on Tues, Mar 25:

*.  Eliminated dependence of kml polygon rendering methods upon individual
polygon header/footer template files.

*. Wrote gearth::generate_empty_kml_file() and
SAMs_group::generate_empty_KML_files() to reset GE display at start of SAM
demo.

........................

*.  kml_parser::generate_polyline_kml_file() takes in RGBA and width
parameters for a polyline as well an STL vector containing longitude,
latitude, altitude vertices.  This method writes polyline output to the
specified KML file.

*.  SAMs_group::generate_flightpath_KML_file() takes in a polyline
containing longitude,latitude,altitude vertices.  This method outputs a KML
file containing a single cyan polyline representing the flight path.

........................

*.  Added >2 km max range entry on SAMform.html .

*.  Moved several lines of code out of
SAMServer::process_SAM_site_queries() into 
SAM::generate_dynamic_URL().

*.  KML files for SAM sites now contain functioning links to web pages
dynamically generated via PHP.

........................

*.  Fixed 0.001 kms->meters conversion error in
SAMs_group::find_closest_SAM_site()

============================================================================
ISDS3D code changes made on Mon, Mar 24:

*.  Broke apart SAMform.html into SAM Systems, Countries' SAMs, SAM
Specifications, Individual SAM Sites and Flight Path sub-sections.
Replaced SAMServer::process_global[local]_queries() with
process_SAM_system_queries(), process_country_queries(),
process_SAM_specs_queries() and process_SAM_site_queries().
   
....................

*.  Modified Ross' posting code within WebServer and SAMServer classes to
read QByteArray via ReadAll command rather than QString via ReadLine
command.

*.  Incorporated Ross' improved posting code within
WebServer::readSocket().

*.  Moved XML_content_between_tags() out of WebClient into stringfuncs
namespace.

*.  Changed search posn from substring.size()+1 to substring.size() in
stringfunc::erase_chars_after_first_substring().

*.  SAMs_group::analyze_flight_path() takes in a polyline flight path and
computes its length, the closest SAM site and the path's impact parameter
to the closest SAM.

*.  Working on kml_parser::new_generate_multi_polygons_kml_file() which
places icon with SAM name on each SAM site.  Attempting to incorporate
dynamic URLs within icon.  

============================================================================
ISDS3D code changes made on Sun, Mar 23:

*.  Eliminated unused SAMs from SAMform.html.  Also fixed bugs and
streamline this web form.

*.  SAMServer::check_for_unknown_values searches() looks for -1 sentinel
strings coming from SKS DataServer output.  If found, it replaces such
strings with "Unknown" tags.

*.  Added IOCYear to SAMServer XML output.

*.  In SAMServer class, include <Qt/application.h> to access qApp macro
which obviates need to pass app pointer from main Qt program via
constructor.

*. Added SKSDataServerInterfacer::form_filtered_SAM_range_altitude_IOC_query()
member function.

*. Incorporated Ross' revised get() & post() methods into WebServer &
SAMServer classes.

============================================================================
ISDS3D code changes made on Fri, Mar 21:

*. SAMs_group::generate_owner_country_KML_file() takes in single country
name.

*.  Overloaded SAMs_group::generate_SAM_sites_KML_file() to take in STL
vector of SAM ptrs.

*.  Generalized SAMs_group::get_matching_SAMs() from get_particular_SAMs()
to take in vector of SAM names rather than just single SAM name string.

*.  Starting to display SAMs satisfying IOC constraints returned from SKS
DataServer.

*.  Added QHttp http_client member to SAMServer.  Use this client to issue
get request to Michael Yee's LaunchServer web applet.

*.  Added HTMLServer_hostname and set/get methods to PassInfo and
PassesGroup classes.  Use this member to pass IP for machine running
Michael Yee's launch service web applet for SAM demo.

*.  Added README.G104_network_notes to repository.

============================================================================
ISDS3D code changes made on Mon, Mar 17, Tues, Mar 18, Thurs, Mar 20:

*.  stringfunc::first_substring_location() takes in an input string as well
as a search substring.  It performs a brute-force search for the substring
within the input string.  If found, this method returns the position of the
first instance of the substring within the input string.  Otherwise, it
returns -1.

*.  Wrote stringfunc methods erase_chars_before_first_substring(),
erase_chars_after_first_substring() and substring_between_substrings() for
XML parsing purposes.

*.  ISDS demos and standard pgms seem to work OK as of Thurs, Mar 20 at
7:30 am on ISDS3D laptop (pfiles3_20a.tgz)

============================================================================
ISDS3D code changes made on Sat, Mar 15 & Sun, Mar 16:

*.  Adapted DOMParser class from Qt course's TagReader class.  It uses Qt's
DOM approach to parsing XML in order to extract tags and attributes from
DOM elements. 

*.  SKSDataServerInterfacer class holds SKS DataServer specific query and
response parsing methods.

*. SKSDataServerInterfacer::extract_points() parses
longitude & latitude coords from SKS DataServer Point strings.

*. Added to repository mains/uav/DATAPARSER.cc which is a playground for
SKS DataServer communications testing.

......................

*.  Starting to get WebClient within SAMServer to talk to SKS DataServer.


============================================================================
ISDS3D code changes made on Fri, Mar 14:

*.  Now pass explicitly dataserver_host_URL as parameter within
mains/bluegrass/packages/ar1_dataserver.pkg.  No longer initialize this
parameter within PassInfo class to localhost::8080.  We should instead
force user to explicitly specify this URL.

============================================================================
ISDS3D code changes made on Thurs, Mar 13:

*.  SAMs_group::process_local_queries() takes in the ID for some specific
SAM site.  It returns a URL pointing to a (currently static) html page on
touchy which TOMCAT can serve up.

.............

*.  Added mains/uavs/SAMform.html to repository.

============================================================================
ISDS3D code changes made on Tues, Mar 11 & Weds, Mar 12:

*.  Created Qt template project file Qt.pro within root projects subdir.
It contains all our personal and system header and library file
information.  When creating a new Qt program, need to first chant qmake -o
makefile.  Then chant make -f makefile.  Copy over Qt.pro and customize it
for each individual Qt program.  But for now, we'll maintain the template
in just one central location and update it at the same time we update our
own Makefile.

*.  Subclassed SAMServer from WebServer within mains/uavs.

*.  Added get methods for SAM range, max tgt alt, warhead weight and max
speed.

*.  SAMs_group::retrieve_SAM_IDs() takes in a set of SAM pointers.  It
returns their IDs within an STL vector.  We wrote this method for XML
output purposes.

*.  SAMs_group::queried_SAM_sites() now takes in vector<SAM*> rather than
SAM string name.

*.  Program QTLOGIC acts as a logic tier within the May AVS SAM demo
system.  Using a Qt-based webserver, it takes in GET requests from
thick/thin clients and generates XML responses.  It also dynamically
generates KML files which can be networked linked to automatically display
within Google Earth.

................

*.  Added entity_ID string member to SAM class along with set/get methods.

* SAMServer::output_SAM_list() now returns 'Unknown' attribute tags rather
than NEGATIVEINFINITY values.

*.  Deleted mains/OSG/examplesvideos and mains/renderEngine from
repository.

============================================================================
ISDS3D code changes made on Mon, Mar 10

*.  Renamed uavs/SAMKML.cc as LOGIC_LAYER.cc.  Now pass ActiveMQ URL as
command line argument rather than having it hardwired into this main
program.

*.  SAMs_group::compute_flight_path_distance() returns the total distance
measured in kilometers for the input flight path assuming a spherical earth
model.

*.  SAMs_group::find_closest_SAM_site() takes in the flight path distance
measured in meters and subdivides the flight path into 10 km segments.
For each segment, this method performs a brute force search for the closest
SAM site.  It stores the closest SAM's pointer within member
closest_SAM_ptr and returns the linear distance to the closest SAM in
meters.

*.  Added messenger and argument parsing to uavs/MYSPWA.cc.

*.  SAMs_group::generate_SAM_sites_KML_file() now takes in color as input
argument.

*. Added Property typedef to messenger class.

*.  Added postgis_database ptr member to kml_parser class.

============================================================================
ISDS3D code changes made on Fri, Mar 7, Sat Mar 8 and Sun, Mar 9:

*.  message::generate_message() takes in pointer testMessage_ptr to an
activeMQ TextMessage.  This method parses its contents and returns the
results within our message object.

*.  SAMs_group::countries_owning_particular_SAMs() & queried_SAM_sites()
now take in messenger pointers.  The first method sends a message
containing a single 'countries' key paired with value string with country
names separated by commas.  The second broad casts a "site_locations" key
along with a value string composed of longitude,latitude,radius triples.

*.  Updated mains/video/VIDS2VID from hardcopy printed out from FIASCO
(dated 1/24/08).

*.  ISDS demos and standard pgms seem to work OK [except for NYROADS &
SignPosts in VIDEOCITIES] as of Sat, Mar 7 at 3:30 pm on ISDS3D laptop
(pfiles3_8b.tgz)

*.  In NYROADS, set PostGIS database reference vertex to *grid_origin_ptr
and first argument to
roadlines_group_ptr->attach_bundled_geoms_to_OSGsubPAT().  Fixes
NYC road network translation problem!

*.  SignPostsGroup::retrieve_all_signposts_from_PostGIS_databases() and
retrieve_signposts_from_PostGIS_database() now return boolean flags
indicating successful execution.  Former method call
identify_and_revise_Bluegrass_labels() only if latter method returns true.
Fixes problem with SignPost deletion in VIDEOCITIES.

*.  Can add secs_offset ( which approx equals 15 secs for our AR1 test
video) in VIDEOCITIES.

============================================================================
ISDS3D code changes made on Thurs, Mar 6:

*.  Updated SAM information based upon more unclassified info found on WWW.
Have reasonable estimates now for all SAMs ranges and max altitudes.

......................

*.  Added simple messenger functionality into uavs/SAMKML.

*.  Bundled KML file generation into
SAMs_group::generate_owner_countries_KML_file() &
generate_SAM_sites_KML_file() member funcs.

============================================================================
ISDS3D code changes made on Weds, Mar 5:

*.  Made up max ranges and target altitudes for all SAM missile types.
Added country_owner member to SAM class.  Added country names to SAM sites
text files.  

*.  geofunc::generate_simplified_country_name removes all blank spaces and
periods from an input country's name.  It also converts ampersands into
'and'.  We wrote this little utility to transform country names coming from
the world borders GIS layer into forms easy to work with in linux.

*.  kml_parser::generate_multi_polygons_kml_file() recovers the individual
polygon data files corresponding to the input country name from its
associated subdir within astro_geo/countries/.  It loops over each
polygon's longitude-latitude-altitude vertices and appends them to a double
STL vector.  This method then calls generate_multi_polygons_kml_file() with
an output KML filename based upon the input country name.

*.  kml_parser::generate_country_borders_kml_file() takes in a double STL
vector V containing longitude-latitude-altitude vertices for a set of
countries.  It generates an output KML file where the countries borders are
heavily highlighted.


============================================================================
ISDS3D code changes made on Tues, Mar 4:

*.  Added input_filename, output_filename and curr_polyline members to
gearth/kml_parser class.  kml_parser::parse_polyline_kml() can now extract
polyline info from an Untitled kml file.

*.  Created new robots/SAM & SAMs_group classes.

*.  mains/uavs/SAMKML is a test playground for generating KML files to show
SAM sites within GoogleEarth.  It simply fills in templates generated from
within GoogleEarth itself with new long,lat,alt vertices.

*.  Program MYSPWA is a test playground for parsing a polyline KML file
generated from within GoogleEarth.

============================================================================
ISDS3D code changes made on Sun, Mar 2 and early Mon, Mar 3:

*.  Added new src/gearth subdir to repository.  Wrote kml_parser class
within this new subdir.

*.  In polygon::point_inside_polygon(), added explicit check on dotproduct1
lying within [-1,1].  If not, force dotproduct1 to equal one of the two
extremal endpoint values.

*.  ISDS demos and standard pgms seem to work OK [except for NYROADS] as of
Mon, Mar 3 at 6:40 am on ISDS3D laptop (pfiles3_3a.tgz)

============================================================================
ISDS3D code changes made on Weds, Feb 27:

*.  VIDEO now utilizes any frame-to-worldtime information entered via input
package files.

*. AnimationController methods set_world_time_params() &
specify_extremal_frame_world_times() enable a master game clock to be
established which measures world time.  Individual movie animation
controllers can be synced to the master game clock.

*.  Added master_world_start_time,master_world_stop_time, and
delta_master_world_time_step_per_master_frame and set/get members to
Operations class.  Wrote set_master_world_start[stop]_UTC() members.

*.  VIDEOCITIES can now simultaneously display aerial video and ground
truth movers which are temporally aligned to within a few secs!

..............................

*.  Added mains/bluegrass/TILE_TRANSFORM.cc to repository.

*.  In polygon::point_inside_polygon(), perform topology check using
rounded integer ratio thetasum/(2*PI).  Fixes detection of robots inside KOZ
polys.

*.  Can now hardwire KOZ polys into MULTIUAVS program.  

============================================================================
ISDS3D code changes made on Mon, Feb 25 & Tues, Feb 26:

*. Added elapsed_secs_since_epoch_lo,elapsed_secs_since_epoch_hi,
dataserver_query_type and dataserver_host_URL members to PassInfo class
along with set/get methods.

*.  EarthRegionsGroup::retrieve_groundtruth_tracks() first recovers
space-time bbox parameters for an input dataserver pass.  It then forms an
http request and uses Dave Ceddia's JSON parsing classes to call Delsey
Sherrill's Graph Server.  This method extracts the returned track
information from Dave's objects into the output tracks_group.

*.  Added several Bluegrass packages to repository.

*.  mains/bluegrass/VIDEOCITIES can now retrieve from the data server &
display as PolyLines ground truth vehicle tracks.

*.  Method geometry_func::point_to_line_distance() is a streamlined version
of linesegment::point_to_line_distance() which can be used without having
to instantiate a linesegment object.

*.  Tried to streamline and generalize
PointFinder::find_closest_world_point().  Can now specify initial value for
tan_theta.  But we believe this method's performance is still very slow
compared to Ross'.

*.  Moved reference_origin member out of Polygon and PolyLine classes into
Geometrical.

*. Track::get_interpolated_posn() takes an input time.  If the input time
lies outside the track's temporal interval, this boolean method returns
false.  Otherwise, it performs a binary search for the two bracketing track
samples and returns an interpolated average of their positions.

*.  Representing ground truth movers with dynamic Cylinders is starting to
work in VIDEOCITIES.

*.  Overloaded GeometricalsGroup::change_size() so that X,Y,Z axes can be
differentially scaled.

*.  Privatized Graphical::update_PAT_posn(), update_PAT_attitude() and
update_PAT_scale().

*.  Perform sanity checks on id value in PassesGroup::get_passinfo_ptr(int
id).

............................

*. TextureSectorsGroup::generate_TextureSector_geode() now adds Movie's PAT
rather than its geode to TextureSector's PAT.  Fixes bug in CH video
z-translation.  

*.  ISDS demos and standard pgms seem to work OK [except for NYROADS] as of
Weds Feb 27 at 7:50 am on ISDS3D laptop (pfiles2_27a.tgz)

============================================================================
ISDS3D code changes made on Sat, Feb 23, Sun, Feb 24 & early am on Mon, Feb 25

*.  Eliminated AnimationController::reset_frame_counter_to_first_frame().

*.  In FFmpegStream::run(), tried adding loop_to_beginning to
!display_next_frame_flag conditional to fix looping bug.  Unfortunately,
mp4 looping is still very unreliable...

*.  Incorporated Dave Ceddia's observation, tracklist, trackitem and
graphquery classes for accessing Delsey's graphserver via JSON into
src/track.  

*.  Created new tracks_group class in src/track.

*.  EarthRegionsGroup::display_tracks_as_PolyLines() is starting to display
ground truth tracks on Lubbock ladar data. 

*.  In Clock::init_member_objs(), changed epoch reference date parameters
from 1970,1,0 to 1970,1,1.

*.  Added dataserver as enumerated PassType within Pass class.  Copied
GIS_layer lines within PassesGroup onto new dataserver lines.

*.  ISDS demos and standard pgms seem to work OK as of Mon Feb 25 at 7:30
am on ISDS3D laptop (pfiles2_25b.tgz)

============================================================================
ISDS3D code changes made on Thurs, Feb 21:

*.  No longer start messenger thread from within MESSENGER_RECEIVER.  It is
instead started within each messenger object.  Also issue messengerThread
join() call from within messenger destructor.

*.  Program MULTIUAVS now transmits instantaneous UAV position and heading
information to ActiveMQ broker.

.......................

*.  Globally renamed reference_vertex to reference_origin within
PolyLine, PolyLinesGroup, Polygon & PolygonsGroup classes.

*.  Set Polygon's reference_origin in its constructor.  Member function
Polygon::set_relative_vertices() now uses only *relative_poly_ptr and no
longer depends upon nontrivial reference_origin.

*.  Starting to add potential energy penalty for robots moving within KOZs.

============================================================================
ISDS3D code changes made on Sat - Tues, Feb 16 - 19:

*.  ISDS demos and standard pgms seem to work OK as of Sun, Feb 17 at 8:30
am on ISDS3D laptop (pfiles2_17a.tgz)

*.  Eliminated dependence of entire code structure upon buggy & unreliable
external GTS library.

*.  In Polyhedron::build_current_polyhedron(), replaced
LineSegmentsGroup_ptr->get_LineSegment_ptr() to
get_or_create_LineSegment_ptr().

*.  Eliminated calls to build_current_polyhedron[pyramid] from
Polyhedra[Pyramids]Group::generate_new_Polyhedron[Pyramid].  Added calls
back into OBSFRUSTAGROUP::generate_skyscraper_bboxes() and
EarthRegion::generate_bbox().

*.  Added INSERT_POLYGON & MANIPULATE_POLYGON modes to ModeController.h.

*.  Deleted dangling link satellite/packages/spase.pkg from repository.
Need to later add new link to spase/packages/spase.pkg.  

*.  ISDS demos and extended pgms seem to work OK as of Sun, Feb 17 at 6:45
pm on ISDS3D laptop (pfiles2_17g.tgz).

*.  Program MULTIUAVS now displays 4 dots moving on top of latlong grid.
Hardwired UAV parameters reasonable for Baghdad scenario.

*.  osgGeometry/Polygon class now inherits from Geometrical rather than
from Graphical.  It also now contains a PointsGroup member.

*.  osgGeometry/PolyLine now contains polygon* and Polygon* members.

*.  Created new PolygonsKeyHandler & PolygonPickHandler classes.  Can
select and destroy particular polygon via mouse click within its XY plane
projection.

*.  Massively overhauled entire Polygon and PolyLine class structure.

*.  Exchanged Polygon::set_vertices() in favor of set_relative_vertices().

*.  Trying to enforce standard set of instantiation calls within
XGroup.cc::generate_new_X():

		GraphicalsGroup::insert_Graphical_into_list(X_ptr),
		initialize_Graphical(X_ptr),
		insert_graphical_PAT_into_OSGsubPAT(X_ptr,0);

*.  ISDS demos and standard pgms (except nyroads!) seem to work OK as of
Tues, Feb 19 at 6:30 pm on ISDS3D laptop (pfiles2_19f.tgz)

============================================================================
ISDS3D code changes made on Thurs, Feb 14 & Fri, Feb 15:

*.  Added new src/robots and mains/uavs subdirs to repository.

*.  Eliminated seemingly unnecessary 2D restrictions within track class.

*.  Added AnimationController::get_time_corresponding_to_curr_frame().

*.  Added Clock::get_year(), get_month() and get_day() methods.

*.  Main pgm mains/uavs/multiuavs.cc implements a simple
particle-in-the-box real-time simulation for 4 robots.  Time and distance
scales hardwired into the simulation are reasonable for predator UAVs.
UAVs are completely non-interacting.

============================================================================
ISDS3D code changes made on Tues, Feb 12:

*.  Added mains/bluegrass/videocities.cc to repository.

*.  GenericHUD::set_text_color(), set_text_backdrop_type() and
reset_text_size() allows user to alter HUD appearance.

============================================================================
ISDS3D code changes made on Fri, Feb 8, Sun, Feb 10, Mon, Feb 11 & Tues,
Feb 12:

*.  Added MovieKeyHandler constructor which does not take Movie argument
but rather assumes zeroth Movie within MoviesGroup is to be handled.

*.  Added typedef double value_type and operator[] to twovector class for
kdtree searching purposes.

*.  Generalized kdtree::sorted_nodes_within_range() and
kdtree::find_closest_nodes() to handle 1D trees.  Added templatized
kdtree:: generate_1D_kdtree() method.

*.  ISDS demos and extended pgms seem to work OK as of Sun, Feb 10 at 8:58
am on ISDS3D laptop (pfiles2_10b.tgz).

*.  Added reference_julian_date and secs_elapsed_since_reference_date()
members to Clock class.

*.  Added vector<twovector> frame_times member to PassInfo class along with
push_back and get methods.  PassesGroup can now parse frame/time pairs
within input package files which are indicated by --movie_frame_times.

*.  Added piecewise_linear members indep_time_depend_counter_ptr and
indep_counter_depend_time_ptr to AnimationController class.  Also added
frame_counter_offset and time_offset members.

*.  Added rounding checks to Clock::YYYY_MM_DD_H_M_S().

*.  Performed major overhaul of timing computations within G99VideoDisplay
and Graphical classes.  Added set[get]_first[last]_framenumber() methods to
both classes.  Tried to globally change for (n=0; n<n_images; n++) to
for(n=first_framenumber; n<=last_framenumber; n++).

*.  ISDS demos and extended pgms seem to work OK as of Tues, Feb 12 at
11:55 am on ISDS3D laptop (pfiles2_12b.tgz)


============================================================================
ISDS3D code changes made on Thurs, Feb 7:

*.  Program TILE_NEIGHBORS reads in a text file generated in MATLAB by
Chris Sataline which contains 2D coordinates for each of the Merrick ladar
tiles for Lubbock, TX.  For each ladar tile, this program prints out a list
of neighboring tiles.  The tiles are labeled according to their original
Merrick 100-896 indices.  This program's output should be saved into text
file "tile_neighbors.dat" which becomes an input into program TILE_FUSE.

*.  Program mains/bluegrass/TILE_TRANSFORM reads in ladar/satellite EO
tiepoints and easting,northing coordinates for Lubbock tile centers.  For
each tile center, it performs a KDtree search to find the closest 8
tiepoints.  It then solves a least-squares fit for the 6 linear
transformation parameters.  The tile transformation info is written to
output text file where it can subsequently be read in by program TILE_FUSE.

*.  Program TILE_FUSE merges Lubbock satellite EO with ladar data.  The
tile's number is extracted from its tdp filename which is passed as a
command line argument.  Geotif files corresponding to the 3x3 EO tiles
surrounding the ladar tile are read in to ensure every XYZ point matches
onto some EO pixel currently accessible within memory.  Local linear
transformation parameters for the particular ladar tile are read in from a
text file generated by program TILE_TRANSFORM.  Each XYZ point in the ladar
tile is mapped onto corresponding easting & northing coordinates within the
EO geotifs.  RGB values are subsequently saved into an output tdp file.

*.  Eliminated dependence upon osgproducer viewer within VIDEO program!

============================================================================
ISDS3D code changes made on Weds, Feb 6:

*.  Created new math/rubbersheet class.

*.  Added call to Geometrical::DirtyDisplay() in
PointsGroup::change_size().

*.  Added call to dirtyBound() in Geometrical::dirtyDisplay().  Crosshairs
now uniformly appear within Lubbock 2D/3D imagery.

============================================================================
ISDS3D code changes made on Sun, Feb 3:

*.  Eliminated myimage pointer members of RasterParser class in favor of
TwoDarray ptrs.  Made appropriate changes in set/get methods.

*.  Overloaded tdpfunc::write_relative_xyzrgba_data() to take in XYZ & RGB
info within input STL vectors.

*.  Added bbox_label_colors vector member to PassInfo class along with
push_back() and get() methods.  Can be used to differentiate color of
activity region bboxes and their labels for 3D Lubbock display.

============================================================================
ISDS3D code changes made on Fri, Feb 1:

*.  Added Rimage_ptr, Gimage_ptr and Bimage_ptr members to raster_parser
class.

*.  raster_parser::write_colored_raster_data() outputs unsigned char* RGB
info to geotif files.

============================================================================
ISDS3D code changes made on Sun, Jan 27 and Mon, Jan 28:

*.  Set max_dist=0.1 (rather than 0.2) in overloaded method
SignPostPickHandler::get_max_distance_to_Graphical().

*.  To minimize number of mode switches which must be performed in NYC
touchtable demo, allow user to toggle colormaps in MANIPULATE_FUSED_DATA as
well as MANIPULATE_ANNOTATION and VIEW_DATA modes by pressing comma within
PointCloudKeyHandler.

*.  Added SignPost_size argument to
SignPostsGroup::retrieve_all_signposts_from_PostGIS_databases() whose
default value equals one.  Set this param to 0.5 for NYC_DEMO so that user
no longer needs to press '<' within MANIPULATE_ANNOTATION mode.

*. In order to simplify NYC touch table demo, allow users to double click
on GIS annotations from within MANIPULATE_FUSED_DATA as well as
MANIPULATE_ANNOTATION mode in SignPostPickHandler::doubleclick().

*.  Added allow_doubleclick_in_manipulate_fused_data_mode bool to
SignPostPickHandler along with set method.  Default value = false.

*.  ISDS demos and extended pgms seem to work OK as of Sun, Jan 27 at 8:45 pm
on ISDS3D laptop (pfiles1_27d.tgz).  Simplified version of NYC demo also
seems to work OK.

*.  Commented out all references to IntersectionPolyhedraGroup_ptr within
OBSFRUSTAGROUP.cc

*.  Overloaded update_display() in PolyhedraGroup class.

============================================================================
ISDS3D code changes made on Weds, Jan 23:

*, Moved calls to FFmpegStream's set_image_data_space() and play() methods
out of G99VideoDisplay's constructor into
G99VidDisplay::display_current_frame().

*.  Added D_REENTRANT as a compile flag to Makefile for multi-threaded
codes.

============================================================================
ISDS3D code changes made on Tues, Jan 22:

*.  Commented out get_pb() from ffmpeg/setget.c

============================================================================
ISDS3D code changes made on Sun, Jan 20 and Mon, Jan 21:

*.  In G99VideoDisplay class, allocate unsigned char* array m_image for
G99Vid and MP4 video types.  Do NOT allocate this char* array for still
images.  OSG png, jpeg, etc plugins already allocate memory for stills.

*.  Added XineImageStream.cc , video_out_rgb.c and osgdb_xine.cc to ffmpeg.
These files are based upon the xine plugin src code within OSG1.2.

*.  Integrate FFmpegStream directly into G99VideoDisplay class with no more
dependence upon Anye's osg Plugin.  Unfortunately, 1700 pixel problem still
persists.

*.  Empirically found that maximum texture size for which X does not crash
when viewer.realize() command in MOVIEPLAYER is executed is 1350 x 1350.

*.  Added Hashtable<double> into FFmpegStream class to begin support for
backward MP4 video playing.  Off-by-one error for frame counting needs to
be fixed!

============================================================================
ISDS3D code changes made on Weds, Jan 16 & Thurs, Jan 17:

*.  Eliminated unnecessary (and buggy) lines in
G99VideoDisplay::initialize_general_video() which copy image data in
image_refptr's data array into m_image.  VIDEO can now display 3900x3900 CH
still PNG image.

*.  Added get_frame_rate(AVStream* stream_ptr) to ffmpeg/setget.c

*.  Added frame_rate & n_frames members to ffmpeg/ParserThread class.  Can
now reliably extract these parameters from mp4 files.

..................

*. Initialize AnimationController::loop_to_beginning bool member to false.

============================================================================
ISDS3D code changes made on Mon, Jan 14:

*.  Added dynamic_movie_window_flag bool member along with set/get methods
to Movie class.  Only call Movie::update_movie_window() from
MoviesGroup::update_display() if this flag==true.

*.  Privatized SignPost::reset_attitude_posn().

*.  SignPostsGroup::generate_new_SignPost() can now take in a UVW argument
which needs to be specified BEFORE signposts on blue marble are rotated
from zhat to rhat.

*.  ISDS demos and extended pgms seem to work OK as of Mon, Jan 14 at 11:15
am on ISDS3D laptop (pfiles1_14b.tgz).

============================================================================
ISDS3D code changes made on Sun, Jan 13:

*. Added FFmpegStream_ptr member to G99VidDisplay class.

*. Eliminated G99_videofile_flag bool from video class in favor of
generalized enumerated type VideoType which takes values still_image,
video, G99Vid and unknown.

*.  Added boolean frame_counter_change_OK_flag, loop_to_beginning &
loop_to_end members to AnimationController class.  Added boolean
display_next_frame_flag & frame_actually_displayed_flag to G99VidDisplay
class.

*.  MOVIEPLAYER is starting to exhibit reasonable temporal control of MP4
videos in forward time direction.  Still have off-by-one errors and
initialization problems for videos beginning on non-keyframes.

============================================================================
ISDS3D code changes made on Fri, Jan 11:

*.  Calculate n_images within ffmpeg/FFmpegStream based upon bit rate
extracted from ParseThread member.

*.  Looping and reasonable real-time playback of mp4 files now works OK.

============================================================================
ISDS3D code changes made on Thurs, Jan 10:

*.  Performed more massaging on ParseThread and FFmpegStream classes within
ffmpeg subdir.  Simple timing information is now accessible (start and stop
movie times measured in secs, curr frame number).  Only partly successful
with looping movies.

============================================================================
ISDS3D code changes made on Weds, Jan 9

*.  Added README.ffmpeg to src/ffmpeg which describes how to rebuild Anye's
OSG ffmpeg plugin.

*.  Added get_ndims==3 check within MoviesGroup::update_display() prior to
movie_ptr->update_movie_window().  Recall for ndims==2, the y and z axes
are swapped.  So we do not want to perform any 3D alteration on the movie
window for ndim=2.

*.  mains/video/MOVIEPLAYER.cc is a reworked version of osgmovie.cc which
starts to incorporate our VIDEO program's spatial manipulation and display
capabilities.  No timing control is so far implemented.

============================================================================
ISDS3D code changes made on Mon, Jan 7 & Tues, Jan 8:

*. Added mains/video/VIDS2VID.cc to repository.

*.  Eliminated bad redundant call to insert_graphical_PAT_into_OSGsubPAT()
and generate_signpost_geode() from
SignPostsGroup::retrieve_signposts_from_PostGIS_database().  Coloring of
selected SignPosts now works OK again.

*.  Experimented with compiling and linking C methods with C++ libraries
and main programs (pfiles1_8b.tgz).  

*. Created new src/ffmpeg subdir and rearranged Anye's autogenerated ffmpeg
.cc and .h files into this new subdir.  Created set/get wrappers which act
as interface between incompatible C99 and C++ header files.

============================================================================
ISDS3D code changes made on Sat, Jun 5:

*.  Copied Anye's ffmpeg OSG plugin code into new src/osg/ffmpeg_plugin
subdir.  Changed all of his .hh header files into .h files.  From within
ffmpeg_plugin/full-package-name-VERSION, chant make clean, make & make
install.  osgdb_ffmpeg.so is installed into ffmpeg_plugin/lib.

============================================================================
ISDS3D code changes made on Weds, Jan 2:

*. In satellitepass::write_videofile(), instantiate and destroy
AnimationController_ptr.

*.  Added max_text_width args to ImageFrame::set_axes_labels(),
label_vertical_axis() & label_horizontal_axis to enable axis label
wrapping.

*.
GraphicalsGroup::rotate_OSGsubPAT_about_specified_origin_then_translate()
generalizes rotate_OSGsubPAT_about_specified_origin().

*.  Movie::update_movie_window() retrieves U & V axes' directions and
scales corresponding to the current time and pass number.  This method uses
this U/V axis information to reset the movie window's corner vertices
relative to the bottom left corner.  This method is repeatedly called by
MoviesGroup::update_display() and was written to handle dynamic movie
windows.

*.  Added update_movie_window() to MoviesGroup::update_display().

*.  Program mains/video/VIDS2VID concatenates multiple .vid files into a
single .vid file which can be viewed and manipulated using program VIDEO.

============================================================================
2008
============================================================================

ISDS3D code changes made on Sun, Dec 30:

*. Added emulate_GoogleEarth_rotations_flag member to Custom3DManipulator
as well as default true constructor argument for this boolean.  Added
conditional based upon this param's value in Custom3DManipulator::Rotate().

*.  AlirtGrid::initialize_satellite_grid() now takes spase_flag boolean
argument and adjusts its extremal grid parameters to fit spase or real
satellite.

*.  Added PolyLinesGroup decoration to VIEWSAT.  

*.  Moved independent_var=2 initialization from PassInfo::clear_params()
into init_member_objs() method.

*.  GraphicalsGroup::rotate_OSGsubPAT_about_specified_origin() resets the
attitude for the OSGsubPAT corresponding to the input ID.  We wrote this
method in order to rotate coarse OSG satellite models for refinement
purposes.

*.  DataGraphsGroup::write_IVE_file() writes the contents of the OSGsubPAT
labeled by the input integer ID to an output .IVE file.  We wrote this
method in December 2007 for real, rotated satellite OSG output purposes.

*. PointCloud::remap_intensities performs a piecewise linear interpolation
of p-values in order to stretch extremely bright regions in black & white
images over a larger grey scale.  We wrote this method on December 27, 2007
in order to optimize our composite 3D SJ7 image.

*.  Added orthographic versions of compute_tiepoint_projection_matrix(),
parse_XYZUV_data and fill_projection_matrix_entries() to camera class.

*.  In FusionGroup::backproject_videoframe_onto_pointcloud(), check for p
values equal to zero to indicate shadowed voxels as determined by Hyrum's
code.  Color shadowed voxels blue.

*.  ISDS demos and extended pgms seem to work OK as of Sun, Dec 30 at 2:30
pm on ISDS3D laptop (pfiles12_30b.tgz) after FIASCO upgrading.

*.  Added mains/spase/packages to repository.

*.  Renamed SignPost::set_scale_atitude_posn() as set_attitude_posn().
Added reset_attitude_posn() and reset_scale() methods to SignPost class.

*.  Movie::remap_orthographic_window_corners() map the 2D coordinates of
the Movie's corners to their 3-space locations and resets the
G99VideoDisplay's geometry vertices to these locations.  It also saves the
U and V axes directions and scales for possible future ImageFrame display.

*. astrofunc::secs_since_midnight_to_hms() calls
astrofunc::decimal_degs_to_hms().

============================================================================
ISDS3D code changes made on Sat, Dec 22, Sun, Dec 23 & Mon, Dec 24:

*.  Added new mains/baghdad/packages, /china/packages, satellite/packages
and fusion/packages subdirs to repository.

*.  Differentiated between height & prob cyclic_frac_offsets in PassInfo,
PassesGroup and PointCloud classes.  Made necessary argument name changes
to multiple .pkg files.

*.  mains/satellite/OPTSHADOW now correctly computes optical image plane
for SJ pass starting from AZ/EL mount info.

*.  Moved set_attitude_posn() and variant methods out of Model/MODEL
classes into Graphical.  Wrote single specialized version within
Model/MODEL classes which intially yaw models by 180 degs so that they
point northward.

*.  ISDS demos and standard pgms seem to work OK as of Sun, Dec 23 at 5:30
pm on ISDS3D laptop (pfiles12_23b.tgz)

*.  Added text_displacement member & set/get methods to CylinderPickHandler
class.

*.  Added CylindersGroup and CylinderPickHandler functionality into VIEWSAT
for model refinement purposes. Added README.model_refinement to repository.

*.  Promoted PassInfo members min_threshold,max_threshold to STL vectors.
Can now specify X,Y,Z,P extremal bounds for point clouds.

*.  Added set_origin_to_zeroth_xyz_flag member to PointCloudKeyHandler.
Set this flag to false in VIEWSATELLITE so that spase point cloud and
picked cyls line up when displayed together.  

*.  FusionGroup::video_backprojection() uses a pre-calculated projection
matrix to drape the current video frame onto the current point cloud.  This
method was written for satellite optical imagery draping purposes.

============================================================================
ISDS3D code changes made on Fri, Dec 21:

*.  Extended mains/satellite/OPTSHADOW to read in az/el mount info and
begin to project X,Y,Z iges axes into U,V,W optical image plane basis

============================================================================
ISDS3D code changes made on Thurs, Dec 20:

*.  In PointCloudKeyHandler(), pressing 'y' now brings up text query for
output file type.  Created new Pointcloud::write_output_file() which
performs actual command line query.

*.  In mains/satellite/ISAR_OPT_FUSION, changed normalized_input_RGB_values
from true to false.

============================================================================
ISDS3D code changes made on Tues, Dec 18 and Weds, Dec 19:

*.  Isolated Baghdad, NYC and Bluegrass specific commands within TESTCITIES
toward end of main program.

*.  Two SignPostsGroup::destroy_SignPost() methods either return bool flag
indicating success or else destroyed SignPost integer ID.  Deletion of MIT
SignPosts from SKS database appears OK, but SignPosts initially created
from SKS do not physically disappear after they're deleted!

*.  Standardized SignPostsGroup::generate_new_SignPost() so that it now
matches CylindersGroup::generate_new_Cylinder().  Privatized
SignPostsGroup:: generate_SignPost_geode().

*.  Added category_column_flag member and set/get methods to
postgis_database class.

*.  SignPostsGroup::identify_and_revise_Bluegrass_labels() now returns if
its input postgis_database doesn't contain a category column.  This method
successfully eliminates unwanted Bluegrass SignPosts.

................

*.  Added check into scenegraphfunc::get_n_geometry_vertices() for
NULL-valued input Geometry_ptr argument.

*.  Added check into PointCloud::compute_prob_dist() on leaf geometry ptrs.
If they are all NULL, set max/min thresholds to XYZ bbox extremal values.

============================================================================
ISDS3D code changes made on Tues, Dec 18:

*.  In mains/bluegrass, added run_bluegrass script and packages/lubbock.pkg
& lubbock_landmarks.pkg to repository.

*. SignPostsGroup::identify_and_revise_Bluegrass_labels() parses BG labels
into more human-readable forms.

============================================================================
ISDS3D code changes made on Sun, Dec 16 and Mon, Dec 17:

*.  ISDS demos and standard pgms seem to work OK as of Sun, Dec 16 at 8 am
on ISDS3D laptop (pfiles12_16a.tgz)

*.  Added volume_alpha member and set/get methods to OBSFRUSTUM class.

*.  Eliminated PolyhedraGroup::generate_polyhedron_geode() & moved its
content into PolyhedraGroup::generate_new_Polyhedron().  Also added geode
construction lines to PyramidsGroup::generate_new_Pyramid().

* polyhedron::compute_COM() now calls compute_faces_centroid() rather than
GTS COM method.  Recall compute_faces_centroid() returns inexact results!

*. Stripped most GTS content from
polyhedron::generate_GNU_triangulated_surface().  Working towards
eliminating our codes' dependence upon this unreliable library.

*.  Eliminated Pyramid::store_zplane_vertices() in favor of
store_apex_and_zplane_vertices().

*.  Private method Polyhedron::generate_triangle_mesh() now instantiates
triangle mesh vertices and indices arrays, but does not fill them with any
initial values.

*.  polyhedron::relabel_IDs_for_all_face_edges_and_vertices appears to be
seriously messed up.  As a temporary hack, we wrote
Pyramid::update_square_pyramid_triangle_mesh() which hardwires correct
triangle mesh index ordering.  This method should someday disappear.

*.  mains/OSG/PREDATOR.cc is starting to display alpha-blended OBSFRUSTA.
But volume coloring randomly disappears for reasons we and Ross don't
understand.

*.  ISDS demos and extended pgms seem to work OK as of Mon, Dec 17 at 6 pm
on ISDS3D laptop (pfiles12_17g.tgz) after extensive debugging.


============================================================================
ISDS3D code changes made on Sat, Dec 15:

*. Added bbox_top_left_corners, bbox_bottom_right_corners, bbox_colors and
bbox_labels members to PassInfo class.  Added pushback and get methods.

*.  EarthRegion::generate_bbox() instantiates a 3D bounding box based upon
top_left and bottom_right geopoint eastings and northings passed in as
arguments. 

*.  Added osgText::Font* argument to Polyhedron constructor.

*.  Added text member functions generate_text() to Polyhedron class.

*.  Wrote geopoint class constructor and recompute_UTM_coords() method
which take in specified UTM zonenumber as argument.

*.  Added all Bluegrass activity region bboxes to packages/lubbock.pkg
file.

============================================================================
ISDS3D code changes made on Fri Dec 14:

*.  Added PolyhedraGroup_ptr member to EarthRegion class plus set method.

*.  Added EarthRegion::generate_bbox() which takes in top_left and
bottom_right corner geopoints.  This method generates a translucent
Polyhedron bbox for region annotation purposes.


============================================================================
ISDS3D code changes made on Sat Dec 8, Sun Dec 9, and Tues Dec 11:

*.  Added Movie_ptr member to TextureSector class.

*.  Added MoviesGroup_ptr member to EarthRegionsGroup and
TextureSectorsGroup classes.

*.  Made /data/Bluegrass/eo/Quickbird/big_tiles/osga_files subdir on ISDS3D
laptop.  (Should make corresponding subdirs on other machines as well.)
Linked all Quickbird Lubbock tiles from LACIE drive to this new subdir.

*.  Created packages subdir of mains/bluegrass.  Added this subdir and its
contents to SVN repository.

*.  Added pick_points_on_Zplane_flag bool member and get method to
fusion/PassesGroup class.

*.  In EarthRegionsGroup::generate_regions(), allow user to adjust height
of LatLongGrids NOT placed onto blue marble by passing in height_offset in
a package file.

*.  Moved README.threshold_dark_counts from mains/isds into READMEs subdir
and added to SVN repository.

*.  In MovieKeyHandler() within RUN_MOVIE_MODE, press Up [Down] arrow key
to decrease [increase] alpha blending of foreground movie texture with
background point cloud and/or surface.

*.  Moved depth_off/on_refptr members and get_depth_on_ptr() &
adjust_depth_buffering() methods from PolyLine into Graphical class.  Call
adjust_depth_buffering() in
TextureSectorsGroup::generate_TextureSector_geode() to force Lubbock movie
to appear superposed over Quickbird surface.

*  Added vector<threevector> video_corner_vertices member and pushback/get
methods to PassInfo class.  Pass quadrilateral corners for Lubbock movie
via package file.

*.  Overloaded raster_parser::write_raster_data() to take in z_min,z_max
params for converting multiple tdp files to geotiffs on common height
scale.

*.  ISDS demos and standard pgms seem to work OK as of Tues, Dec 11 at
12:20 pm on ISDS3D laptop (pfiles12_11b.tgz)

============================================================================
ISDS3D code changes made on Weds, Nov 28:

*. Force number of digits in times written out by
Featuresgroup::save_feature_info_to_file() to equal 5.

============================================================================
ISDS3D code changes made on Tues, Nov 27:

*.  In PointFinder::find_closest_world_point(), require curr_range > 0 for
any potential picked point.

*.  In DataGraphsGroup::geometrices_along_ray(), declare constant params
max_total_geoms_along_ray_size and maximum_sphere_to_ray_frac_dist.

*.  In GraphicalPickHandler::instantiate_Graphical(), commented out call to
insert_graphical_PAT_into_OSGsubPAT() which should be unnecessary.
Instead, this method should be called within each
'Graphicals'Group::generate_new_'Graphical'() method.  Checked in every
'Graphicals'Group that this line is added to generate_new_'Graphicals'
method.  Fixes deletion problem with features and cylinders.

*.  Added NULL ptr check to
SignPostsGroup::enable_PostGIS_database_access() on input postgres_db_ptr.

*.  Extended set of ISDS programs & demos seems to work OK as of Tues, Nov
27 at 1 pm on ISDS3D laptop (pfiles11_27c.tgz)

*.  Added GISlayer_IDs.size() > 0 checks in JUSTEARTH and EARTH pgms.  Both
now work when no input GISlayer package is specified.

============================================================================
ISDS3D code changes made on Fri pm, Nov 23:

*.  Deleted ancient links in /lib to copies of Ross' eyeglass libraries.

============================================================================
ISDS3D code changes made on Weds pm, Nov 21, Thurs, Nov 22 & Fri am, Nov
23:

*.  Deleted include/osg/osgOrganization/Makefile from repository.  Deleted
general/communicator files from repository.

*.  Moved PointCloudKeyHandler::toggle_colormap() along with some private
member vars into PointCloudsGroup class.  Call this latter method when '7'
key is pressed from within OBSFRUSTAKeyHandler::handle().  Can now switch
from trivial ESB car video against greyscsale pointcloud to video with
OpenCV tracks displayed against large hue sans white by pressing '7'.

*.  In Custom3DManipulator::Rotate(), swapped fy0 & fy1 arguments to
getTrackballRotation() so that tilt operation conforms with Google Earth's.

*.  Extended set of ISDS programs & demos seems to work OK as of Thurs, Nov
22 at 9:15 am on ISDS3D laptop (pfiles11_22b.tgz)

*. latlongfunc method LL_to_northing_easting() returns the
(easting,northing) pair corresponding to an input (longitude,latitude)
within a **specified** UTM zone.  This method accomodates earth regions
which straddle a UTM zone boundary (e.g. Lubbock, TX).

*.  Replaced every call to LLtoUTM() with LL_to_northing_easting() in
LatLongGrid class.  

============================================================================
ISDS3D code changes made on Weds, Nov 21:

*.  Modified location of ActiveMQ broker URL argument within run_nyc_demo
script.  

*.  ISDS demos appear to work OK as of Weds, Nov 21 at 12:20 pm.  (Haven't
checked standard set of programs.)  pfiles11_21a.tgz

============================================================================
ISDS3D code changes made on Tues, Nov 20:

*.  Added README.G104_scrn_presets to repository.

*.  No longer hardwire ActiveMQ broker URL within TESTCITIES.  Instead,
pass this adjustable parameter as a string argument in run_nyc_demo script.

*.  Eliminated unused footprint_corner & aerial_corner member vars from
ViewFrustum class.

============================================================================
ISDS3D code changes made on Fri, Nov 16:

*.  In OBSFRUSTAGROUP::generate_skyscraper_bboxes(), hardwire reasonable
world origin to avoid variable grid world origin dependence upon new vs old
NYC point cloud.

*.  In Terrain_Manipulator::ViewFrustum_relative_to_Grid(), now use
ViewFrustum's corner rays to compute VF's intercept with grid plane rather
than rays projected orthogonal to screen direction.  Seems to have fixed
translation problems with NYC pt cloud.

*.  In EarthRegionsGroup::generate_regions(), set latlonggrid's z value
based upon point cloud's thresholded rather than absolute minimum z value.

============================================================================
ISDS3D code changes made on Thurs, Nov 15:

*.  Generated markedly improved fused version of median filled + walls
restored NYC RTV tdp files and Ross' modified Quickbird satellite EO
imagery.

============================================================================
ISDS3D code changes made on Tues, Nov 13:

*.  Extended set of ISDS programs & demos seems to work OK as of Tues, Nov
13 at 5 pm on ISDS3D laptop (pfiles11_13a.tgz)

============================================================================
ISDS3D code changes made on Weds, Nov 7, Thurs, Nov 8, & Sat Nov 10:

*.  Added README.vpn to repository.

*.  Call new method GraphicalsGroup::mask_Graphical_for_all_times() in
OBSFRUSTUM::draw_rays_thru_imageplane_features_to_worldplane() to prevent
non-masked ground and image plane cyls from appearing at OBSFRUSTUM's
origin.
    
*.  Added zoomin_prohibited_flag member to Terrain_Manipulator class along
with set/get methods.  Default value for this boolean = true.  But set this
flag to false in OBSFRUSTAKeyHandler::handle() for ESB video.

*.  PointCloudKeyHandler::toggle_colormap() now toggles between fused RGBA,
greyscale and large hue value sans white color maps.

============================================================================
ISDS3D code changes made on Thurs, Nov 1:

*. groundfunc::eliminate_ground_outliers() counters worst errors introduced
by recursive emptying of non-ground islands surrounded by oceans of ground.
Call this method after final round of ground oozing in main pgm FINDGROUND
to eliminate building voxels misclassified as ground.

.............................

More code changes made on Thurs, Nov 1 in the evening as well as early Mon,
Nov 5:

*.  Fixed bad bug in tdpfunc::write_xyzp_data().  We now substract off
zeroth_XYZ from each XYZ point.  LatLongGrid now appears OK for
ESB_region.osga.

*.  Added recursive emptying to
OBSFRUSTUM::project_ground_info_into_imageplane() to remove small islands
from binary ground mask.  ESB ground mask now looks quite decent!

*.  Separated off several lines in PointCloudKeyHandler case ',' into
private method toggle_colormap().  Colormap toggling now works for both
VIEW_DATA and MANIPULATE_ANNOTATION modes.

*.  For reasons we don't understand, the red/green NYC skyscraper bboxes
were displaced away from their Bear Stearns/Tower 49 locations.  So we had
to introduce a fudge translation into
OBSFRUSTAGROUP::generate_skyscraper_bboxes() in order to return these
bboxes to their correct locations.

*.  ISDS demos and standard pgms seem to work OK as of Mon, Nov 5 at 8 am
on ISDS3D laptop (pfiles11_5b.tgz).

*.  Keep doubling ground_prob within
groundfunc::identify_ground_seed_pixels() until n_seeds > 5000.  This
appears to fix bad bug which previously messed up many tiles output from
program FINDGROUND.

============================================================================
ISDS3D code changes made on Weds, Oct 31:	 

*.  Starting to project ground/non-ground info from point cloud onto ESB
video.  Building wall occlusion is a major problem...

...............................

*. Replaced vector<double> P member of MyNodeVisitor with 
osg::ref_ptr<osg::FloatArray> probs_refptr.

*. PointCloud::retrieve_hires_XYZPs() uses HiresDataVisitor to fill
PointCloud's vertices and metadata members if they are empty.

*. PointCloud::generate_ladarimage() now constructs z and p twoDarrays
directly from scenegraphs read in from OSGA files.

*.  Implemented crude occlusion detection in
OBSFRUSTUM::project_ground_info_into_imageplane().  Break each ray from XYZ
point to camera's location into small segments.  Test if local height of
ray element is less than ztwoDarray at that location.  If so, we assume the
ray is blocked somewhere along the LOS to the camera.  Seems to yield
decent results for ESB video.

============================================================================
ISDS3D code changes made on Tues, Oct 30:

*.  Fixed call to groundfunc::find_low_local_pixels() in main pgm
alirt/ground_bldgs.cc and several ied main pgms.

*.  Added HiresDataVisitor_ptr member to PointCloud class.  Pass
PointCloudsGroup HiresDataVisitor_ptr to each PointCloud through its
constructor.  Eliminated HiresDataVisitor_ptr argument in
PointCloud::write_TDP_file().

*.  Can now write out ESB subregion to TDP file using HiresDataVisitor.

...............................

*.  Added vector<double> P member to MyNodeVisitor class along with get_P()
method.

============================================================================
ISDS3D code changes made on Sat, Oct 27, Sun, Oct 28 & early Mon, Oct 29:

*.  groundfunc::find_low_local_pixels() now keeps track of low pixels most
recently found.  It performs the next iteration's search for low pixels
only in the vicinity of the current iteration's low pixels.  This border
approach to oozing increases the search speed by orders of magnitude!

*.  Separated off many inner loop search lines from
groundfunc::find_low_local_pixels() into method local_ground_ooze().


*.  Wrote tdpfunc::generate_ztwoDarray_and_ptwoDarray_from_tdpfile() &
commented tdpfunc::generate_ztwoDarray_from_tdpfile().

*.  Generalized groundfunc::generate_threshold_centers() which now takes in
zmin and minimal_fill_frac arguments.

*.  imagefunc::fast_threshold_field() now uses 1/(1+r**2) rather than
exp(sqrt(rsq)) as weighting function.

*.  TEMPORARILY disabled rotation guards in Terrain_Manipulator::rotate()
for ground fitting purposes...11:30 on Sunday

*.  In tdpfunc::generate_ztwoDarray_from_tdpfile(), initialize ztwoDarray
values to xyzpfunc::null_value rather than to zero.

*.  In tdpfunc::generate_ztwoDarray_and_ptwoDarray_from_tdpfile(),
eliminated 'r+b' argument from tdp_file.file_open() command.

*.  Program newyork/findground is finally starting to yield reasonable
ground detection results for Empire State Building NYC tile.  Trying to
perform multiple rounds of ground oozing & flattening.

*.  imagefunc::binary_COM_above_zmin() computes the 2D center-of-mass for
binary thresholded pixels within the bounding box of *ztwoDarray_ptr
specified by input extremal X and Y values.  groundfunc::
generate_threshold_centers() now calls this new method.

*.  ISDS demos and standard pgms seem to work OK as of Mon, Oct 29 at 10 am
pm on ISDS3D laptop (pfiles10_29d.tgz)

============================================================================
ISDS3D code changes made on Fri, Oct 26:

*.  Explicitly check Movie_ptr != NULL in OBSFRUSTAGROUP::update_display()
before attempting to project current track points.

*.  Extended set of ISDS programs & demos seems to work OK as of Fri, Oct
26 at 8:30 am on ISDS3D laptop (pfiles10_26b.tgz)

.....................

*.  Created packages subdir in mains/OSG and newyork.  Moved all .pkg files
into these subdirs.  Added ./packages to demo_new and isds3d_update text
files.

.....................

*.  Moved NYC demo scripts into mains/newyork/script_files.  Added this
subdir to repository.

============================================================================
ISDS3D code changes made on early Thurs, Oct 25:

*.  Eliminated Terrain_Maniulator boolean allow_trans_from_curr_eyepoint
member.

*.  In OBSFRUSTUMPickHandler, doubleclicking now only flies camera into
OBSFRUSTA's vertex. 

*.  In OBSFRUSTUMPickHandler::select_OBSFRUSTUM(), we no longer set
rotate_about_curr_eyept_flag to false if selected_OBSFRUSTUM_ID==-1.

*.  Pressing comma in either VIEW_DATA or MANIPULATE_ANNOTATION modes
toggles between colored and grey-scale colormaps.  Reduces number of
keystrokes needed for NYC touchtable demo.

*.  Reduced number of animation steps from 100 to 75 in auto-zoomout
sequence from OBSFRUSTA.

*.  Append final space to inputstring arg of
stringfunc::decompose_string_into_substrings().  Final substring non-white
character then appears to be correctly retained.

*.  stringfunc::find_and_replace_char() returns modified string with input
char replaced by output char.

*.  PassesGroup can now read in an initial_mode_string from command line
argument.  Operations::set_initial_mode() changes initial mode based upon
PassesGroup::initial_mode_string.

*.  ISDS demos seem to work OK as of Thurs, Oct 25 at 6 pm.

============================================================================
ISDS3D code changes made on Sat, Oct 20, Sun, Oct 21 & early Mon, Oct 22:

*. In Graphical::initialize_Graphical(), we set the
stationary_Graphical_flag to false for any Graphical which is masked for
some times and unmasked for others.

*.  Renamed Point::generate_crosshairs_drawable() as private method
generate_drawable_geom().

*. Privatized generate_drawable_geom() for all Geometrical classes.

*.  Changed FeaturesGroup::generate_feature_geode() to
get_or_create_feature_geode().  Generate a feature's geode just once rather
than each time it exists in some time-dependent movie.  Regeneration of
features in multiple movie frames now works OK.

*.  In OBSFRUSTAGROUP::compute_camera_flyout_posn_and_orientation(), reset
backoff_dist to 3 * movie_downrange_distance when zooming away from
OBSFRUSTA.

*.  ISDS demos and standard pgms seem to work OK as of Sun, Oct 21 at 6:40
pm on ISDS3D laptop (pfiles10_21c.tgz)

*.  Moved RGBA_array member and methods out of VidFile into
G99VideoDisplay.

*.  In G99VideoDisplay::read_and_set_image(), read in char* data from
VidFile only once and not repeatedly.

============================================================================
ISDS3D code changes made on Friday Oct 19:

*.  Depressing keypad button '7' while in MANIPULATE FUSED DATA MODE now
brings up daytime vs nighttime ESB photos.

*.  OBSFRUSTAGROUP::fly_out_from_OBSFRUSTUM generates an animation
path which starts at the input OBSFRUSTUM's camera's location and zooms
outwards and upwards.  This method effectively performs an inverse
operation to flyto_camera_location().

*.  Sprinkled Terrain_Manipulator animation methods with
no_final_slowdown_flag to turn off deceleration at the end of zoom-out
animation paths.

*.  Privatized Terrain_Manipulator::interpolate_camera_orientation() &
 EarthManipulator::interpolate_camera_posn_and_orientation().  Eliminated
unused frac arg from these methods.

*.  Separated off several lines of Terrain_Manipulator::Rotate() & Zoom()
into private auxilliary method
Terrain_Manipulator::reset_member_quaternion().

*.  When rotate_about_curr_eyept_flag==true, only manipulator options
allowed are rotation and zooming out.  Translations and zooming in are
disabled.  Zooming out now occurs along an autogenerated path.  So there is
no longer any need to rotate OBSFRUSTUM downwards and to doubleclick in
order to move away from an embedded digital photo.

*.  ISDS demos and standard pgms (except for OBSFRUSTA coloring in
photos3d) seem to work OK as of Fri, Oct 19 at 1:11 on ISDS3D laptop
(pfiles10_19j.tgz)

============================================================================
ISDS3D code changes made on Thurs, Oct 18:

*.  Increased prefactor in Terrain_Manipulator::rotate() from 25 to 50 for
touch table responsiveness purposes.

*.  Refined Graphical::check_Graphical_stationarity() to test for
NEGATIVEINFINITY values and initialize quaterions.

*.  Added check for Graphical masking in
GraphicalPickHandler::find_closest_Graphical_nearby_mouse_posn() & 
OBSFRUSTUMPickHandler::select_OBSFRUSTUM().  Do not select any graphical
which is currently masked.

*.  Commented out unused member Ross_DiamondTouch_input_flag of
Custom3DManipulator class.

*.  Added protected member vars fx_prev & fy_prev to Custom3DManipulator
class in an attempt to detect discontinuous translations.

*.  For NYC demo purposes, we pause all videos when keypad buttons other
than 6 are pressed.  This should hopefully speed up TESTCITIES performance.

.....

*.  In MANIPULATE FUSION MODE, pressing 'f' key now genuinely toggles
rotate_about_curr_eyepoint_flag.

*.  All OBSFRUSTA movies are reset to being totally opaque prior to the
virtual camera flying into the real camera's location.




============================================================================
ISDS3D code changes made on Tues, Oct 16 & Weds, Oct 17:

*.  Refined logic in Terrain_Manipulator::zoom().  If camera lies too close
to grid plane, zooming in while looking downards or zooming out while
looking upwards is now forbidden.

*.  For reasons we don't understand, numer computation within
plane::ray_intersection() was incorrect.  So we replaced numer with call to
signed_distance_from_plane().  Ray_intersection method now seems to return
reasonable results.

*.  Eliminated CylindersGroup::generate_cylinder_geode() in favor of
Cylinder::generate_drawable_geode().
CylindersGroup::generate_new_Cylinder() is now more parallel to PolyLines[Cones]Group::generate_new_PolyLine[Cone].

*.  In GraphicalsGroup::insert_Graphical_into_list(), we no longer insert
any input Graphical_ptr into Graphicalslist if it already exists within the
linked list.

*.  OBSFRUSTUM::backproject_into_world_plane() and
draw_rays_thru_imageplane_features_to_worldplane() backproject UV features
from the 2D movie image plane onto a specified 3D world-plane.  Cylinders
representing the intersection points and lines representing the rays
emanating outwards from the camera's location can now be displayed.

*.  Now pass true camera world posn into Movie::remap_window_corners().
Use this info to compute movie's true image plane which we now save within
Movie member *imageplane_ptr.

*.  Mask NYC skyscraper bboxes when keypad buttons 3 or 4 are NOT pressed.

*.  Extended set of ISDS programs & demos seems to work OK as of Weds, Oct
17 at 5 pm on ISDS3D laptop (pfiles10_17j.tgz).


============================================================================
ISDS3D code changes made on Sat, Oct 13 & Sun, Oct 14 & early am Mon, Oct
15:

*.  Set Graphical_name labels within initialize_member_objects() methods of
all Graphical classes.

*.  Started passing AnimationController ptr into Graphicals' constructors
so that every Graphical will eventually have access to its own clock.

*.  Consolidated and simplified GraphicalsGroup::update_animation_frame()
into GraphicalsGroup::update_display().  Eliminated all other classes'
update_animation_frame() member funcs in favor of update_display().  In
particular, streamlined MoviesGroup::update_display().

*.  Eliminated all calls to Graphical::set_PAT() from outside this class
except for one within GraphicalsGroup::update_display().

*.  Extended set of ISDS programs & demos seems to work OK as of 9:15 am
Sun, Oct 14 on ISDS3D laptop (pfiles10_14c.tgz)

*.  Globally swapped input pass_number & time arguments in
Graphical::set_coords_manually_manipulated() &
get_coords_manually_manipulated() to agree with convention established by
set_UVW_coords().

*.  Added boolean portrait_mode_flag member to PassInfo along with set/get
methods.  Add extra 90 deg spin about LOS in
OBSFRUSTAGROUP::flyto_camera_location() if portrait_mode_flag==true.

*.  Eliminated redundant AnimationController_ptr member of Movie class.
Its Graphical base class already has this member var.  Can now select
and fly into OBSFRUSTUM with running movie.

*.  Renamed osg/osg2D/imagenumberHUD.cc, .h as ImageNumberHUD.cc, .h.

*.  Eliminated trivial dependence of all HUD classes on ndims.

*.  Wrote new osg/osgOrganization/Operations class to hold Mode, Animation
& ImageNumberHUD controllers & keyhandlers.  Started to globally replace
repetitive lines within main programs with call to this new class instead.

*.  Keypad '5' and '6' keys toggle panorama and ESB video for NYC demo.

*.  Starting to tie video playback controls to OBSFRUSTUM picking.

........................

*.  Pause all videos when any OBSFRUSTUM is selected, and play only the
selected one.  Mask ImageNumberHUD and pause all videos when all OBSFRUSTA
are masked.

============================================================================
ISDS3D code changes made on Fri, Oct 12:

*.  Added AnimationController_ptr member var to Graphical class.

*.  Added get_curr_t() method to GraphicalPickHandler.

*.  Cleaned up GraphicalsGroup::update_display().

*.  Removed gross inefficiency in
Graphical::check_Graphical_stationarity().

*.  Changed key for Graphical's COORDS_MAP from dumb int to twovector
separately storing t and pass_number info.  Eliminated
Graphical::get_int_key().

*.  ISDS demos and standard pgms (except for ObsFrusta coloring in Boston
viewcities) seem to work OK as of Fri, Oct 12 at 11:44 am
(pfiles10_12f.tgz)

..........................

*.  Hardwired Bear Stearns and Tower 49 skyscraper bounding box info within
OBSFRUSTAGROUP::generate_skyscraper_bboxes().  Toggle these bboxes via
OBSFRUSTAKeyHandler::generate_skyscraper_bboxes().

*.  Fixed coloring of OBSFRUSTA appearing against grey & colored point
cloud backgrounds.

============================================================================
ISDS3D code changes made on Thurs, Oct 11:

*.  Graphical::set_coords_obs() is now private.

*.  Added Graphical_name string member to Graphical class for debugging
purposes.

*.  Added stationary_Graphical_flag to Graphical class.  

*. Graphical::check_Graphical_stationarity iterates over every
instantaneous coordinate for the current Graphical object.  If the
UVW_coords, Quat or UVW_scales contained within each instantaneous
coordinate are not identical, this method sets the Graphical's
stationary_Graphical_flag to false.

*.  Onramps & ESB videos in RTV point cloud are starting to run correctly!
Still needs work though...

============================================================================
ISDS3D code changes made on Weds, Oct 10:

*.  CustomManipulator::set_center() and get_center() are now protected
methods.

*.  Terrain_Manipulator::home() now resets worldspace_center and
eye_to_center_dist based upon grid's midpoint and maximal linear dimension.
Moved several lines out of all main programs containing
Terrain_Manipulators into Terrain_Manipulator::home().  Solves problem with
homing after flying in to OBSFRUSTRA apexes.  Renamed
Terrain_Manipulator::Grid_ptr var as grid_ptr.

*.  CustomManipulator::set_worldspace_center() now calls set_center().

*.  ISDS demos and standard pgms (except for FOV.cc) seem to work OK as of
Thurs, Oct 11 at 9 am (pfiles10_11b.tgz).

============================================================================
ISDS3D code changes made on Fri, Oct 5, Sat, Oct 6, Sun, Oct 7 & Mon, Oct
8:

*.  Added generate_AVI_movie_flag param to Mode_HUD constructor and member
var.

*.  Grid automatically unmasked when
Terrain_Manipulator:set_rotate_about_curr_eyept_flag(false) is called.

*.  ISDS demos and standard pgms (except for FOV.cc) seem to work OK as of
Sat, Oct 6 at 10 am (pfiles10_6a.tgz).

*.  Added compute_homography_inverse() & enforce_unit_determinant() methods
to homography class.

*.  Some SignPostsGroup and SignPostPickHandler constructors now take ndim
argument.  Privatized SignpostsGroup::generate_signpost_geode().  Added
SignPostsGroup_ptr member to OBSFRUSTAKeyHandler along with set method.

*.  OBSFRUSTUM::project_SignPosts_into_imageplane() prints out (U,V,label)
triples for SignPosts lying within max range of OBSFRUSTUM.


============================================================================
ISDS3D code changes made on Thurs, Oct 4:

*.  Added frustum_color string member var to PassInfo along with set/get
methods.

*.  Added GraphicalsGroup::erase_all_Graphicals(),
GraphicalsGroup::unmask_all_OSGsubPATs(), &
OBSFRUSTAGROUP::erase_all_OBSFRUSTA().

*.  For SST demo purposes, implement '[', ']' and ';' keys within
OBSFRUSTAKeyHandler to display particular combinations of OBSFRUSTA.  

*.  Deselect all OBSFRUSTA and unmask all OSGsubPATs of OBSFRUSTAGroup when
toggling on display of OBSFRUSTA within OBSFRUSTAKeyHandler cases.

...............

*.  Remapped SST demo combinations of OBSFRUSTA to Keypad 1, 2, 3 and 4
keys.


============================================================================
ISDS3D code changes made on Tues, Oct 2:

*.  Overhauled EarthManipulator::spin_about_nadir().  Vertical mouse
movements are interpreted as elevation tilts, while horizontal motions are
interpreted as azimuthal spins about radial direction vector.  Reasonable
restrictions on elevation tilts imposed.  This method now mimics Google
Earth's rotation functionality.

*.  Fixed TerrainManipulator::Rotate() so that azimuthal spins occur about
world Zhat rather than camera Yhat if
rotate_about_curr_eyepoint_flag==false.

...........................

*.  Added OSGsubPAT_ID member var and set/get methods to PassInfo
class. Can now bundle together multiple images within a single subgroup.  

*.  OBSFRUSTAKeyHandler::find_Movies_in_OSGsubPAT() fills member STL vector
Movies_ptrs_ptr with all Movies corresponding to OBSFRUSTA belonging to
selected OSGsubPAT.  alpha blending now occurs for all photos belonging to
common subgroup.

*.  GraphicalsGroup::n_Graphical_siblings() returns number of siblings
belonging to the same parent OSGsubPAT as input Graphical.

*.  OBSFRUSTAGROUP::set_next_frustum_color checks whether the next
available color is too close to the Grid's purple color.  If so, it sets
member variable frustum_color to a significantly different color.

*.  Copied /data/OSG-Data/3D_colormaps/grey.txt onto grey1_whole.txt.
Created new grey1_reduced.txt which doesn't start at pure black.  Added
these two new grey maps to repository and deleted grey.txt from repository.

........................

*.  Created soft link between grey1_reduced.txt and grey.txt.  Added
grey.txt to repository.

........................

*.  Added mains/newyork/piers1,2,4.pkg to repository.

============================================================================
ISDS3D code changes made on Mon evening, Oct 1 & early morning on Tues, Oct
2:

*.  Added frustum_sidelength member var and set/get methods to PassInfo
class.  We now extract sidelength info from video passes within OBSFRUSTA
methods rather than hardwiring constant sidelength value.  Adjusted
sidelengths of frusta used for NYC TESTCITIES demo.

*. Hide grid following flyin to OBSFRUSTUM apex via Grid_ptr->set_mask(0)
in CustomAnimationPathManipulator::handleFrame().  Reset mask to 1 in
OBSFRUSTUMPickHandler::select_OBSFRUSTUM() if selected_OBSFRUSTUM_ID==-1.

============================================================================
ISDS3D code changes made on Mon afternoon, Oct 1:

*.  Explicitly call OBSFRUSTUM::set_display_camera_model_flag(false) in
OBSFRUSTAGROUP::generate_new_OBSFRUSTUM().

*.  Moved several repetitive lines out of VIEWCITIES into messenger
constructor.  Added Thread member pointer to messenger class.

*.  Added piers3.pkg and night_empire.pkg to repository.

============================================================================
ISDS3D code changes made on Sat, Sep 29, Sun, Sep 30 & Mon, Oct 1:

*.  ISDS demos and standard pgms (except for FOV.cc) seem to work OK as of
Mon, Oct 1 at 2:25 pm (pfiles10_1g.tgz) & Sat, Sep 29 at 8:20 am
(pfiles9_29a.tgz) on ISDS3D laptop.

*.  Added selected_OSGsubPAT_ID member var to GraphicalsGroup class
along with get method.

*. Moved OBSFRUSTAGROUP::hide_nonselected_OBSFRUSTA into
GraphicalsGroup::mask_nonselected_OSGsubPATs().

*.  OBSFRUSTAGROUP::generate_still_imagery_frusta() assigns each image to
its own OSGsubPAT.  In contrast, programs NEW_FOV, PHOTOS3D and PHOTOS2D
assign groups of images to a common OSGsubPAT.  Selection of one particular
OBSFRUSTUM now leaves its OSGsubPAT unmasked & all others masked.

*.  Selected OBSFRUSTA in main pgm PHOTOS3D are now colored white.
Unselected OBSFRUSTA are multi-colored.

*.  Unselected OBSFRUSTA in main pgm TESTCITIES are colored white
[variably] if background pt cloud is colored [grey].  Selected OBSFRUSTA
are colored red [variably] if backgrnd pt cloud is colored [grey].

*.  Original and recovered projection matrices now agree after sgn changed
in camera::compute_pinhole_model_params().

*. FusionGroup::constrained_image_insertion() varies camera extrinsics
while holding intrinsics fixed.  It performs a brute-force chisq
minimization and prints the best-fit projection matrix.

*.  Main pgm china/COMPUTE_PROJ computes 3x4 projection matrix given
specified intrinisic & extrinsic camera parameters.

============================================================================
ISDS3D code changes made on Fri, Sep 28:

*. Wrote camera::dotproduct_between_rays() which does not depend on
camera's absolute position or orientation.

*.  Globally replaced all refs to G99VideoDisplay class in FeaturesGroup
with Movie.

*.  feature::renormalize_feature_values() loops over each feature &
transforms its (U,V) coordinates into pixel coordinates. 

*.  camera::print_external_and_internal_params() reports camera params
extracted from 3x4 projection matrix.

============================================================================
ISDS3D code changes made on Tues, Sep 25 & Weds, Sep 26 & Thurs, Sep 27:

*. Pass bool param recompute_internal_params_flag into
ObsFrustum::absolute_position_and_orientation() rather than hardwiring to
false in this method.  Param set equal to true in main pgm china/RELROT.

*. Privatized  ObsFurstum::rotate_about_camera_posn()

*.  Renamed member vars camera::m_fu, m_fv, m_u0, m_v0, m_kappa2 as
fu,fv.u0,v0,kappa2.  Eliminated passed params alpha and beta in camera
methods in favor of member vars fu and fv.  Added pixel skew angle theta as
member var to camera class.

*.  Added fu,fv,u0,v0 lines to Shanghai4,5,6 package files so that they can
be parsed with updated version of NEW_FOV.

*. Wrote camera::get_az_el_roll_from_Rcamera() which is inverse to
camera::set_az_el_roll().

*.  ISDS demos and standard pgms (except for FOV.cc) seem to work OK as of
Weds, Sep 26 at 5:30 am (pfiles9_26a.tgz) on ISDS3D laptop.

*.  Privatized camera::construct_internal_parameter_K_matrix().

*.  camera::fast_check_projection_matrix() and
construct_projection_matrix_for_fixed_K() methods written for iterative
search purposes.

*.  Added pixel_skew_angle member var to PassInfo class.

============================================================================
ISDS3D code changes made on Sat, Sep 22 & Sun, Sep 23:

*.  Fixed action of Terrain_Manipulator::translate(), rotate() and zoom()
when rotate_about_current_eyepoint_flag==true.  Doubleclicking OBSFRUSTA
toggles rotate_about_curr_eyept_flag.

*. plane::ray_intersection() computes intersection of ray specified by its
basepoint and direction vector with curr plane object.

*.  Movie::remap_window_corners() computes the image plane whose normal
vector equals -What and is located downrange from camera posn by input
distance rho.  It next computes intercept locations of each UV_corner_dir
with image plane.  Method resets G99VidDisplay's geom vertices to these ray
intercept locations.  This method maps a photo's 2D rectangle onto 3D
parallelogram which precisely touches view frustum's side edges.  Yields
noticeable improvement between 2D photo & 3D ladar pnt cloud background.

*.  Wrote contour constructor which takes in face object.

*.  OBSFRUSTUM::estimate_z_ground forms a contour from the perimeter of the
viewing_pyramid_above_zplane's zplane face.  It then samples an input point
cloud's height values at some large number of points along the contour.
Member variable z_ground is set equal to the median value of the sampled
heights.

*.  OBSFRUSTUM::backproject_pixels_into_second_imageplane() now alters hsv
values to display photo overlap regions.

*.  ISDS demos and standard pgms (except for FOV.cc) seem to work OK as of
Mon, Sep 24 at 9:45 am  (pfiles9_24a.tgz) on ISDS3D laptop.

============================================================================
ISDS3D code changes made on Fri, Sep 21:

*.  Eliminated dependence of Transformer and ViewFrustum classes on
SceneView.  Pass WindowManager into their constructors instead.

*.  Converted window_mgr objs in all main pgs to WindowManager*
window_mgr_ptr=new ViewerManager().

*.  No longer instantiate MyViewerEventHandlers directly in main pgms but
rather via window_mgr_ptr->instantiate_MyViewerEventHandler().

*.  ISDS demos and standard pgms seem to work OK as of Fri, Sep 21 at
11:45 am (pfiles9_21i.tgz) on ISDS3D laptop.

---------------------------------

*.  Eliminated dependence of Terrain_Manipulator & EarthManipulator classes
upon osgProducer::Viewer.

*.  Globally eliminated direct dependence of all main programs on
osgProducer::Viewer.  

---------------------------------

*.  OBSFRUSTUM::backproject_pixels_into_2nd_imageplane() now writes
modified, annotated images to output PNG files.

============================================================================
ISDS3D code changes made on Thurs, Sep 20

*.  ISDS demos and standard pgms seem to work OK as of Thurs, Sep 20 at
8:45 am pm (pfiles9_20a.tgz) on ISDS3D laptop.

*. Eliminated Decorations class dependence on osgProducer::Viewer.

*.  Replaced 'make -j 2' in all build scripts to MAKE.  Create
~cho/bin/MAKE which contains 'make -j 2 $@' on ISDS3D, FUSION1 and PHOTON.
Set 2 to 4 on touchy.

*.  Eliminated AnimationPathCreator from all main programs.  WindowManager
now automatically instantiates an AnimationPathCreator which no longer
depends directly upon osgProducer::Viewer.

============================================================================
ISDS3D code changes made early am on Weds, Sep 19:

*.  Added mains/fusion/test3d.cc to repository.

*.  Extended set of ISDS programs & demos seems to work OK as of 7:15 am
Tues, Sep 19 on ISDS3D laptop (pfiles9_18c.tgz)

*.  Used Ed Broach's replace_perl script to globally rename
window_coord_converter as window_mgr.

*.  Globally renamed osg/Window[Viewer]CoordConverter class as
Window[Viewer]Manager.

........................

*.  Globally replaced viewer.addManipulator(CM_3D_ptr) with
window_mgr.set_CameraManipulator(CM_3D_ptr) in all main pgms.

*.  Streamlined instantiation of OSG producer Viewer and ViewerManager in
all main pgms listed in build scripts.  Moved redundant lines of code into
ViewerManager::initialize_window().

*.  ViewerManager::process[2]() consolidates sync, update and frame
commands executed in infinite event loop and facilitates migration to
OSG2.1x.

*. Corrected overlap ratio computation in
OBSFRUSTUM::backproject_pixels_into_second_imageplane()

============================================================================
ISDS3D code changes made on Mon, Sep 17 and early am on Tues, Sep 18:

*.  In Terrain_Manipulator::ViewFrustum_relative_to_Grid(), we now check
whether any Grid corner's 2D scrn coords lie in visible region -0.95 <
X_scrn, Y_scrn < 0.95.

*.  Restrict rotations within Terrain_Manipulator so that terrain always
remains visible.

*.  Restrict max outward zoom to 10 times max grid extent.


============================================================================
ISDS3D code changes made on Sun, Sept 16, early am on Mon, Sep 17:

*.  Changed sgn of alpha & beta magnification factors from positive to
negative in camera::compute_internal_params().

*.  Updated OBSFRUSTA classes so that they match more recently modified
ObsFrusta classes' functionality.  Embedded 2D photos can now be seen again
in main pgm TESTCITIES now works like VIEWCITIES.

*.  Initialize member var rho = 1 in camera class.

*.  ISDS demos and standard pgms seem to work OK as of Sun, Sep 16 at 10:30
pm (pfiles9_16d.tgz) on ISDS3D laptop.

*.  In Terrain_Manipulator, force tilt rotation to lie within reasonable
range [5 degs, 90 degs].  Also restrict zooming so that virtual camera
height above grid lies within range [5 meters, 20 kms].  Added Grid_ptr as
member var to Terrain_Manip class.

*.  Renamed public Grid::set_axes_dims() as protected
initialize_axes_char_sizes().

*.  Method Terrain_Manipulator::ViewFrustum_relative_to_Grid() returns
false if grid cannot be seen by current ViewFrustum.  Undo translations and
zoom operations which cause this bool method to return false.  Prevents
inexperienced users from completely losing terrain data within our ladar
viewer.

============================================================================
ISDS3D code changes made on Thurs, Sep 13 early am

*.  Modified EarthManipulator and Custom2DManipulator so that they conform
with Google Earth mouse button conventions.

*.  ISDS demos and standard pgms seem to work OK as of Thurs, Sep 13 at
7:18 am (pfiles9_13b.tgz) on ISDS3D laptop.

..........................

*.  Fixed SignPost label retrieval in
SignPostsGroup::issue_invocation_message().

..........................

*.  Wrote ObsFrustaGroup::flyto_camera_location(int ID) to take place of
same code within ObsFrustaKeyHandler class.

*.  Double clicking on ObsFrustum now automatically causes virtual camera
to fly to its real camera location.  

============================================================================
ISDS3D code changes made on Weds, Sep 12 early am

*. In PickHandler::initialize_member_objects(), set
 min_doubleclick_time_spread=0.05 & max_doubleclick_time_spread=0.25.

*.  In PickHandler::push(), doubleclick events are now detected and handled
without left shift key having to be pressed down.  Added doubleclick() to
CylinderPickHandler, ObsFrustumPickHandler and OBSFRUSTUMPickHandler.  Can
select these objects without having to hold left shift key down.

*.  As of Weds, Sep 12 early am, there is something seriously wrong with
movie window placement within OBSFRUSTA.  They appear upside down and are
too large to fit inside the OBSFRUSTUM!  We'll come back and fix this
problem later...

*. Wrote new filter/piecewise_linear class to store and filter piecewise
linear functions of 1 continuous variable.

*.  Wrote main program utility/SMOOTHPATH.cc which performs gaussian
convolution of piecewise linear animation paths.  Angles are restricted to
lie within +/- 180 of their immediate predecessors which eliminates wild
spins in the middle of interpolated animations.  Genuinely smooth and
pleasing animations can now be easily made with this program!

============================================================================
ISDS3D code changes made on Sun, Sep 9 & Tues, Sep 11 early am

*.  Added adjustable member vars min[max]_doubleclick_time_spread to
PickHandler class.  For reasons we don't understand, time interval between
doubleclicks in BASEMENT is 10X longer than in VIEWCITIES.  So we reset
time spread params in BASEMENT.

*.  Extended set of ISDS programs & demos seems to work OK as of 7:30 am 
Sun, Sep 9 on ISDS3D laptop (pfiles9_9b.tgz)

*.  Added bbox and bbox_stateplane STL vector members and
push[pop]back_gis_bbox() methods to postgis_database class.

* In SignPostsGroup::retrieve_signposts_from_PostGIS_database(), we no
longer instantiate SignPosts which lie outside PostGIS database's bounding
box.

*. Modifed our version of Ross' LODTREE program so that metadata is now
written to geometries' FogCoordArrays rather than their
SecondaryColorArrays.

*.  scenegraphfunc::saved_fixed_colors() instantiates a new
SecondaryColorArray for input *curr_Geometry_ptr if it does not already
have one.  Geometry's ColorArray is then copied into its new
SecondaryColorArray.

*.  Added mutable_to_fixed_color_flag and fixed_to_mutable_color_flag
members to ColorGeodeVisitor class.  

*.  Generalized ColorGeodeVisitor::apply() so that two-way conversion of
fused height/EO colors <---> grey colormap colors can now be performed for
NYC viewing purposes.

*.  PointCloudsGroup::reload_all_colors() loops over all PointClouds and
reloads their colormap arrays.  This method needs to be called when we
toggle between fused EO & grey colormaps.

*.  ISDS demos and standard pgms seem to work OK as of Tues, Sep 11 at
11:45 am (pfiles9_11e.tgz) on ISDS3D laptop.

============================================================================
ISDS3D code changes made on Tues, Sep 4:

*.  Generated math/lttwovector.h from math/ltthreevector.h 

*.  Generalized program mains/china/RELROT to handle partially overlapping
set of input features from two still photos.  RELROT can now also iterate
over fu, fv, U0, V0 and find best set of internal camera parameters given
set of 2D tiepoint correspondences.

*.  Added Uaxis_focal_length, Vaxis_focal_length, U0 and V0 parameter
members to PassInfo class.

*.  ISDS demos and standard pgms seem to work OK as of Tues, Sep 4 at 6:15
pm (pfiles9_4k.tgz) on ISDS3D laptop.


============================================================================
ISDS3D code changes made late on Thurs, Aug 30:

*.  Placed checks in VIEWCITIES on size of GISlayer_IDs.size().  No longer
need to pass GISlayer as arguments into VIEWCITIES.

*.  Added NYC individual landmarks table to isds_gis database on ISDS3D
laptop.  Generalized NYROADS so that it can read in both streets lines and
landmarks points from two separate tables in isds_gis database.  Modified
nyc_streets.pkg to hold info for both tables.

============================================================================
ISDS3D code changes made late on Weds, Aug 29:

*.  Created new package files empire4_crop.pkg and
rockefeller_east_crop.pkg

*.  polyhedron::generate_box_with_rectangular_faces() does not call
deprectated GNU triagulated surface methods.

*.  Wrote specialized programs mains/newyork/NYCITY.cc and NYCVID.cc which
are variants of VIEWCITY and VIDEO developed for powerpoint chart
generation purposes.  These 2 programs propagate skyscraper location info
from one of our Mar 07 RCA photos into a tourist photo shot from Empire
State building.

============================================================================
ISDS3D code changes made late on Mon, Aug 27:

*.  Eliminated unused AnimationController::get_curr_framenumber_ptr().

*.  Eliminated unused _writeNodeFileName member var of MyViewerEventHandler
class.

============================================================================
ISDS3D code changes made on Mon, Aug 27:

*.  Eliminated unnecessary passing of pass_ptr argument to first
Model/MODEL constructor.

*.  OBSFRUSTUM::compute_pyramid_sidelength() returns side length
corresponding to specified movie_downrange_distance.  Can now
initialize_frustum_with_movie specifying only movie_downrange_distance.

*.  Added Movie::generate_new_Movie(passes_group,alpha,ID) and eliminated
counterpart method which called get_pass_ptr().  Eliminated
MoviesGroup::update_moviepass_info(Movie*).  MoviesGroup no longer depends
on pass_ptr.

*.  Eliminated number_of_images, curr_imagenumber_ptr &
cumulative_imagecounter_ptr member vars of Pass class and their associated
member functions.

*.  Eliminated get_nframes_ptr() and get_cumulative_framecounter_ptr()
methods from AnimationController class.

*.  Eliminated setWriteNodefileName() and getWriteNodeFileName() methods
from MyViewerEventHandler class.  Made stop_recording_movie() public.
Turned snapped_image_counter into global variable within
MyViewerEventHandler.cc.  

*.  ISDS demos and standard pgms seem to work OK as of Mon, Aug 27 at 1:10
pm (pfiles8_27i.tgz) and 6:50 pm (pfiles8_27m.tgz) on ISDS3D laptop.

============================================================================
ISDS3D code changes made late on Sat, Aug 25, Sun, Aug 26 and early Mon,
Aug 27:

*.  In PickHandler::handle() PUSH case, record t_prev_click AFTER
potentially expensive point picking is performed.  Bracket valid
doubleclick time interval between 0.001 and 0.1 secs.

*.  In Terrain_Manipulator::rotate(), we forbid the user from tilting the
terrain map so that world Z_hat projects along -Yscreen_hat to avoid
counter-intuitve azimuthal rotations.

*.  Wrote camera::get_avg_UV_corner_world_ray() method.

*.  Fixed OBSFRUSTUM::set_relative_Movie_window() so that it correctly
positions Movie window at movie_downrange_distance relative to camera's
position.

*.  Wrote OBSFRUSTUMPickHandler::select_OBSFRUSTUM(double U,double V) which
compares current mouse screen posn with rectangular bbox for photo
appearing with grid plane.

*.  Wrote OBSFRUSTAGroup::reset_zface_color which sets the color of the
z-plane border around the currently selected photo to red.  All other
photos' borders are colored blue.  

*.  Wrote OBSFRUSTAGroup::compute_tabular_rows_and_columns which returns
integers nrows & ncolumnsq for a table which can reasonably display
n_photos 2D pictures.

*.  Started writing mains/exif/PHOTOS2D.cc for viewing & manipulating
multiple 2D photos.

*.  All add_GraphicalsGroup() members of Decorations class now return
GraphicalsGroup ptrs.

*.  FeaturePickHandler & PointPickHandler constructors now take in
grid_origin_ptr argument.

*.  Wrote new geometry/bounding_box container class.  Save current Z-plane
bboxes for multiple 2D photos within
OBSFRUSTAGROUP::compute_zplane_UV_bboxes().

*.  Cleaned up reset_colors() methods in FeaturesGroup, PointsGroup and
RectanglesGroup classes.  Also made all these methods virtual.

*.  OBSFRUSTAGROUP::convert_screenspace_to_photo_coords() determines
whether some feature lies inside any photo zplane bbox.  If so, it returns
OBSFRUSTUM's ID & feature coords relative to the photo's UV axes.
OBSFRUSTAGROUP::convert_photo_to_screenspace_coords() performs inverse
operation.

============================================================================
ISDS3D code changes made on Sat, Aug 25:

*.  Added 3 overloaded versions of destroy_PolyLine() within PolyLinesGroup
which unload a PolyLine's PointsGroup from the scenegraph before destroying
the PolyLine.  We must call destroy_PolyLine rather than destroy_Graphical
for PolyLines in order to correctly decrement PointsGroup ref counters.  So
changed destroy_Graphical() call to destroy_PolyLine() within
PolyLineKeyHandler class.  PolyLine picking and deleting seems to work OK
in program BASEMENT.

*.  Eliminated ugly setnodemask(0) hack within
GraphicalsGroup::destroy_Graphical().  As Ross predicted, this hack is
unnecessary and only hid the underlying problem with PolyLine PointsGroup.
Programs SCENEGRAPH and EARTHSCENE now function correctly.

*.  Extended set of ISDS programs & demos seems to work OK as of 6:45 pm
Sat, Aug 25 on ISDS3D laptop (pfiles8_25d.tgz)

============================================================================
ISDS3D code changes made on Fri, Aug 24, early am:

*.  Moved Producer viewer methods set_viewer_horiz_vert_fovs() and
match_viewer_fovs_to_viewfrustum() from osgfuncs.cc into
ViewerCoordConverter.

*.  Added Viewer2_ptr member and initialize_dual_windows() method to
ViewerCoordConverter class.

................

*.  Eliminiated initialize_dual_windows() method from osgfuncs namespace.
Also erased previously commented-out osgfunc::initialize_windows() method.

============================================================================
ISDS3D code changes made on Thurs, Aug 23:

*.  Added nyc_landmarks.pkg and nyc_rtv_EO.pkg to repository.

................

*.  Added unmutable_to_mutable_colors_flag member within ColorGeodeVisitor.
Pressing ',' in VIEWCITIES now sets this boolean var to true and recolors
fused-height-EO NYC_RTV data according to grey scale colormap.

*.  Added z_ColorMap_ptr and reset_frustum_colors_based_on_Zcolormap()
members to ObsFrustaGroup.  ObsFrusta appearing against grey scale point
clouds are now automatically colored non-white.

============================================================================
ISDS3D code changes made late on Tues, Aug 21 & early Weds, Aug 22:

*.  ISDS demos seem to work OK as of 11:30 am, Tues, Aug 21 on ISDS3D
laptop (pfiles8_21d.tgz)

*.  PolyLinePickHandler can now be used to easily draw polylines which
correctly change colors after their last vertex is indicated via a mouse
doubleclick.

*.  Added get_n_vertices() and get_n_edges() methods to polyline class.

*.  PolyLine::construct_polyline() now returns ptr to polyline_ptr member
of PolyLine class.

*.  ISDS demos and standard pgms (except for PHOTOS3D) seem to work OK as
of 2:15 pm, Weds, Aug 22 on ISDS3D laptop (pfiles8_22h.tgz)

============================================================================
ISDS3D code changes made late on Tues, Aug 21 & early Weds, Aug 22:

*.  Wrote ViewFrustum::get_ray(fu,fv) which returns camera ray's direction
vector corresponding to some input normalized (U,V) image plane
coordinates.

*.  Rewrote Terrain_Manipulator::translate() which implements fast,
reasonable approximation to Google Earth's translation.  

============================================================================
ISDS3D code changes made late on Mon, Aug 20:

*.  Explicitly return true after calling
PolyLinesGroup->toggle_OSGgroup_nodemask() following 't' button push.

*.  Added text_color member to Geometrical class along with set/get
methods.

*.  Changed Custom2DManipulator zoom so that camera moves inward as mouse
moves downwards toward user's body.

*.  Standard set of ISDS programs & demos seems to work OK as of 5 pm
Mon, Aug 20 on ISDS3D laptop (pfiles8_20d.tgz)

============================================================================
ISDS3D code changes made late on Fri, Aug 17, Sat, Aug 18 and Sun, Aug 19:

*.  Decreased scroll magnification factor from 0.1 to 0.0045 

*.  Renamed CustomManipulator::getRotationFromPoints() as
getTrackballRotation().

*.  Globally renamed AlirtManipulator as Terrain_Manipulator.

*.  Renamed zoomBy(), TranslateModel() & rotateByPoints() members of all
Manipulator class as Zoom(), Translate() & Rotate().

*.  Completely rewrote Terrain_Manipulator::Rotate() to implement Ross'
recommendation that the virtual camera exhibit zero roll relative to ground
z-plane.

*.  Renamee px,py variables as normalized fraction variables fx,fy in
Custom3DManipulator & Terrain_Manipulator classes.

*.  Added methods to ViewerCoordConverter which retrieve a Producer
window's current width and height measured in pixels.

============================================================================
ISDS3D code changes made on Fri, Aug 17, early am:

*.  Eliminated unused SceneView_refptr member of PickHandler

*.  Added dummy [implemented] parse_scroll_events() to CustomManipulator
[Custom3DManipulator] classes.  Interpret scroll_up [down] as zoom outward
[inward].  Should hopefully enable zooming via two-handed DiamondTouch
gestures.

============================================================================
ISDS3D code changes made on Tues Aug 14, Weds Aug 15 & early am on Thurs
Aug 16:

*.  Renamed worldmodel as SKS_worldmodel within all SignPost classes.

*.  Added GIS_layer as a new Pass type.  Search for --GIS_layer when
parsing input arguments.

*.  Added PostGIS_hostname, PostGIS_database_name, PostGIS_username mebers
to PassInfo class.  Also added STL vectors gispoints_tablenames,
gislines_tablenames and gispolys_tablenames members.  Parse .pkg files for
all these input parameters.

*.  Created new package files boston_GIS.pkg, baghdad_GIS.pkg,
world_GIS.pkg, SKS_GIS.pkg and nyc_streets.pkg holding PostGIS information.

*.  Globally renamed babygis as PostGIS.

*.  Earth::retrieve_borders_from_PostGIS_database() now takes input string
argument for table name holding country border info rather than having it
hardwired in.  Pass table name via world_GIS.pkg.

*.  Added MAIN_EXIF_DIR to makefile.

*.  Explicitly check within OBSFRUSTUM whether member ptr Movie_ptr is NULL
before attempting to reset its camera values.

*.  Extended set of ISDS programs & demos seems to work OK as of 8:25 am
Thurs, Aug 16 on ISDS3D laptop (pfiles8_16e.tgz)

============================================================================
ISDS3D code changes made on Mon, Aug 13:

*.  Explicitly reset camera Uhat & Vhat direction vectors within
OBSFRUSTUM::absolute_position_and_orientation().

*.  Reworked OBSFRUSTUMPickHandler::select_OBSFRUSTUM() so that picking via
a mouse click must occur inside the OBSFRUSTUM's sides projected down into
the screen's 2D image plane.

============================================================================
ISDS3D code changes made on Sun, Aug 12 & early am on Mon, Aug 13:

*.  Overloaded templatefunc::Quicksort() so that it can take up to 9
arguments

*.  Camera::heck_projection_matrix now sorts and displays XYZ-UV results
according to d_chisq.

*.  Extensively reworked mains/baghdad/drape_EO so that it could fuse NYC
satellite EO & NYC RTV data.  Produced reasonable fused 2D/3D map for all
of NYC!

*.  Moved update_viewfrustum() out of AlirtManipulator into
Custom3DManipulator.

*.  Eliminated n_upward_rays member of pyramid class, and added get_ray(int
n) method.

*.  Standard set of ISDS programs & demos seems to work OK as of 11:20 am
Mon, Aug 13 on ISDS3D laptop (pfiles8_13d.tgz)


============================================================================
ISDS3D code changes made on Fri, Aug 10, Sat Aug 11:

*.  Added mains/isds/demo_new.txt to repository

*.  Standard set of ISDS programs & demos seems to work OK as of 6:45 am
Sat, Aug 11 on ISDS3D laptop (pfiles8_11b.tgz)

*.  Renamed PassesGroup::get_videotexture_pass_ID() as get_videopass_ID()

...................

*.  Added --surface_texture flags within demo_new.txt and isds3d_update.txt
script files.

*.  Standard set of ISDS programs & demos seems to work OK as of 5:30 am
Fri, Aug 10 on ISDS3D laptop (pfiles8_10a.tgz)

*.  Changed copley.vid and copley_north.vid to copley.jpg and
copley_north.jpg within collate_still_imagery_info() member of
ObsFrustaGroup and OBSFRUSTAGROUP classes.

============================================================================
ISDS3D code changes made on Tues Aug 7:

*.  Standard set of ISDS programs & demos seems to work OK as of 6 am Tues,
Aug 7 on ISDS3D laptop (pfiles8_6a.tgz)

============================================================================
ISDS3D code changes made on Sat, Aug 4 & Sun, Aug 5:

*. Wrote quick & dirty stringfunc::remove_trailing_whitespace() method.

*.  Added focal_plane_array_size twovector member to photograph class.

*.  Added explicit movie_filename argument to
OBSFRUSTUM::generate_new_OBSFRUSTUM(az_extent,el_extent,movie_filename,ID)
method.  Added movie_filename argument to instantiate_OBSFRUSTUM() and
generate_predator_OBSFRUSTUM() in MODELSGROUP class.

============================================================================
ISDS3D code changes made on Weds, Aug 1

*.  Standard set of ISDS demos seems to work OK as of 8:30 am on Weds, Aug
1 on ISDS3D laptop (pfiles8_1b.tgz)

.................................

*.  Standard set of ISDS programs & demos seems to work OK as of 10 am
Tues, July 31 on ISDS3D laptop (pfiles7_31e.tgz)

*.  Deleted erroneous
Ellipsoid_model::angle_from_magnetic_to_geometric_north() method.

*.  Added decimal_year member to Clock class.

============================================================================
ISDS3D code changes made on Tues, July 31:

*.  Starting to convert geomag.c into geomag.cc within mains/testdir.

*.  Starting to write new astro_geo/geomagnet class.

============================================================================
ISDS3D code changes made on Mon, July 30:

*.  Added mains/nti/truth_testing/May2007/tracklives.cc, percentages and
reasons.cc to repository.

============================================================================
ISDS3D code changes made on Sat, July 28 & Sun, July 29 & early am on Mon,
July 30:

*.  Eliminated get_ModeController_ptr()->set_prev_State() calls from
CenterPickHandler class.

*.  Added jpg, tif and rgb as InputFileTypes to pass class.

*.  Cut down text and axis char sizes for small EarthRegions within 
LatLongGrid::set_text_character_sizes().

*. In EarthRegionsGroup::generate_regions(), offset LatLongGrid in altitude
from TextureSector center's altitude by an amount which depends upon the
RMS angular size of the LatLongGrid.

*.  Enabled alpha blending within TextureSector class.  Might be useful for
merging ground Ricoh photos with Google Earth image.

*.  Added TextureSector_ptr member to EarthRegion class with setter/getter
methods.

*.  Wrote OBSFRUSTUM method to erase camera model.  OBSFRUSTUM now takes in
new MODELSGROUP class rather than old ModelsGroup to hold camera model
info.

*.  Renamed graphical::set_coords_erased() and get_coords_erased as
set_mask() and get_mask().  Also fixed ordering of time and passnumber
arguments for these set/get methods.

*.  Standard set of ISDS programs & demos seems to work OK as of 9:30 am
Sun, July 29 on ISDS3D laptop (pfiles7_29d.tgz).

*.  Added magnetic_yaw member to PassInfo class.  Wrote geofunc::
approx_magnetic_north_pole_geolocation() and
Ellipsoid_model::angle_from_magnetic_to_geometric_north() methods.

*.  Added mypolynomial(int polyorder,vector<double>& coeff)
constructor.

*.  Added rotate_about_current_eyepoint_posn_flag member to
AlirtManipulator class.  Set flag to true after flying to OBSFRUSTUM
vertex.  Set to false when zooming away in +'ve z direction.

*.  Store TextureSector corner posns relative to their average location to
avoid floating point jitter.

*.  Renamed mains/exif/viewphotos.cc as photo_metadata.cc.  Added
mains/exif/photos3d.cc to repository.  PHOTOS3D is starting to display
Ricoh pics on top of latlong grid with Google underlay!

*.  Added mains/nti/truth_testing to repository.

============================================================================
ISDS3D code changes made on Thurs, July 26:

*.  Added designer example in Qt/chapter2/designer_gotocell to repository.

*.  Added Qt_course/Thursday contents to repository.

============================================================================
ISDS3D code changes made on Weds, July 25:

*.  Started to make necessary changes to MODEL & OBSFRUSTA classes so that
main progrma TESTTEXTURE crudely animates LiMIT's FOV OBSFRUSTUM.

*.  Added Qt_course/Wednesday/*.cc and *.h files to repository.

============================================================================
ISDS3D code changes made on Tues, July 24 early am:

*.  Standard set of ISDS programs & demos seems to work OK as of 6:50 am
Tues, July 24 on ISDS3D laptop (pfiles7_24a.tgz)

*.  Main program TESTCITIES based upon new OBSFRUSTAGROUP works OK (except
for frusta intersection).  TEST3D variant of VIDEO3D works OK (except for
pyramid volume coloring).

*.  In OBSFRUSTAGROUP::generate_HAFB_movie_OBSFRUSTUM, we no longer call
build_canonical_pyramid for ViewingPyramid.  Instead, just call
build_current_pyramid as for ViewingPyramidAboveZplane.

*.  Added osg::TriangleMesh and update_triangle_mesh() members to
Polyhedron class.  Still need to implement time-dependent storage and
retrieval of triangle mesh information for Pyramid objects.

*.  Added mains/Qt/Qt_course/examples and course_material to repository.

============================================================================
ISDS3D code changes made on Sat, July 21, Sun July 22 and morning of Mon,
July 23:

*.  Standard set of ISDS programs & demos seems to work OK as of Sat
morning, July 21 on ISDS3D laptop.

*.  Eliminated unused member function pyramid::identify_upward_sides()

*.  Wrote pyramid::generate_canonical_square_pyramid() and
generate_scaled_rotated_translated_square_pyramid() methods.

*.  Wrote fourvector mathfunc::quaternion_corresponding_to_rotation()

*.  Wrote Graphical::set_quaternion(curr_t,passnumber,u_hat,v_hat)

*.  Created PyramidPickHandler class.  Added INSERT/MANIPULATE PYRAMID
modes.

*.  Program mains/fusion/TEST3D.cc implements VIDEO3D's functionality but
using new OBSFRUSTA rather than old ObsFrusta objects.

*.  Standard set of ISDS programs & demos seems to work OK as of Sun
afternoon, July 22 on ISDS3D laptop.

*.  Wrote OBSFRUSTUM::instantiate_OSG_Pyramids() and
generate_Pyramid_geodes().  The former should be called before any viewing
pyramid computations are performed, while the latter must be called after
all such computations are finished.

*.  Wrote Polyhedron::get_or_create_LineSegment_ptr() to handle a priori
unknown number of edges within ViewingPyramidAboveZplane.

*.  Main programs VIEWPYRAMIDS, TESTPYRAMIDS, NEW_FOV work OK.

*.  Added ViewingPyramid_ptr and ViewingPyramidAboveZplane_ptr members to
OBSFRUSTUM class.

*.  Added mains/Qt/Qt_course with Mon, Tues, Weds... subdirs to repository.

*.  Accidentally deleted all .tgz files within projfiles/2007/July !!!

.........................................................................

ISDS3D code changes made on Weds, July 18, 7:15 am:

*.  Standard set of ISDS programs & demos seems to work OK as of 7:15 am,
Weds, July 18 on ISDS3D laptop.

*.  Added mains/isds/isds3d_update.txt to repository.  Added
mains/isds/google_ERSA.README to repository.

============================================================================
ISDS3D code changes made on Tues, July 17, early am:

*.  Standard set of ISDS demos seems to work OK as of 7 am, Tues July 17
on ISDS3D laptop.

============================================================================
ISDS3D code changes made on Sat, July 14 & Sun, July 15:

*.  Can now triangulate base of frustum which intersects z=Z plane.

*.  Starting to perform basic sanity checks within
pyramid::form_zplane_face().

*.  Corrected typo in geometry_func::rotate().

*.  Intersection of square pyramid with Z-plane looks like it finally
works!  Can recover part of pyramid above Z-plane as well as the z-plane
face.

.........................

Not yet checked in

*.  Standard set of ISDS programs & demos seems to work OK as of 1 pm, Sun
July 15 on ISDS3D laptop.

============================================================================
ISDS3D code changes made on Fri, July 13:

*.  Standard set of ISDS programs seems to work OK as of 8 am, Fri July 13
on ISDS3D laptop.

*.  Wrote new face::triangulate() method which returns a triangle fan with
the greatest number of triangle constituents.

============================================================================
ISDS3D code changes made on Weds, July 11 & Thurs, July 12:

*.  3 demo programs seems to work OK as of 7 am, Weds July 11 on ISDS3D
laptop.

*.  Wrote bool edge::nearly_equal_posn();

*.  Starting to write face member funcs to recursively extract outer
triangles.  Wrote mains/testdir/facetest.cc to experiment with recursive
outer triangle extraction.

============================================================================
ISDS3D code changes made on Tues, July 10:

*.  Call relabel_IDs_for_all_face_edges_and_vertices() within
polyhedron::geenerate_GNU_triangulated_surface().

*.  Standard set of ISDS programs seems to work OK as of 6 am, Tues Jul 10
on ISDS3D laptop.

*.  Can form new set of labeled vertices and edges for above Z-plane faces
extracted from canonical pyramid.

*.  Wrote pyramid::form_zplane_face() which builds a new Z=z plane face
from Z=z vertices and edges.

*.  Starting to write face::triangulate_convex_face() which returns an STL
vector of triangular faces.

============================================================================
ISDS3D code changes made on Sat, July 7 & Sun July 8:

*.  Eliminated GridsGroup::generate_new_Grid() in favor of
GridsGroup::initialize_new_Grid()

*.  Renamed GraphicalsGroup::instantiate_Graphical() as
initialize_Graphical()

*.  Standard set of ISDS programs seems to work OK as of 7 pm, Sat July 7
on ISDS3D laptop.

*.  Can now force polyhedron/pyramid faces to all assume a particular
handedness.

*.  Wrote brute force find_vertex[edge]_given_posn methods in polyhedron
class.  Started to write brute force method
polyhedron::relabel_vertices_for_edges_and_faces().

*.  face::swap_vertex_order() now explicitly reverses the ordering of
member STL vectors vertex_chain, edges, & edge_chain.  It also swaps V1 and
V2 for each edge in edge_chain and flips the normal and handedness members
of the face class.

.....................................

*.  Explicitly recompute COM and normal when face is translated, scaled or
rotated.

*.  Added area and edge_chain STL vector member to face class.

*.  Added handedness type and member var to face class.

*.  Overhauled GridsGroup::generate_new_Grid() method.  It no longer
executes a set_UVW() call.  Instead, new method Grid::set_world_middle()
sets grid's UVW = world_middle.  Placement of pyramid relative to grid now
makes sense within program VIEWPYRAMIDS.

============================================================================
ISDS3D code changes made on Fri, July 6:

*.  Wrote mathfunc::my_isnan() for Mac OS X portability purposes.

*.  In ObsFrustaGroup::display_intersection_footprint(), hardwire in
footprint's absolute position.  We then empirically found we must reset the
footprint's origin to Zero_vector.  Don't understand why this last step is
necessary in order to see red footprint when we press 'd' in MANIPULATE
FUSED DATA mode.

..............................

*.  Experienced near catastrophe when we accidentally issued a rm *.* type
command!  Spent entire morning trying to recover from this horrible
mistake...

*.  Standard set of ISDS programs seems to work OK as of 12:15 pm, July 6 on
ISDS3D laptop after catastrophic accidental deletion of projects subdir.

============================================================================
ISDS3D code changes made on Thurs, July 5 & Friday am:

*.  Added translate() and rotate() methods into geometry_funcs namespace
for general threevectors.

*.  Added COM member to face class.

*.  Generalized trivial triangle methods in geometry_funcs namespace to
take threevector rather than twovector inputs.

*.  Discovered the painful way that Polyhedron class must dynamically
instantiate a copy of a polyhedron that is passed into it rather than just
hang onto the polyhedron's pointer.  Otherwise, intersection_P polyhedron
which comes in and out of scope within
PolyhedraGroup::compute_intersection() leaves a dangling pointer which
causes demo version of VIEWCITIES to crash!

*.  Standard set of ISDS programs seems to work OK as of 9 am, July 6 on
ISDS3D laptop after undoing polyhedron change within Polyhedron class.

============================================================================
ISDS3D code changes made on Weds, July 4 & Thurs, July 5 early am:

*.  Wrote face constructor which can take in an STL vector of threevectors.

*.  face::swap_vertex_order() now works for any number of face vertices.

*.  Started to create subclass geometry/pyramid which inherits from
polyhedron.  Also wrote test program mains/testdir/pyramid.cc.  

*.  Created osgGeometry/Pyramid & PyramidsGroup classes.

*.  Wrote VIEWPYRAMIDS variant of VIEWPOLYHEDRA within mains/OSG subdir.
Can now color pyramid's side and base edges differently.  Can also rotate
pyramid so that it has 0 - 4 vertices under the ALIRTGRID.

*.  Added translation, scaling and rotation methods to vertex, edge, face &
pyramid classes.

*.  face::part_above_Zplane() is starting to work.

============================================================================
ISDS3D code changes made on Tues, July 3:

*.  Wrote face constructor which takes in 3 threevectors.

*.  Started writing face::intersection_with_Zplane() which returns
vector<face>.

*.  Added face::swap_vertex_order() method.

============================================================================
ISDS3D code changes made on Mon, July 2:

*.  Standard set of ISDS programs seems to work OK as of 1 pm, Jul 2
on ISDS3D laptop after elimination of myvector class.

============================================================================
ISDS3D code changes made on Sat, June 30, Sun, July 1 & Mon July 2 early am:

*.  In Pass::get_first_filename(), explicitly check whether
filenames.size()==0.  If not, return "".

*.  Standard set of ISDS programs seems to work OK as of 6:45 pm, Jun 30 on
ISDS3D laptop.

*.  Globally eliminated all confusing references to
Geometrical::[permanent]_color_index.  Geometrical now only stores color
information within  osg::Vec4s.

*.  In OBSFRUSTUM::build_current_frustum(), build polyhedron in relative
rather than absolute coord systems.

*. Can now color both polyhedra edges and volumes via
Polyhedron::set_color(edge_color,volume_color)

*.  Made serious effort to use GTS library to compute intersection between
above-ground box and canonical square pyramid.  In particular, renormalized
both polyhedra so that their coordinates' values are O(1).  Yet GTS methods
continue to yield garbage results for Copley ObsFrustum.  So we must
abandon this approach.

*.  Created geometry/vertex, edge classes which replace & generalize
previous polyhedron typedefs.

============================================================================
ISDS3D code changes made on Fri, Jun 29:

*.  OBSFRUSTUM no longer inherits from Polyhedron.  Instead, it contains a
PolyhedraGroup.

============================================================================
ISDS3D code changes made on Thurs, Jun 28:

*.  Standard set of ISDS programs seems to work OK as of 7 am on ISDS3D
laptop.

*.  Starting to create new OBSFRUSTA classes which contain Polyhedra
classes.

*.  Now pass AnimationController ptr as argument to PolyhedraGroup class to
enable ObsFrusta movies.

*.  Minimal set of ISDS programs seems to work OK as of 5:45 pm on ISDS3D
after massive changes to polygon class.

============================================================================
ISDS3D code changes made on Weds, June 27:

*.  Split off new PointFinder class from Transformer class.  Moved
Transformer from osg/osgGraphicals into osg.  Left PointFinder within
osg/osgGrapihcals for now.  

*.  Instantiate PointFinder rather than Transformer within main programs.
Transformer is now allocated wtihin Custom3DManipulator.

*.  postgres::execute_SQL_commands() now returns bool indicating whether
execution was succesfully completed.

*.  MoviesGroup::generate_new_movie() now explicitly checks whether video
corresponding to input filename actually exists.
ObsFrustaGroup::generate_still_image_ObsFrustum() returns NULL if movie
filename is bad.

*.  PointCloudsGroup::generate_new_Cloud() now explicitly checks whether
cloud corresponding to input filename actually exists.

*.  Standard set of programs seems to work OK as of 1:20 pm on ISDS3D
laptop.

============================================================================
ISDS3D code changes made on Mon, Jun 25:

*.  Added set_OSGgroup_nodemask() and toggle_OSGgroup_nodemask() to
GraphicalsGroup class.

*.  Updated newyork/nyroads.cc.  Roadways & 2 Rockefeller ObsFrusta are
initially toggled off.

*.  ObsFrustaGroup::generate_still_imagery_frusta() now takes bool
multicolor_frusta_flag argument.  ObsFrusta no longer are exclusively white.

============================================================================
ISDS3D code changes made on Sat, June 23, Sun Jun 24 and Mon early am Jun 25:

*.  Standard set of test programs seems to work OK as of 10:30 am on Sat,
June 23.  Demo programs seem OK.

*.  In polyhedron::set_face(), cyclically permute edge indices such that
minimal one starts vector<int> which defines a face.  Right-handed rule is
preserved by this canonical ordering of indices.

*.  Changed some baroque while loops within Network.cc into for loops.

*.  Added face_network as member of polyhedron class.  Keep track of
adjacent face neighbors within this network.

*.  Developed edge_type and face_type within polyhedron class.

*.  Wrote polyhedron::identify_internal_edges() which marks triangular face
edges which do NOT correspond to polyhedra borders.
osgGeometry::Polyhedron draw methods now only display external border edges
and not internal triangular edges.

*.  Standard set of test programs seems to work OK as of 5:30 am on Mon,
June 25.  Demo programs seem OK.

*.  Added SurfaceTransform_ptr & GridSurfaceTransform_ptr as members of
EarthRegion class.  Also added get methods for these ptrs.

============================================================================
ISDS3D code changes made on Weds, June 20:

*.  Expt with altering order of view frustum rays so that their 0,1,2,3
ordering maps onto top right, top left, bottom left, bottom right.  Earth
programs seems OK after this change.

*.  Started to add general methods for systematically computing aerial and
footprint corners for ObsFrusta within ObsFrustum class.  Needs much more
work...

============================================================================
ISDS3D code changes made on Tues, Jun 19:

*.  Changed every 'make' to 'make -j 2' within all build scripts.

============================================================================
ISDS3D code changes made on Mon, Jun 18:

*.  Starting to generalize methods in PassesGroup so that 3x4 P matrices
can be passed as command line arguments.

============================================================================
ISDS3D code changes made on Sat, Jun 16 & Sun, Jun 17:

*.  Moved ObsFrusta classes out of osgAnnotators subdir into OsgModels.
Models and ObsFrusta depend upon each other.

*.  Renamed mains/OSG/fov.cc as virtual_camera.cc

*.  Massive changes made as a result of Transformer class no longer having
SceneView_ptr as member.  Instead, Transformer methods take CM_3D
SceneView_ptrs as arguments.  This should fix rotation/translation viewing
problem for global window within main program virtual_camera.

*.  Eliminated dependence of Decorations class upon Transformer class.

*.  Standard set of test programs seem to work OK as of 9:45 am on Sunday
after making massive Transformer class changes.

*.  Eliminated dependence of Decorations class upon SceneView ptr.

*.  Moved SceneView member and methods out of Custom3DManipulator class
into CustomManipulator base class.  Decoration picking within 2D video
program works OK after this change.

*.  Standard set of test programs seem to work OK as of 8 pm on Sunday
after making massive Transformer class changes.

============================================================================
ISDS3D code changes made on Thurs, Jun 14:

*.  Moved osg/osgSceneGraph/ViewFrustum.cc to osg/ViewFrustum.cc

*.  Added ViewFrustum member to Custom3DManipulator.  No longer explicitly
instantiate ViewFrustum object in main earth programs.

*.  Added virtual_camera_flag member to ObsFrustum class.  Continuously
update CM_3D_ptr->ViewFrustum if ObsFrustum corresponds to virtual camera.

*.  Starting to see virtual camera ObsFrustum for one window appearing
within a global second window within main programs OSG/fov.cc

============================================================================
ISDS3D code changes made on Fri, June 8:

*. Added Lowell RTV quadratic warp params into geocalibfuncs.

============================================================================
ISDS3D code changes made on Tues, June 5:

*.  Iterate over focal parameters within china/RELROT and develop
f-dependent score.  Resulting best fit parameters yield quite nice
composite Shanghai photo!

---------

*.  Standard set of test programs seems to work OK on ISDS3D laptop as of
11 am on June 5.

============================================================================
ISDS3D code changes made on Sat, June 2 & Sun, June 3 & Mon, June 4:

*.  Standard set of test programs seems to work OK as of 9:30 am on June 2.

*.  Graphical::translate() now performs relative translations while new
method Graphical::absolute_posn() performs absolute translations.

*. In ObsFrustaGroup::generate_movie_ObsFrustum(), we now insert Movie's
PAT as child of ObsFrustum's PAT rather than as child of ObsFrustaGroup
OSGsubPAT.  When we now translate (and hopefully rotate) ObsFrustum, Movie
is automatically transformed as well.

*.  In ObsFrustum::build_frustum_with_movie(), send relative posn = (0,0,0)
between camera, Movie and ObsFrustum as argument into
Movie::rotate_scale_trans_window() rather than camera's absolute world
position.  

*. Methods ObsFrustum::rotate_about_camera_posn() &
absolute_position_and_orientation() enable simple user control over
ObsFrustra in terms of az, el and roll.  Can finally manipulate ObsFrustra
with ease...

*.  Update projection matrix whenever ObsFrustum is translated or rotated.

*.  Privatized camera::compute_corner_ray_and_UV_axes_dirs().  Renamed
public camera::compute_projection_matrix() as private
fill_projection_matrix_entries().

*.  Started to generalize china/fov to display multiple ObsFrusta.

============================================================================
ISDS3D code changes made on Friday, June 1:

*.  Standard set of test programs seems to work OK as of 8 am on June 1.

============================================================================
ISDS3D code changes made on Thurs, May 31

*.  Privatized camera.decompose_projection_matrix().

============================================================================
ISDS3D code changes made on Tues, May 29:

*.  Added check in ObsFrustaGroup::display_intersection_footprint() that
intersection volume is actually defined before attempting to project onto
ground plane.

*.  Initialize AlirtManipulator_ptr member of PointCloudKeyHandler to NULL.
Check it's non-null value before calling
AlirtManipulator::adjust_horiz_vert_fovs().

*.  Moved ~cho/demo_mini.txt into src/mains/demo_script.txt and added to
repository.

*.  In Model::instantaneously_orient_and_position_GMTI_dwell_ObsFrustum(),
set max ObsFrustum slant range to 50 km which overrides default 10 km
value.

*. Standard set of test programs seem to work OK on ISDS3D laptop as of
10:20 am on Tues, May 29.

============================================================================
ISDS3D code changes made on Tues, May 8:

*.  Eliminated unnecessary passing of CM_3D_ptr to FusionGroup constructors
in a few main programs.

============================================================================
ISDS3D code changes made on Sun, May 6 and Mon, May 7:

*.  Standard ISDS test and demo programs seem to work OK as of 6 am on Sun
May 6.

*.  Added phi, theta and scale member vars to Cone class.

*.  Customized cone rotation control within overridden
ConePickHandler::rotate_Graphical().  

============================================================================
ISDS3D code changes made on Sat, Apr 28 & Sun, Apr 29:

*.  Hardwired 3x4 projection matrices for 2 photos taken from Rockefeller
center within ObsFrustaGroup::collate_still_imagery_info().

============================================================================
ISDS3D code changes made on Sat, Apr 28 & Sun, Apr 29:

*.  Restored SignPostsGroup::read_info_from_file() method.

*.  Added signposts to main fusion program.

* In ObsFrustum::build_current_frustum(), check whether distance lambda
between camera posn and frustum ground location is either negative or
exceeds maximum default 3 km value.

============================================================================
ISDS3D code changes made on Thurs, Apr 26

*.  Standard set of ISDS test programs seems to work OK as of 8:17 am on
Thurs, Apr 26.

============================================================================
ISDS3D code changes made on Sun, Apr 22 & Mon, Apr 23:

*.  VIEWCITIES and EARTH demo programs work OK as of Sun Apr 22 at 6:10 am.
Same programs seem to work OK as of Sun Apr 22 at 7:34 pm after making
major modifications to ColorMap handling.

*.  Overhauled ColorThresholds class which is now mis-named.
ColorThresholds now holds pointers to height and probability colormaps
which can differ for multiple point clouds.  Each point cloud contains its
own 'colorthresholds object, and pointers to these (multiple)
colorthreshold objects are stored within the scene graph.  Whenever a
ColorGeodeVisitor encounters the top of a point cloud subtree within the
scenegraph, it resets the current height and probability colormap pointers.
In this way, multiple colormaps with varying thresholds and cyclic fraction
offsets can be stored within a single scenegraph.

*.  Height colormap number for Baghdad no longer hardwired into PointCloud
class.  

*.  No longer set threshold values in
PointCloud::compute_points_thresholds().  Instead, these can now all be set
for separate cities within input package files.

*.  Initial independent coloring variable can now be set to 3 = prob via
--independent_var flag within .pkg files.

*.  Eliminated ColorMap references from all main programs.

============================================================================
ISDS3D code changes made on Tues, April 17:

*.  Added prob_Colormaps to VIEWCITIES and EARTH programs.

============================================================================
ISDS3D code changes made on Sat, Apr 14 & Sun, Apr 15 & Mon, Apr 16.

*.  Standard set of ISDS test programs seem to work OK as of 7 am on Sun
Apr 15.

*.  Generalized PointClouds to take different height and probability color
maps.  Changing from height to prob colormaps works with paging.  But
changing back from prob to height colormaps is messed up from paging
standpoint.  Empirically found greyscale colormap yields visually better
results than JET colormap for NYC Alirt p-map.

*. Fixed offset problem for p-data in tdpfunc::write_relative_xyzp_data().

*.  PointCloud::write_TDP_file() now takes HiresDataVisitor as argument.
This method (and PC class) no longer depend upon PointCloudsGroup class.

*.  Eliminated mains/newyork/xyz2tdp.cc in favor of xyzp2tdp.cc

*.  Added member var cyclic_frac_offset to ColorMap class.  Tuning this
parameter allows for shifts in colormap function of height.

*. In PointCloud::insert_fake_xyzp_points_for_dataviewer_coloring(), push
back zero values onto colors member of PointCloud class at same time as
fake data is push onto vertices and metadata members.  Sizes of all 3 array
members of PointCloud are then always equal.

*.  Wrote mains/newyork/fuse_points which combines z and p information
within the NYC point clouds by mapping the former onto hues and the latter
onto intensity & saturation.

============================================================================
ISDS3D code changes made on Fri, Apr 13:

*.  Updated manual TIN (triangular irregular network) generation routines
to work with ALIRT NYC data.

============================================================================
ISDS3D code changes made on Sun, Apr 8, Mon, Apr 9

*.  Added new mains/newyork subdir to repository.  Made minor modifications
to Ross' tile program within this subdir.  

*.  Added AlirtManipulator::adjust_horiz_vert_fovs() which allows user to
modify viewing camera's FOV.  Invoke this method by pressing 'f' within
VIEW DATA MODE.

============================================================================
ISDS3D code changes made on Tues, Mar 27:

*.  Started to write new kalman class in src/track subdir.

============================================================================
ISDS3D code changes made on Weds, Mar 21:

*.  Standard set of test programs seem to work OK as of early morning Mar
21 on ISDS3D laptop.  In particular, demo programs VIEWCITIES and EARTH
seem to work OK in advance of this Friday's DO review.

============================================================================
ISDS3D code changes made on Sat, Mar 10 & Sun, Mar 11:

*.  In AnimationPathCreator class, now use 'x' rather than 'W' to indicate
end of waypoint entry.  This change avoids clash with 'W' in ModeController
representing Insert/Manipulate Cylinder Mode.

*.  Added write_to_file_flag bool argument to
AlirtManipulator::generate_animation_path().  If true, animation path is
written to alirt_manip_flyby.path.

*. Wrote SignPost::set_max_text_width() which adjusts max text box width
based on input label's length.

*.  SignPostsGroup::retrieve_signposts_from_babygis_database() can now
place signposts onto blue marble.  But their altitudes all equal 0 rather
than the heights coming from the Baghdad surface.

============================================================================
ISDS3D code changes made on Tues, Mar 6:

*.  Changed 2nd Copley plaza image name from 'from_hancock' to 'panorama'

*.  Selected ObsFrusta ID set to 0 when first Copley ObsFrustum is
displayed by pressing 'c' once within MANIPULATED FUSED DATA mode.

============================================================================
ISDS3D code changes made on Sat, Mar 3, Sun, Mar 4 & morning on Mon, Mar 5:

*.  Wrote mains/testdir/intersect which uses the GTS library to return the
polyhedron intersection of 2 triangulated polyhedra.

*.  Moved generate_GNU_triangulated_surface() & compute_volume() methods
out of ObsFrustum class into polyhedron class.  Moved GTS member variables
from latter to former as well.

*.  Added nontrivial docopy() method to polyhedron class.

*.  Wrote new osgGeometry/Polyhedron & PolyhedraGroup classes.  Added
Polyhedra to Decorations class.

*.  Wrote mains/OSG/VIEWPOLYHEDRA which is a testing lab for manipulating
3D polyhedra within OSG.

*.  Standard set of test programs seem to work OK as of late afternoon of
Mar 4 on ISDS3D laptop.

*.  Can now draw translucent colored Polyhedra via OSG triangle meshes.

*.  Added threevector origin to geometry/polyhedron class which can be used
to position one polyhedron relative to another.

*.  No longer need to pass static image videos into VIEWCITIES as command
line params.

*.  Can now see overlap volume between our 2 Copley image ObsFrusta within
VIEWCITIES.

============================================================================
ISDS3D code changes made on Thurs, Mar 1:

*.  Eliminated Copley and Hancock specified methods in ObsFrustaGroup in
favor of the slightly less ugly new method
generate_still_imagery_ObsFrusta().  It can be extended in the future by
adding more 3x4 projection matrices derived from program FUSION.

*.  Eliminated specialized AlirtManipulator::flyto_Copley() and
flyto_hancock() methods.  Added generalized ObsFrustumKeyHandler code to
retrieve camera posn & rotation info for an ObsFrustum after it's picked
with the mouse.  OSG camera then flies to the selected camera's location
within Boston.

============================================================================
ISDS3D code changes made on Weds, Feb 28:

*.  Standard set of test programs seem to work OK as of early morning of
Feb 28 on ISDS3D laptop.

*.  ObsFrustum now instantiates a camera member object.

============================================================================
ISDS3D code changes made on Tues, Feb 27:

*. Program FUSION can now instantiate the 'hancock' ObsFrustum which looks
both upward and downward.

============================================================================
ISDS3D code changes made on Sat, Feb 24 & Sun, Feb 25:

*.  Eliminated 'f'/'b' keyboard event handling for forward/backward zooming
in Custom3DManipulator::parse_keyboard_events()

*.  Eliminated parse_keyboard_events() methods from Custom2[3]DManipulator
classes.  

*.  EarthManipulator & AlirtManipulator now both implement virtual
className() method which is used by CustomAnimationPathManipulator to
return from animation manipulator back to Custom3DManipulator at end of
animation path.

*.  Standard set of test programs seem to work OK as of morning of Feb 25
on ISDS3D laptop.

*.  MyViewerEventHandler constructor now takes CustomManipulator ptr as
input argument for animation path return purposes.

*.  Completely overhauled twirling, zooming and translating functions in
AlirtManipulator which now involve only matrices M,Minv and not stupid
_center and eye_to_center_distance members of CustomManipulator base
class.  

*.  AlirtManipulator can now fly camera from any initial to any final
position with specified orientations.  CustomAnimationPath exists from
animation path with CustomManipulator in correct posn/orientation for
subsequent manual manipulation.

*.  Generalized Decorations::set_SceneView_ptr() so that it can set
PickHandlers' datanode_ptr as well as SV_ptrs.  Someday this method should
be renamed to reflect this generalization.  Streamlined VIDEO after making
this modification.

*.  Fixed feature picking within FUSION.

*.  Started to embed 2nd Boston ground photo taken from hotel near Hancock
into 3D Boston world space.

============================================================================
ISDS3D code changes made on Fri, Feb 23:

*.  PassesGroup::get_pass_ptr(int ID) now returns NULL rather than exit(-1)
if ID does not correspond to any registered pass.
GraphicalsGroup::get_passnumber() returns -1 for undefined passes.

*.  Privatized GraphicalPickHandler::move_Graphical().  This method also
translates Graphicals' (long,lat) coords rather than their (x,y) coords if
GG::Ellipsoid_model_ptr != NULL.

*.  GraphicalsGroup::move_z() translates Graphicals' altitudes rather than
z coords if GG::Ellipsoid_model_ptr != NULL

*.  Wrote mathfunc::rotation_taking_pqr_to_uvw() which rotates one
orthonormal basis set into another.

============================================================================
ISDS3D code changes made on Weds, Feb 21:

*.  Standard set of test programs seem to work OK as of mid afternoon Feb
21 on ISDS3D laptop.

*.  Eliminated Earth::generate_datagraph_translation_MatrixTransform() in
favor of Earth::undo_datagraph_translation() and
datagraph_origin_long_lat_alt() which return threevectors rather than a
MatrixTransform.  

*.  Extensively overhauled matrix transform methods in EarthRegion and
EarthRegionsGroup classes to simplify placement of Graphicals onto blue
marble's surface given their positions within UTM space.

*.  Dwell hopping among various GMTI targets now works correctly in
VIEWTEXTURE and EARTH.

============================================================================
ISDS3D code changes made on Tues, Feb 20:

*.  Absolute geopositioning of predator and LiMIT racetracks onto blue
marble now works in program EARTH.

*.  Standard set of test programs seem to work OK as of early morning Feb
20 on ISDS3D laptop.

*.  Base angular separation between adjacent lines of longitude/latitude
upon distance from camera to screen center intercept with ellipsoid rather
than camera altitude.  

============================================================================
ISDS3D code changes made on Sun, Feb 18 & Mon, Feb 19:

*.  Moved texture_sectors() method out of EarthsGroup into Earth.

*.  Created osg/osgEarth/TextureSectorsGroup and TextureSector classes.
Moved texturing member functions of Earth class into TextureSector.

*.  Decorations.add_Models() now returns pointer to newly instantiated
ModelsGroup.

*.  Added surface_texture to PassTypes within Pass class.  Also added png
to InputFileType within Pass class.

*.  Wrote main program OSG/viewtexture which provides a playground for
working with San Clemente texture on a LatLongGrid with model aircraft
orbiting above in prescribed racetracks.

*.  Started to incorporate integrated ISDS demo parameters for LiMIT
platform within ModelsGroup::generate_predator_and_LiMIT_racetrack_orbits()
& generate_predator_and_LiMIT_ObsFrustra().  

*.  Added GeometricalsGroup::set_common_geometrical_size().  Explicitly
call this new method in SPASE_IMAGEPLANES in order for HAX sign to be
visible on blue marble's surface.

*.  Created new class geometry/ellipse.cc

*.  Wrote main program isds/LiMIT_orbit which fits an ellipse to a set of
(longitude,latitude) waypoints for the LiMIT model's racetrack orbit in the
integrated ISDS demo.  The 8 waypoints were provided by Peter Jones on
2/16/07.  Predator and LiMIT models are now assigned to separate
OSGsubgroups of ModelsGroup.

*.  Eliminated EarthRegionsGroup::compute_UTM_to_surface_transforms() in
favor of new method EarthRegion::place_cloud_and_latlonggrid_onto_surface()

*.  Wrote Earth::check_depth_buffering() which forces depth buffering to be
enabled if camera is not located very close to blue marble's surface.  This
method hopefully prevents lines of long/lat from peeking thru from globe's
backside.

============================================================================
ISDS3D code changes made on Fri, Feb 16:

*.  Reorganized src/web subdir.  Added new curl class.

============================================================================
ISDS3D code changes made on Weds, Feb 14:

*.  Added Transformer_ptr and grid_origin_ptr members to Decorations class.
Wrote new Decorations constructor which takes in these pointers.  No longer
explicitly pass these addresses to any Decorations 'add' methods such as
add_Signposts().

*.  Eliminated unnecessary get_SceneView_ptr() methods from Transformer and
Earth classes.

*.  Moved alpha-blending member vars and functions out of G99VideoDisplay
class into Movie.  In Movie::enable_alpha_blending(), added get_ndims()==3
check around state->setRenderingHint( osg::StateSet::TRANSPARENT_BIN ).
With this conditional, Boston library text still shines through Copley
image in VIEWCITIES.  But picked rectangles in VIDEO are now again
translucent.

*.  Moved several lines of code out of VIEWCITIES/EARTH programs into
ModelsGroup::generate_predator_and_LiMIT_Models() methods.

*.  Eliminated unused osg/examplevideos subdir and its contents.

*.  Introduced new PI_OVER_180 constant within math/constants.h.

*.  Wrote Earth::adjust_endpoint_altitudes() which ensures segments along
lines of longitude/latitude always lie fully above blue marble's surface.
So we no longer ever need to turn off depth buffering for lines of
longitude/latitude.

*.  Added pkg InputFileType to Pass class.

============================================================================
ISDS3D code changes made on Tuesday, Feb 13:

*. Added rectangular_movie_flag boolean member to ObsFrustum class which
generally equals true.  But for HAFB video projected onto world z-plane,
video geometry is trapezoidal rather than rectangular.

*.  Eliminated old, deprecated version of mains/fusion/VIDEO3D for newer
version which uses ObsFrustum with movie textured onto actual world
z-plane.

*.  Cleaned up Decorations class by consolidating several key and pick
handler commands within private methods.

============================================================================
ISDS3D code changes made on Monday, Feb 12:

*.  Added ModelsGroup_ptr->update_display() in EARTH to force Awacs &
predator models to appear before they start to run around their San
Clemente racetrack orbits.

============================================================================
ISDS3D code changes made on Sunday, Feb 11:

*.  Enlarged extents for longitude/latitude line drawing so that gaps in
their coverage on blue marble are not noticeable when EARTH window is
widened to fill entire ISDS3D laptop screen.

*.  Verified demo programs VIEWCITIES, EARTH and TESTEARTH work OK.

..........................................................

*.  Wrote LineSegment::recover_V1_and_V2() which reconstructs
osg::LineSegment endpoints corresponding to a particular time from stored
Graphical translation, rotation and scaling info.

*.  ObsFrustum now has a pointer to a potential Movie member.

*.  Deleted repetitious PAT_refptr->addChild(geode_refptr.get()) line from
 Movie::initialize_member_objects().

*.  ObsFrusta are now singly colored rather than having colored bases and
white pyramids.

============================================================================
ISDS3D code changes made on Weds, Feb 7:

*.  ColorGeodeVisitor now reads ColorMap information from ColorThresholds
object.  So can hardwire one colormap for Boston and another for Baghdad
for use in EARTH demo.  Have not yet implemented passing of colormap and
threshold choices via command line argument parameters.

*.  Explicitly give EarthManipulator node the name 'EarthManipulator'.  In
GraphicalPickHandler::pick_3D_point(), check if CustomManipulator's
name=='EarthManipulator'.  If so, do not allow user to pick point on
EarthGrid.

*.  GraphicalsGroup::rotate_zhat_to_rhat() reorients Graphical's symmetry
axis so that it aligns with current radial direction on blue marble.

*.  Overhauled ArmySymbol classes.  Can now place ArmySymbols within
Baghdad when it's on blue marble.

============================================================================
ISDS3D code changes made on Tuesday, Feb 6:

*.  Made minor stylistic changes for demo purposes (e.g. only display one
type of signposts since displaying two types is definitely buggy; display
signposts in white rather than pink)

*.  Followed Ross' suggestion to add state->setRenderingHint(
osg::StateSet::TRANSPARENT_BIN ) in 9VideoDisplay::enable_alpha_blending().
Text now shines through transparent Copley image.

============================================================================
ISDS3D code changes made on Sunday, Feb 4 and Monday, Feb 5:

*.  Eliminated LineSegmentsGroup* FOVsegments_ptr and MoviesGroup*
MoviesGroup_ptr members of FusionGroup in favor of ObsFrustaGroup*
ObsFrustraGroup_ptr.

*.  Added MoviesGroup_ptr member to ObsFrustaGroup class.

*.  Eliminated redundant pass_ptr argument from
MoviesGroup::generate_new_movie() member function.

*.  For ISDS demo purposes, hardwired camera location and orientation for
Copley image within temporary method
ObsFrustaGroup::generate_Copley_ObsFrustum().

*.  Deleted ancient Makefile_projects.wx and Makefile_projects.nowx from
repository.

*.  Created new ObsFrustaKeyHandler class.

*.  Separated off alpha-blending stateset commands within G99VideoDisplay
class into new member function enable_alpha_blending().  Discovered the
hard and painful way that order in which nodes are added to SpinTransform
within VIEWCITIES is important for alpha blending of 3D video against point
cloud.  In particular, decorations OSGgroup must be added AFTER
clouds_group OSGgroup in order for alpha blending to work OK.  After making
this change, Copley 2D image can now be viewed and manipulated within
program VIEWCITIES.

*.  Insert Copley ObsFrustum into EARTH program.  

*.  Broke off several lines from EarthManipulator::generate_anim_path()
into new member functions compute_flight_params() and
interpolate_camera_posn_and_orientation().

*.  Reworked hacked up program mains/utilities/UTMPATH2ECI so that it at
least compiles and runs again.

*.  Automatically mask off lines of longitude/latitude if log_eye_alt <
3.3.

* Added while loop within inputfunc::enter_string() which forces input
string length to exceed zero.  Made this change to avoid signposts
appearing in VIEWCITIES with no text label content.

============================================================================
ISDS3D code changes made on Fri, Feb 2:

*.  Fixed bug in EARTHSCENE which now appears to run OK.

*.  Copy eye_to_center_distance from CustomAnimationPathManipulator to
CustomManipulator in attempt to fix problems with camera position when
transitioning from non-interactive to interactive viewing.

============================================================================
ISDS3D code changes made on Thurs, Feb 1, early am:

*.  Wrote GraphicalsGroup::generate_new_OSGsubgroup() which assigns unique
subgroup name to scenegraph node.  Also add name to OSGgroup node in
scenegraph.

*.  Cleaned up PointCloud::compute_prob_dist() and wrote
PointCloud::reset_ColorMap_thresholds() for eventual callback purposes.

*.  Wrote little container class osgSceneGraph/ColorThresholds to hold
min/max for current PointCloud (when multiple clouds on blue marble exist).
Added ColorThresholds member to PointCloud class.  

*.  Each PointCloud sets its DataNode's UserData to point to its
ColorThresholds member.  ParentVisitor::apply() retrieves this
ColorThresholds pointer.  ColorGeodeVisitor then sets its ColorThresholds
pointer to ParentVisitor's within MyDataBasePager::UpdateSceneGraph().
PointCloud's individual min/max colormap thresholds are thus passed into
ColorGeodeVisitor::color_geometry_vertices().  Boston and Baghdad data are
now separately colored by switching min/max thresholds for one global
colormap object.

*.  Added some database connectivity sanity checks into postgres/database
and osgGIS/postgis_databse classes.  EARTH programs no longer core dump
when laptop is not connected to any databases and user enters unknown flyto
destination city name.

============================================================================
ISDS3D code changes made on Weds, Jan 31, early am

*.  Temporarily hardwire San Clemente image and fake geolocation within
EarthsGroup method.

..........................................................

*.  Added projects/changes_isds3d.txt to repository.

*.  Compute altitude perturbation needed to adjust texture image such that
its center is guaranteed to lie above the blue marble's surface.

*.  Globally changed LatLongAlt to LongLatAlt.

============================================================================
ISDS3D code changes made on Tuesday, Jan 30, early am

*.  Added data/OSG-Data/Predator subdir containing modified Predator UAV
model obtained from Paul Metzger.

..........................................................

*. Added initial phase_offset to aircraft's position along race track orbit.

*. In programs VIEWCITIES and EARTH, can set different angular velocities
for two aircraft along their racetracks.  Can also differently color bottom
of aircrafts' ObsFrusta.

============================================================================
ISDS3D code changes made on Monday, Jan 29

*.  Pass z_offset for bottom of ObsFrustum as explicit input parameter into
Model::orient_and_position_ObsFrustum().

..........................................................

*.  Added PlanetKeyHandler class to osg/osgSpace.  Can now toggle on/off
ambient sunlight within MANIPULATE_EARTH mode by pressing 's' key.

*. Changed EarthRegionsGroup::compute_UTM_to_surface_transforms() so that
it again constructs transforms for all distinct, defined earth regions.
Baghdad and Boston data can now be simultaneously shown on blue marble with
plane flying around Baghdad.

============================================================================
ISDS3D code changes made on Sunday, Jan 28 & early am on Monday, Jan 29:

*.  ObsFrustaGroup and ModelsGroup now inherit from AnnotatorsGroup as well
as GraphicalsGroup.

*.  Moved several lines out of VIEWCITIES into new
Model::attach_ObsFrustum(ObsFrustaGroup*) method.

*.  Eliminated unnecessary model_posn and model_attitude STL vector members
of ModelsGroup class.

*.  Eliminated some unnecessary member variables and methods from
EarthRegion and EarthRegionsGroup classes.

*.  No longer instantiate ObsFrustaGroup within decorations object.  Model
objects also no longer contain just a single ObsFrustum object.  Instead,
each model object contains an ObsFrustaGroup which in turn can hold 1 (or
more) ObsFrustum objects.

*.  Eliminated cloud_SurfaceTransform_refptr & Grid_SurfaceTransform_refptr
members of EarthRegion class.  These have become local pointers in
EarthRegion::cloud_surface_transform() &
EarthRegion::decoration_surface_transform().

*.  For demoing purposes, set EarthManipulator's default home position to
(long,lat)=(0,0) rather than above Boston.  Also set global clock to
reflect current UTC rather than some fixed arbitrary time.

*.  Put hooks into Planet class for toggling ambient sunlight intensity
from small to large value in order to convert from day/night to permanent
daytime illumination conditions.

============================================================================
ISDS3D code changes made on Friday, Jan 26:

*. Replaced deprecated version of filefunc::getsingleline() with better STL
version.  

*.  Slowed down angular velocities within EarthManipulator::flyto() so that
ISDS3D laptop can keep up and fly smoothly.

..........................................................

*. Wrote GraphicalsGroup::insert_Graphical_into_list(Graphical*) which
consolidates 3 ugly lines of code into a single method.  Started to
globally replace those lines in multiple GraphicalsGroup classes with the
new method call.

============================================================================
ISDS3D code changes made on Weds, Jan 24:

*.  Created Cylinder and CylindersGroup classes within osg/osgGeometry.

*.  Created osg/osgGIS subdir which should hold postgis_database class and
future classes for road networks, cities, etc.

============================================================================
ISDS3D code changes made on Tuesday, Jan 23:

*.  Moved postgis_database class out of postgres/ subdir and into
osg/osgEarth.  

============================================================================
ISDS3D changes made on Monday, Jan 22 

*.  Overhauled EarthManipulator::generate_animation_path() so that it now
performs continuous camera orientation interpolation between the beginning
and end of the animation path.  Work with camera orientation calculated
relative to local east-north-radial basis.  ENR basis vectors swivel as
underneath camera's trajectory through this local space as it flies from
start to end points on animation path.

============================================================================
ISDS3D changes made on Sunday, Jan 21 and early morning Monday, Jan 22 

*.  Changed Annotator classes within osg/osgGeometry to Geometrical
classes.

* Added new 'pure virtual' Annotator classes within osg/osgAnnotators which
do NOT inherit from Geometrical classes.  Instead, these new classes are
meant to hold earth-specific information.

*.  Moved convert_UTM_to_LLA_coords() method out of FeaturesGroup and
SignPostsGroup into AnnotatorsGroup.

*.  Simplified GraphicalsGroup::compute_local_ellipsoid_directions() which
now only takes long and lat as inputs.  This method is automatically called
whenever a point is picked on the blue marble surface.

*.  Wrote new method SignPostsGroup::generate_signpost_geode() which
radially orients signposts selected on blue marble's surface.

*.  Generalized GraphicalPickHandler::pick_3D_point() so that point picking
for scenegraphs containing both earth surface and point cloud can now start
to be handled.

*.  Eliminated pick_3d_point() member function from several
GraphicalPickHandler classes.  Fixed surviving method's boolean return
values.

*.  Within CustomAnimationPathManipulator, continuously update interactive
CustomManipulator's posn/orientation matrices with non-interactive CAPM's 
matrices.  The view consequently remains unchanged if we break out of the
animation loop by pressing "1" to return to the first CustomManipulator.

*.  Moved animation path generation methods out of Earth class into
EarthManipulator.

*.  Starting to interpolate between camera's initial orientation and
instantaneous east,north,radial directions along animation path generated
by EarthManipulator::flyto().

============================================================================
ISDS3D changes made on Friday, Jan 19 around 10 am:

*.  In GraphicalPickHandler::closest_intersection_hit(), we empirically
found that we should take the hit located at the BACK rather than at the
FRONT of the hlist in order to obtain the correct geolocation on the blue
marble.

*.  Eliminated all get_OSGgroup_ptr()->setNodeMask(0) calls from
Decorations class.  Added OSGsubgroup_ptr->setNodeMask(0) within
GraphicalsGroup::allocate_member_objects().

*.  Attach diurnally spun EarthTransform_ptr rMT ather than
Earth->get_DataNode_ptr() to PickHandlers' datanode pointers within main
programs JUSTEARTH and EARTH.  Feature picking on the blue marble's surface
now works again as it should.

============================================================================
ISDS3D changes made on Weds, Jan 17:

*.  Wrote Earth::update_earthline_text_size() which ensures text labels on
lines of longitude/latitude are always consistent.

* No longer add PolyLine PAT as child to PolyLinesGroup in
PolyLinesGroup::generate_new_PolyLine().  Instead, execute call to
insert_graphical_into_OSGsubgroup().  Program JUSTEARTH works properly
after this bug fix.

..........................................................

*.  Deleted Boven's old GraphicVector class from osg/osgAnnotators.

*.  GraphicalsGroup::destroy_all_Graphicals() no longer attempts to remove
PAT children from member OSGgroup_refptr.  Instead, it now calls new method
GG::remove_PAT_from_OSGsubgroup() which searches for a particular PAT
within all OSGsubgroups.  If it is found, the PAT is detached from its
parent OSGsubgroup.  Main program SCENEGRAPH no longer crashes after this
bug fix.

============================================================================
ISDS3D changes made on Mon, Jan 15:

*.  Changed geopoint geolocation to geopoint* geopoint_ptr member of
Annotator class.

*.  Fixed SignPostPickHandler::drag() and
SignPostsGroup::convert_UTM_to_LLA_coords() so that longitude/latitude
information is correctly stored when SignPosts are dragged around.

============================================================================
ISDS3D changes made on Sun, Jan 14 & Mon, Jan 15:

*.  PolyLinesGroup now inherits from (pure virtual) AnnotatorsGroup.

*.  Separated off computation of vertices average from
PolyLine::set_relative_vertices() into
PolyLinesGroup::compute_vertices_average().  Now pass reference_vertex as
parameter into PolyLinesGroup::generate_new_PolyLine().

*.  PolyLinesGroup::reconstruct_polylines_from_file_info() now passes a
global vertex average rather than an individual vertex average into each
individual PolyLine's constructor.

*.  Globally eliminated Graphical::get_particular_time_node() in favor of
Graphical::get_particular_time_obs() and Graphical::set_coords_obs()
member functions.

*.  Eliminated 3 expensive, wasteful and separate hashtables from Graphical
class which kept track of instantaneous observations, erasure and
manipulation booleans.  Work now instead with STL map member object
*coords_map_ptr which contains all this information within a Triple.  After
making this massive change to Graphical and multiple GraphicalsGroup
classes, SATCITIES with Boston streets now runs quickly and without too
much memory burden!

*.  Explicitly initialize local genmatrices in
ConesGroup::scale_rotate_and_then_translate_cone() to identity.  Cone
picking in program BASEMENT works properly after this bug fix.

*.  mathfunc::rotation_taking_u_to_v() &
mathfunc::rotation_about_nhat_by_theta() now take in and return a 3x3
genmatrix rather than a mymatrix.

*.  Can now orient polyline text so that it runs parallel to its attachment
point along the polyline.

*.  Orient lines of longitude [latitude] text so that it runs from south to
north [ west to east] and lies flat in local tangent plane.  

============================================================================
ISDS3D changes made on Fri, Jan 12:

*.  Added Decoration::set_SceneView_ptr() method which sets SceneView
pointers for non-NULL pickhandler members of Decoration class.

============================================================================
ISDS3D changes made on Weds, Jan 10:

*.  Nominations with missing altitude values read in from SKS database are
supplied with heights derived from point clouds within SignPostsGroup::

*.  SignPostsGroup::change_size() is operational.

*.  No longer destroy all signposts every time SKS database is checked.
Instead, only destroy those signposts whose IDs no longer match those
within the database.  

*.  Program mains/OSG/fov.cc can now display an observational frustum with
a trapezoidal region on the world z plane.  Program VIEWCITIES can now
display a rotating observational frustum for a Cessna orbiting above Boston
in a racetrack.

============================================================================
ISDS3D changes made on Tuesday, Jan 9 & Weds, Jan 10:

*.  Globally simplified get_ID_labeled_foo_ptr(int ID) methods in all
GraphicalsGroups classes.

*.  (Hopefully!) eliminated all traces of old ISDS database calls and
member variables from our SignPost classes.

*.  Switched from inserting, retrieving and updating comments into SKS
database to nominations within SignPostsGroup.

*.  Program mains/OSG/fov.cc can now instantiate a primitive, canonically
oriented obsfrustum.

============================================================================
ISDS3D changes made on Monday, Jan 8:

*.  Wrote new version of ModelsGroup::initialize_const_posn()
which needs to only be called if default model position != (0,0,0).

*. Wrote mathfunc::generate_orthogonal_basis() which takes in one unit
threevector vector and forms a complete orthonormal basis.  Wrote
mathfunc::decompose_direction_vector() and
mathfunc::construct_direction_vector() which convert from 2 polar angles to
a normalized 3 vector and vice-versa.

*.  Made multiple modifications to Decorations, Model and SphereSegment
classes.  VIEWCITIES can now display cessna running around a racetrack
orbit with a translucent sphere segment squinted off the plane's velocity
vector by 90 degs in azimuth and -45 degs in elevation.  Definitely will
want to replace sphere segment with more specialized observation frustum.

*.  Created new osgAnnotators/ObsFrustaGroup and ObsFrustum classes to hold
specialized translucent observation frusta objects.

============================================================================
ISDS3D changes made on Saturday, Jan 6 & Sunday, Jan 7:

*.  Wrote ltthreevector structure needed by maps for comparing different
threevectors within math/ltthreevector.h.

*.  Globally replaced Linkedlist.get_n_nodes() with Linkedlist.size().

*.  Eliminated Earth class member linkedlist member variables
longitude[latitude]_lines_list_ptr in favor of STL map members
longitude[latiutde]_lines_map_ptr.  Searching for PolyLine entries in the
latter datastructures should take logarithmic rather than linear time.

*.  Modified GraphicalPickHandler, Transformer and SphereSegmentPickHandler
classes so that we can now pick 3D points from either continuous surface,
point clouds or world grid Z-planes (but not all 3).  Can now instantiate a
SphereSegment within program BASEMENT.

*.  Starting to generalize SphereSegment construction so that its size can
be varied.  Can now also turn off blast effects.

*.  Wrote ModelsGroup::generate_racetrack_orbit() which obviates main
program src/OSG/racetrack.cc.  Main program VIEWRACE now internally
generates its racetrack orbit rather than reading it in from external file.

*.  Wrote Graphical::get_velocity() which estimates velocity vector based
upon Graphical's position at current, next and prev times.

*.  Starting to write code which enables instantiation and
rotation/translation of translucent sphere segments representing aircraft
fields-of-view.

============================================================================
ISDS3D changes made on Friday, Jan 5:

*.  Add font_refptr member to PolyLinesGroup.  Call setFont(string) just
once within PolyLinesGroup constructor and save resulting Font* pointer
within font_refptr member.  Then pass Font* pointer into individual
PolyLine constructors.  No longer perform Text->setFont(string) thousands
of times but rather Text->setFont(Font*).  On 1/5/07, we discovered the
painful way that the former command can yield unpredictable and
irreproducible segmentation faults.  On the other hand, the latter approach
appears to be stable.

..........................................................

*.  Earth class now has two new
Linkedlist<Triple<threevector,PolyLine*,int> >* members to hold information
about lines of longitude and latitude.  We no longer need to work with one
linkedlist to hold key information and another hashtable to hold PolyLine
pointers.

*.  Localized source of terrible memory problem in program TESTJUSTEARTH to
text_refptr[i]->setFont('fonts/times.ttf') line within
PolyLine::initialize_text().

============================================================================
ISDS3D changes made on Thurs, Jan 4:

*. Wrote new PolyLinesGroup::destroy_PolyLine(int ID) method to clean up
and simplify Earth::update_list_and_hashtable().

*.  Eliminated unreliable and unused KDtree datastructures from Earth
class.

..........................................................

*.  Finished converting pointers to ref_ptrs in all osg subdirs.

..........................................................

*.  Finished converting pointers to ref_ptrs in osg/osgGraphicals
osg/osgGeometry.  Starting to convert classes in osg/osgGrid.

============================================================================
ISDS3D changes made on Weds, Jan 3:

*.  Converted pointers to referenced objects within PickHandler,
Manipulator and DataGraph classes to ref_ptrs.  Finished conversion in
osg/SceneGraph.  Working on osg/osgGraphicals and osg/osgGeometry.

..........................................................

*.  Ensured destructors in all OSG classes which inherit from referenced
objects are virtual and protected (rather than public)

*.  Copied antiquated src/osg/osgData, osgIO, osgLODtree, osgUtils and
osgViewer classes into osg/oldstuff.  Then performed SVN delete on these
old subdirs sitting within src/osg.

=====================================================================
				*** 2006 ***
=====================================================================

ISDS3D changes made on Sun, Dec 31 and Mon, Jan 1:

*.  Moved EarthManipulator class out of osg/osg3D into osg/osgEarth.

*.  Wrote mathfunc:quadratic_fit() which returns the coeffs of the unique
quadratic passing through 3 specified (x,y) points.

*.  Wrote Earth::flyto() and Earth::generate_animation_path() methods which
implement a Google Earth flying capability between any two locations on the
earth's ellipsoid.  Camera acceleration/deceleration in the longitude,
latitude and altitude slewing profiles are implemented via error functions.

*.  Graphical no longer inherits from osg::Referenced.  GraphicalsGroup no
longer inherits from osg::NodeCallback.

*.  Stored unique integer keys corresponding to lines of longitude
(longitude, start_lat, stop_lat) and latitude (latitude, start_long,
stop_long) in Linkedlist members of Earth class.  No longer use
pseudorandom approach to mapping continuous triples to discrete integer
key.  Unfortunately, this change does not fix the terrible memory error
which sporadially causes coredumps after earth grid lines are deleted.

*.  Added size() methods to Hashtable and Linkedlist classes.  Will slowly
convert get_nkeys_in_table() and get_n_nodes() over the "STL" method.

============================================================================
ISDS3D changes made on Sat, Dec 30:

*.  In Earth::draw_longitude[latitude]_lines(), we now check whether depth
buffering was disabled for a line of longitude or latitude retrieved from
hashtable storage.  If the camera is zoomed far out from the earth's
surface, then we do NOT use the stored line.  Instead, we generate a new
one with depth buffering enabled.  This yields a clumsy but apparently
successful fix for the problem of longitude/latitude lines peeking through
the blue marble's surface.

============================================================================
ISDS3D changes made on Fri, Dec 29:

*. Privatized and protected several mouse event handling methods within
PickHandler classes.

*.  Reduced dependence of all PickHandler classes upon osgProducer::Viewer
to just PickHandler and GraphicalPickHandler.  No longer pass Viewer
pointers to any higher PickHandler classes.  

*.  Consolidated and streamlined GraphicalPickHandler class.

============================================================================
ISDS3D changes made on Thurs, Dec 28:

*.  Planet class now inherits from DataGraph rather than from Annotator.

*.  Added check in EarthRegionsGroup::get_curr_region_ptr() on
regions.size().  Programs JUSTEARTH and EARTH no longer core dumps when
blue marble features are selected.  But such features crosshairs do not
always appear on the earth's surface due to problems with
computeIntersections() method in osgProducer::Viewer.

============================================================================
ISDS3D changes made on Weds, Dec 27:

*.  Can now parse some input .osg files.

*.  Fixed PolyLinesGroup::set_width(double width) so that line width can be
globally set for group of polylines either before or after their
instantiation.

============================================================================
ISDS3D changes made on Sun, Dec 24:

*.  Created src/osg/osgOrganization subdir to hold Decoration and Data
classes.  Added this new subdir and its new Decorations class into
repository.

*.  Starting to consolidate Group, PickHandler and KeyHandler instantiation
code for all decoration graphicals within Decorations class.  Transfered
repeated lines of code from multiple main programs into this new class.

*.  Wrote SignPostsGroup::generate_new_SignPost_on_earth() member function.

*.  Deleted mains/OSG/multipoints.cc from repository.  Program VIEWPOINTS
can now handle multiple point cloud inputs.

============================================================================
ISDS3D changes made on Thurs, Dec 21:

*.  Fixed LatLongGrid::compute_long_lat_param_ranges() so that grid spacing
for individual tiles matches underlying lines of longitude/latitude on
earth.

.........................

*. Tried to globally reduce dependence on GraphicalsGroup::get_Nimages().
Nimage info now comes from AnimationController_ptr within GraphicalsGroup
rather than from pass_ptr.

*. Added UTM_zonenumber and northern_hemisphere_flag members to
EarthRegion.  Also added retrieve_lat_long_alt() method to this class.

*.  Wrote EarthRegionsGroup::generate_regions(PassesGroup) which
instantiates point clouds, latlong grids and earth regions using the input
PassesGroup argument.

*.  Eliminated GraphicalsGroup::retrieve_lat_long_alt() which depended on
pass_ptr in favor of
FeaturesGroup/SignPostsGroup::convert_UTM_to_LLA_coords() which depends on
EarthRegionsGroup_ptr.

============================================================================
ISDS3D changes made on Weds, Dec 20

*.  Fixed a few bugs in main programs after yesterday's overhaul of
PassesGroup and Pass classes.

*.  Added input_filetype member to Pass class.  Set input_filetype based
upon file suffix.

*.  Added pass_ptr member to DataGraph class.

*.  Added new constructor to PointCloud which does not depend upon
PointCloudsGroup.

============================================================================
ISDS3D changes made on Tues, Dec 19:

*.  Renamed osgEarth/Region, RegionsGroup classes as EarthRegion and
EarthRegionsGroup.

..........................

*.  Transformer class now depends upon DataGraphsGroup rather than
DataGraph when performing searches for geometries along rays.  Globally
eliminated Transformer constructors involving DataGraphs and replaced with
DataGraphGroups in all main programs.

*.  Wrote empty Region and RegionsGroup classes in osgSpace subdir which
will eventually hold PointCloud, LatLongGrid and other information
associated with particular regions on the earth.

*.  Started to move Earth, EarthsGroup, Region and RegionsGroup classes
out of osg/osgSpace into new osg/osgEarth subdir.

============================================================================
ISDS3D changes made on Sat, Dec 16 & Sun, Dec 17:

*.  Explicitly set passnumber and curr_t for HAX signpost in main
SPASE_IMAGEPLANES program within set_scale_attitude_posn() argument list.

*.  Eliminated dependence of LatLongGrid on deprecated UTMzone string
member.  LLG now has integer UMT_zonenumber and bool
northern_hemisphere_flag members instead.

*.  Performed yet another overhaul of LatLongGrid class.  Split some bulky
methods into smaller member functions. 

*.  Fixed logic for drawing longitude & latitude lines on blue marble.
Lines no longer mysteriously pop in and out as they're moved towards the
edge of the visible window.

*.  Eliminated dependence of Ellipsoid_model::eye_altitude() upon Clock
time.

*.  Lines of longitude and latitude are now constructed in geocentric XYZ
rather than ECI coordinates.  Within main programs EARTH and JUSTEARTH,
Earth object's OSGgroup is added to *EarthTransform2_ptr which implements
diurnal spin about earth's rotation axis.

*.  Wrote LatLongGrid::compute_UTM_to_latlong_gridlines_rot_angle() which
optimally aligns a UTM subgrid with underlying lines of longitude &
latitude on the earth's ellipsoid.  Location of Boston cloud on blue marble
now very closely agrees with its location on flat LatLong grid.

============================================================================
ISDS3D changes made on Fri, Dec 15:

*.  Added SceneView pointer member to PickHandler class.

*.  Starting to write Earth::long_lat_corners_to_plane() method which will
map rectangular lat-long regions onto trapezoids within XYZ geocentric
world space via planar homographies.

============================================================================
ISDS3D changes made on Weds, Dec 13:

*.  Draw latlonggrid rather than alirtgrid within EARTH program.

*.  Add latlonggrid_ptr as child to SurfaceTransform_ptr rather than
TransTransform_ptr within EARTH.  LatLongGrid now at least shows up around
Boston area, though it's considerably off from Ellipsoid lat long grid
lines.

*.  Upgraded mains/OSG/p2rgba so that it now at least compiles.

============================================================================
ISDS3D changes made on Tuesday, Dec 12:

*.  Eliminated EarthsGroup::force_display_update() and force_display_flag
members.

*.  Verify camera_ECI_posn.mag > 0 before drawing lat/long grid lines. 

*.  Gridline width and text size are now functions of log_eye_alt.

============================================================================
ISDS3D changes made on Monday, Dec 11:

*.  More modifications quickly made to generate smooth earth_boston
flythrough animation path creation.

============================================================================
ISDS3D changes made on Saturday, Dec 9 & Sunday, Dec 10:

*. Commented out 'p' for pause in CustomAnimationManipulator so that it
does not interfer with 'p' for play/pause within our AnimationController
class.

*.  Wrote mains/utility/UTMPATH2ECI.cc which converts animation paths from
UTM to ECI coordinates for use with blue marble background.

*.  Eliminated irrelevant ndims and ndims_label members of ModeController
class.

*.  Added void constructors for Graphical and Annotator classes to enable
them to be used with memory pooling.  PolyLine now inherits from both
Annotator and ObjectPool in order to speed up latlong gridline rendering on
blue marble.  Allocation of PolyLine geode, geom and text objects now
occurs in allocate_member_objects().

*.  Force starting and stopping lat/long vertices to lie at integer
multiples of 10**-5 degs.  Introduce longitude & latitude line hashtable
members into Earth class.  For lines of longitude, convert longitude,
starting and stopping latitude into a single pseudo random integer key.
Save PolyLine* as well as update iteration counter into hashtable.  When a
polyline needs to be redrawn, first check whether it already exists in the
hashtable.  After all current PolyLines have been computed, delete those
from hashtable which are obsolete.

*.  No longer perform check on individual segments of lines of
longitude/latitude for whether they're visible to camera.  Faster to now
draw entire grid line including portion hidden from view by blue marble.

*.  Memory pooling + hashtable caching leads to significantly faster
rendering of lat/long grid lines on blue marble!

*.  src/threeDgraphics/voxel_coords and voxel_lattice classes now depend
upon UNSIGNED rather than SIGNED integers m, n and p.

============================================================================
ISDS3D changes made on Friday, Dec 8:

*.  Added PointCloudsGroup & DataGraphsGroup constructors which take in
AnimationControllers.

*.  Added MatrixTransform to CentersGroup to hold time dependent spin
information.  Added constructor which takes in an AnimationController.

*.  Implemented reasonable spinning animation within Centers classes.  Can
increase/decrease spin rate, change spin direction via key strokes.  Spin
occurs about center point chosen via CenterPickHandler.  

*.  Deleted obsolete main program OSG/viewspin.cc from repository.  Added
spinning functionality to VIEWPOINTS, VIEWCITIES and VIEWSAT programs.

============================================================================
ISDS3D changes made on Thurs, Dec 7:

*.  Wrote mains/video/nulled_exterior_regions.cc which reads in a text file
containing polygons for each image in a video, nulls all pixels outside
those polygons and generates a new video.

============================================================================
ISDS3D Changes made on Weds, Dec 6

*.  Added DataGraphsGroup::compute_total_xyz_bbox() member function.

============================================================================
ISDS3D Changes made on Sat, Dec 2 & Sun, Dec 3:

*.  Can now draw lines of longitude & latitude on blue marble.

*.  Removed redundant member variables from ViewFrustum class.  ViewFrustum
now gets Projection and View Matrices from SceneView rather than from
CullStack and CustomManipulators.

*.  Update SceneView's ViewMatrix after Minv is adjusted within
Custom3DManipulators.

*.  Eliminated temporary main program OSG/fov.cc which was never under SVN
control.  OSG/justearth now has lat/long grid line display capabilities.

*.  Eliminated dependence of Transformer class upon ViewFrustum and
Custom3DManipulator classes.  Transformer now depends exclusively upon a
SceneView object from which it reads Projection and View Matrix
information.  Pass a SceneView pointer into Transformer after osgProducer
Viewer has been realized and not at construction time.

*.  Eliminated dependence of osgSpace/EarthsGroup and Earth classes upon
EarthManipulator.  All camera posn and orientation information is now
passed into EarthsGroup via a SceneView pointer.

*.  Lat/Long grid lines are now starting to be automatically updated in
animation path flythroughs.  But playback is very choppy on ISDS3D laptop.

============================================================================
ISDS3D Changes made on Friday, Dec 1:

*.  Base angular separation between longitude lines in Earth class upon
log_eye_altitude.

============================================================================
ISDS3D Changes made on Weds, Nov 29:

*.  Replaced edge member array in contour class with STL vector.

*.  In Earth::draw_longitude_lines(), lines of longitude are drawn over
latitude extents which vary depending upon camera altitude and blue marble
solid angle coverage.

============================================================================
ISDS3D Changes made on Tuesday, Nov 28:

*.  Wrote Earth::compute_FOV_intersection_points() which determines
(long,lat) coordinates for ViewFrustum ray intersections within ellipsoid
model.

*.  Replaced edge member array in polyline class with STL vector.
Eliminated n_edges member variable.

------------------

*.  Wrote new ConesGroup::generate_new_Cone(tip,base,radius) method.

*.  Eliminated EarthManipulator::eye_ECI_posn member in favor of
Custom3DManipulator::get_eye_world_posn() method.

*.  Wrote LineSegmentsGroup::draw_FOV_frustum() method which graphically
displays current ViewFrustum via KeyHandler callback.

============================================================================
ISDS3D Changes made on Monday, Nov 27:

*.  Created new src/astro_geo/moon class.  Can compute moon's RA & DEC
given an input time.

*.  Added 2500x1250 moon texture to data/OSG-Data/SolarSystem/ 

============================================================================
ISDS3D Changes made on Saturday, Nov 25 and Sunday, Nov 26:

*.  Created new osg3D/EarthsGroup class whose update_display() method is
tied to EarthManipulator altitude values.

*.  Added EarthManipulator::camera_direction_in_ECI() method.

*.  Only draw blue marble grid linesegments whose normals are visibile wrt
anti-camera direction.

*.  Reworked Custom3DManipulator and AlirtManipulator classes so that their
member matrices M and Minv contains correct camera orientation and
world-space position information.  They can now be used in place of
OpenProducer's InverseViewMatrix and ViewMatrix respectively.

*.  Completely eradicated dependence of Transformer class on Producer's
Viewer!  Also cleaned up unnecessary members of Transformer.

*.  Deleted mains/spase/justearth.cc from repository.  Work instead only
with mains/OSG/justearth.cc.  

*.  Added osg2D/Moviefuncs.cc .h to repository

============================================================================
ISDS3D Changes made on Thurs, Nov 23 , Friday, Nov 24, Saturday, Nov 25:

*.  Recreated all Boston and fused OSGA files using new version of LODTREE
which incorporates a CoordinateSystemNode at top containing UTM zone
information.

*.  Force tick numbers to lie within XY plane rather than be screen aligned
for satellite grid.  Tick numbers then appear when they are magnified in
main program SPASE_IMAGEPLANES.

*.  Moved setUpdateCallback(update_display) out of all main programs & into
initialize_member_objects() for AlirtGridsGroup, TrianglesGroup,
FeaturesGroup, PointCloudsGroup, PlanetsGroup, etc.

*. Moved OSG Plane classes out of src/osg/osg3D into src/osg/osgGeometry.
Deleted dependence of Plane classes on PointCloud.  In the future,
PointClouds can depende on Planes, but not vice-versa.

*.  Tried to eliminate as many #include statements from main OSG programs
as possible.  For instance, eliminated '#include PointCloud.h' if '#include
PointCloudsGroup.h' was already present.

*.  Wrote osgfunc::create_Mode_HUD() method which instantiates a global
Projection object.  Reduce number of duplicated lines within multiple main
programs by now calling this single method.

*.  Created new osg/osg2D/Moviefuncs namespace containing
create_Imagenumber_HUD method which instantiates a global Projection
object.  Reduce # of duplicated lines in multiple main programs by calling
this single method.

*.  Methods Earth::draw_points() and draw_longitude_lines() now construct
surface annotation objects which in absolute ECI coordinates which are
correctly positioned on the earth.

*.  Fixed orientation of Earth Grid's ECI X axis label.

============================================================================
Changes made on Tuesday, Nov 21:

*.  Store relative rather than absolute positions within PolyLine vertices.
Then add global translation by average vertex location within PolyLine's
PAT.  As Ross predicted, this change eliminates floating point errors and
all flickering within HUMMER trails in program SATCITIES !

*.  Renamed osg/osgGrid/Grid2d class as Grid.  Grid class now inherits from
Annotator.  Eliminated unnecessary member variables and methods from Grid
which overlapped more basic ones in Annotator.

*.  Created new osgGrid/GridsGroup class.  

*.  Starting to add methods to LatLongGrid to enable grid vertices to be
specified in terms of relative rather than absolute locations.

============================================================================
Changes made on Saturday, Nov 18, Sunday, Nov 19 & Monday, Nov 20:

*. We found on 11/18/06 that we need to translate Cambridge tile back to
(0,0,0), then separately translately it onto blue marble location.  For
reasons we don't understand, we cannot perform these operations within a
single MatrixTransform.  But at last we can see Cambridge tile appearing on
blue marble surface.

*.  As soon as point cloud is read in from OSGA file, read in and store its
top most MatrixTransform.getMatrix().  Use this matrix (and not the
cumulative LocalToWorld) for point cloud coloring.  Introduced new
top_Matrix members in MyNodeVisitor and DataGraph classes to hold this top
matrix information.  

*.  ParentVisitor class now stores bottom matrix first encountered as it
traverses the datagraph upwards starting from some paged node.  This bottom
matrix corresponds to the top matrix within the datagraph and should be
used for coloring paged-in vertices.

*.  Program GOOD_EARTH finally shows entire Boston set on surface of blue
marble, and earth manipulation controls are reasonable!  Feature picking
also added to GOOD_EARTH.  Unfortunately, lat/long calibration of blue
marble clearly disagrees with that of Google Earth.

*.  Added FeaturesGroup, PointsGroup and GraphicalsGroup constructors which
take in pointers to Clock and Ellipsoid_model objects.

*.  Tried to eliminate as many dangerous and unnecessary calls to
timefunc::initialize_timeofday_clock() as possible throughout library.
AnimationController should be only object that executes call to this global
method.  After this bug fix, no more hicups occur in playback of
spase_imageplanes movie and raytracer flythrough.

*.  Created new Earth class in osg/osgSpace.  Moved MatrixTransform
generation methods into this new class.

============================================================================
Changes made on Monday Nov 13:

*.  Added animation control to program SCENEGRAPH.  Can animate traversal
history of Treenodes.  

*.  MyIntersectVisitor now inherits from CustomIntersectVisitor.  Latter
class is just a cloned copy of OSG's IntersectVisitor which we can alter
for debugging purposes.  MyIntersectVisitor now takes in a ptr to a
TreeVisitor which holds a Tree of TreeNodes.  

*.  CustomIntersectVisitor is definitely messed up.  It does not traverse
down past OSG groups!

*.  Added brand new IntersectionVisitor, LineOfSight and HeightAboveTerrain
classes written by Robert Osfield to repository.  Temporarily park them in
osg/osgSceneGraph for testing.  

============================================================================
Changes made on Friday, Nov 10, Saturday, Nov 11, Sunday Nov 12, Monday Nov
13:

*.  Created GraphNodesKeyHandler class for GraphNode deletion debugging
purposes.

*.  Moved ColorGeodeVisitor and SetupGeomVisitor from osgSceneGraph to
osg3D subdirs.  Eliminate dependence of DataGraph on these two Visitor
clasess.  Added ColorGeodeVisitor and SetupGeomVisitor pointer members to
PointCloud class.  Also moved point cloud specified coloring and geometry
setup methods out of scenegraphfuncs into ColorGeodeVisitor and
SetupGeomVisitor classes.

*.  Explicitly check within FusionGroup::color_pointcloud() that pointer to
draped colors file is non-null.  Also added boolean view_draped_video_flag
member to FusionGroup class.

*.  Moved several pointcloud specific members and methods out of DataGraph
class into PointCloud class.  

*.  Fixed bug in BoxesGroup::setup_canonical_Box() and
GraphNodesGroup::setup_canonical_GraphNode() which accidentally led to 2
Boxes/GraphNodes rather than 1 being added to OSGgroup_ptr.

*.  LineSegmentsGroup holding relative links between GraphNodes and their
parents is now a member of GraphNode.  After adding LSG's OSGgroup to
GraphNode PAT via instantiate_Graphical(V,GraphNode_ptr,LSG OSG group),
deletion of GraphNodes from tree display works OK in main program
OSG/scenegraph.

*.  GraphNodesGroup::update_display() periodically purges all its
Treenodes, accepts TreeVisitor on DataNode_ptr and forms a new scene graph
display.  Can now see scenegraph grow and shrink over time as nodes are
paged in and out of memory.

*.  GraphNodes can now display 1 - 5 lines of text which are properly
vertically centered.  They are also labeled by their IDs.

*.  Wrote stringfunc::pad_string() and
stringfunc::number_to_fixed_string_length() methods for matrix output
purposes.

*.  Wrote Box methods to adjust text font and size for MatrixTransform
display purposes within a GraphNode.

*.  Program SCENEGRAPH now dynamically displays MatrixTransform and # geode
vertices information.  

*.  Added STL vector traversal_history member to MyNodeVisitor class which
holds total_indices STL vectors in the order in which nodes were visited.

============================================================================
Changes made on Thurs, Nov 9:

*.  Can recursively insert new Treenode into Tree datastructure based upon
its total set of child indices.

*.  GraphNodes are individually colored based upon their text labels.
Linesegment links to their parents are colored based upon parent column
values to emphasize sibling relationships.

*.  Main program OSG/scenegraph now displays scenegraph for lowell.xyzp.
Scenegraph updates resulting from paging still needs to be implemented via
a 2-screen approach.

============================================================================
Changes made on Sat, Nov 4 & Sun, Nov 5:

*.  Reduced dependence of all classes on MovieKeyHandler class.  Expect
this class will eventually disappear.

*. Started to prepare G99VideoDisplay to take in an AnimationController
object and relinquish all movie playing control to this clock class.
Converted several unsigned int to int members in both G99VD and Pass
classes.

*.  MoviesGroup class must now take in an existing AnimationController
object.  Individual Movie objects must now be instantiated with a pointer
to the AnimationController passed to their constructors.

*.  Eliminated all video control members and methods from G99VideoDisplay
class.  Movie and G99VideoDisplay constructors now explicitly take in
non-NULL AnimationController* pointers.  And all movie controls (play,
reverse, increment frame, etc) are handled by singleton AnimationControl
object.

*.  Eliminated all dependence on VideoController class which has now been
superceded by AnimationController.  Deleted VideoController class from
repository.

*.  Eliminating dependence on FusionController.  Moved
color_pointcloud_with_next/prev_videoframe() methods from FusionController
into virtual FusionGroup::update_animation_frame() method.

============================================================================
Changes made on Thurs, Nov2:

*.  Eliminated dependence of Movie classes on VideoController.

*.  Created new osgGraphicals/AnimationController and AnimationKeyHandler
classes.  AnimationController essentially acts as singleton computer clock
to which all animated Graphical movements should be synced.
GraphicalsGroups which need animation take in pointer to existing
AnimationController to which they are subsequently registered.

*.  Massively reworked our entire approach to animation.  Checked that new
method works for main programs VIEWRACE, VIDEO, VIDEO3D, FUSION,
SPASE_IMAGEPLANES, SATDRAPE, IMAGECDF2VID, and ALIRT programs.  Do not know
if satellite main programs FOURD and IMAGEPLANES are broken as a result of
these massive changes.

*.  Eliminated ImageFramesController, GraphicalsController,
RectanglesControler, LineSegmentsController, ModelController and
PointCloudController classes.  Their animation functions have been subsumed
within AnimationController.

*.  Eliminated "Animate" state from list in AnimationController.  Play now
controls both conventional video movies as well as non-video animations.

============================================================================
Changes made on Weds, Nov 1:

*. SignPostsGroup::insert_into_worldmodel_database() returns bool
indicating whether insertion is successful.  If not, signpost ID is not
changed from its default viewer value to a bogus world model database
value.

*.  Created "pure virtual" AnnotatorPickHandler class from which
ModelPickHandler and SignPostPickHandler now inherit.

============================================================================
Changes made on Tues, Oct 31:

*.  Can draw spherical endpoints on osg/osgGeometry/LineSegment objects.

============================================================================
Changes made on Sat, Oct 28:

*.  Eliminated discontinuous jumps from EarthManipulator when user tilts,
zooms and tilts again.  Initial camera position now corresponds to some
specified longitude along earth's equator independent of UTC.  Restored sun
posn and earth shading corresponding to absolute julian date.

*.  Eliminated _transform member of MyNodeVisitor class in favor of
LocalToWorld member.

*.  In EarthManipulator::home(), camera's ECI position is initializaed to
specified (longitude,latitude,altitude) independent of UTC.  Moreover,
camera Xhat points east, Yhat points north and Zhat points radially
outward.

*.  Updated AlirtManipulator class so that it begins to mirror
EarthManipulator class.

*.  Added DepthPartitionNode and DistanceAccumulator classes from
osgdepthpartition example to our osg/osgSceneGraph library.

============================================================================
Changes made on Sat, Oct 21, Sun Oct 22 and Mon, Oct 23 am:

*.  Added vector<osgText::Text*> text_ptr member to Annotator class.  Push
back 1 Text pointer within Point and LineSegment classes and 2 Text
pointers within Features class.  

*.  Feature now inherits from Point.  FeaturesGroup inherits from
PointsGroup.  FeaturePickHandler inherits from PointPickHandler.

*.  Added boolean method database::get_connection_status_flag().
Explicitly call this method for attempting to insert, delete or modify
entries into databases.

*.  Finally figured out 4x4 manipulator matrix M maps screen to ECI coords
within EarthManipulator class.  Still reworking entire class to try get
reasonable behavior for rotating about earth center and spinning around
surface points.

============================================================================
Changes made on Tues, Oct 17:

*.  Trying to make EarthManipulator's mouse actions mirror those for
AlirtManipulator when in vicinity of urban point cloud on surface of blue
marble.  Middle button zooms radially out/in towards earth's center, right
button effectively translates in lat/long while (almost) holding altitude
fixed.  Left button should spin about point on surface corresponding to
middle of window.  Left button action needs much more work.

============================================================================
Changes made on Mon, Oct 16:

*.  Globally renamed our EllipsoidModel class as Ellipsoid_model to avoid
name conflict with osg::EllipsoidModel.

*.  EarthManipulator keeps track of eye's position in ECI & lat/long/alt
coordinates.  Introduced speed control within EarthManipulator based upon
camera altitude above ellipsoid.

*.  Can finally zoom in from outer space down onto Lowell point cloud!  

*.  Primary main programs appear to work OK after having upgraded to OSG1.2
this afternoon.

============================================================================
Changes made on Sat, Oct 14 & Sun, Oct 15:

*.  Eliminated all dependence of GraphicalPickHandler upon FEATURE
modes.

*.  Generalized GraphicalPickHandler::pick_3D_point() so that search for
intersections with 3D surfaces are first performed prior to search for
intersected 3D XYZ points.  Can now pick features and signposts on DTED
maps.

*.  Main program OSG/earth.cc partially works again for lowell chunk placed
onto blue marble.  Boston .ive and .osga files cannot yet be placed onto
blue marble.

*.  Added ParentVisitor_ptr member to GraphicalPickHandler.  Also label top
CoordSysNode of earth.osga DataGraph with "Earth" name.  Feature class now
has on_earth_flag boolean member whose value is set by
FPH::instantiate_new_feature(ParentVisitor->get_earth_flag())

*.  Wrote EllipseModel::ConvertLatLongAltToECI() and
ConvertECIToLatLongAlt() which convert earth surface posn's to
time-dependent ECI coordinates.  Can also retrieve time-dependent east,
north, radial direction vectors in ECI coordinates.

*.  Changed member Clock to Clock_ptr within GraphicalsGroup.  Single
global clock should be instantiated in main programs and passed to every
GraphicalsGroup as needed for synchronization purposes.

============================================================================
Changes made on Sun, Oct 8 & Mon, Oct 9

*.  Added database::get_next_id() which executes select nextval() call to
postgres sequences.

*.  Can now insert signpost info into entity & comments tables.

*.  Added critical check for NULL SignPost_ptr in SPPH::drag() to prevent
seg faults.

*.  Added SignPostsGroup::move_z() to store altitude information into
postgres entity table.

============================================================================
Changes made on Fri, Sep 29 in early morning:

*.  Added libpostgres.a to repository.  Added build_postgres within
src/mains/postgres.

*.  Added more functionality to src/postgres/database class.

============================================================================
Changes made on Sat, Sep 23 & Sun, Sep 24:

*.  Created reduced copies of Features classes within osgGeometry/Point
classes.

*.  Can select points in a video within INSERT_POINT mode.  Can construct
convexhull polygon for those points in MANIPULATE_MOVIE mode by pressing
'p'.

*.  Created osgGeometry/Polygon class.

============================================================================
Changes made on Thurs, Sept 21:

*.  Commented out various print statements in osgGrid and PassesGroup
classes in preparation for tomorrow's informal demo for 106/104 group
leaders.

*.  Added darker ambient lighting params for running SPASE_IMAGEPLANES on
isds3d laptop.

============================================================================
Changes made on Sat, Sept 16:

*.  Thickend photo FOV linesegments so they show up more clearly against
Boston point cloud.

*.  Added MANIPULATE_FUSED_DATA mode in ModeController class.  After image
plane is inserted into point cloud, can reset camera's origin to center of
screen via call to Movie::set_viewpoint().  Camera's orientation also
matches that of view frustum.  

*.  Moved Custom2DManipulator and Custom3DManipulator from osg2D and osg3D
to osg subdir for movie positioning purposes.  Separated off
reset_nadir_view() from set_worldspace_center() in CustomManipulator base
class.

*.  Added extract_internal_params to camera class from deprecated
image/camerafuncs namespace.

============================================================================
Changes made on Tuesday, Sept 12:

*. Began to reimplement grid line size changing within Grid2d class.

============================================================================
Changes made on Friday, Sep 8, Saturday Sept 9 and Sunday, Sept 10:

*.  Found quasi-reasonable set of MyDatabasePager params for ISDS3D laptop
display of Boston point cloud.

*.  Wrap4 colormap plus 0.6 saturation weight yields pretty nice fused
Boston imagery.

*.  Modified PointCloud::write_xyzp_file() and PointCloud::write_tdp_file()
so that they use LeafGeodeVisitor to write all leaf points and colors to
output file.  Database paging does not yet work correctly.

*.  Modified scenegraphfunc::instantiate_color_array() so that it reserves
max size for osg::Vec4ubArray if colors are input from read_xyzrgba_file().
XYZRGBA files can now be written and read back in via program VIEWPOINTS
using LeafGeodeVisitor.

*.  Separated off member osgSceneGraph::find_Zs_given_XYs() in
HiresDataVisitor class.  Created several new constructors for
HiresDataVisitor class.  Added HiresDataVisitor member to PointCloud class.

============================================================================
Changes made on Friday, Sep 1:

*.  Created osg3D/AlirtManipulator class which inherits from
Custom3DManipulator.  Trying to always rotate about screen's midpoint
projected onto Alirt Grid.  

============================================================================
Changes made on Weds, Aug 30:

*.  Moved generate_scale_and_translation from ImageFramesGroup class into
osgfuncs namespace.

*.  Add corona billboard to sun in order to make it bigger and more
noticeable in blue marble simulations.

*.  Randomly vary both intensity and point size for background starfield.

============================================================================
Changes made on Sat, Aug 26 and Sun, Aug 27:

*.  Eliminated geom_ptr member of Graphical class.

*.  Added dirtyDisplay() method to Annotator class which needs to be called
each time some internal aspect (e.g. color, size) of one of our osgGeometry
objects is altered.

*.  Performed major overhaul of all our osgGeometry objects.  Each one now
has osg::Geode* generate_drawable_geode() and osg::Drawable*
generate_drawable() methods.  Geometries are locally defined in each class
and added into geode objects which are defined in the pure virtual
Annotator baseclass.

*.  Feature class now inherits from Annotator.

*.  Altered ambient lighting so that backside of earth is quite dark and
terminator no longer exhibits patchy behavior.  
