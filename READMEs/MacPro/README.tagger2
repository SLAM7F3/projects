j============================================================================
Tagger 2 and S2D editor notes
============================================================================
Last updated on 10/11/16; 10/30/16; 10/31/16; 11/2/16
============================================================================

. There's also an event for changing the image, which typically causes
modules to reset/initialize.

*.  Methods to encode/decode geo IDs are sitting in app/build/sxd_merge.c/
sxd_geo_id_encode() and sxd_geo_id_decode().

*.  On 9/19/16, we got lots of help from Daniel Raggarsson with getting
pwin to compile on our macbook.  In particular, Daniel showed us that
we really neede to chant

		xcode-select install

in order to download and install Xcode Command Line Tools.  After this
chant, /usr/include on our Macbook now contains stdio.h and many other
basic header files which it was previously missing.

Daniel also showed us that we must used clang-omp rather than just clang in
order to successfully compile pwin on our Macbook.  

*.  In order to compile pwin on our macbook, we changed our "makepwin" script
within ~/bin/makepwin to read as follows:

   cd /Users/cho/sputnik/pwin/build/mac 
   make  pwin OPT=3 RDN=1 TAGGER_DEV=1 PWGL=1


*.  On Macbook Pro, delete key appears to be mapped to GLFW_KEY_BACKSPACE
rather than GLFW_KEY_DELETE.

*.  In order to build S2D editor on MacBook Pro, we can use our minor
variant of Tomas' python script and chant

	./build_s2d_editor -dst s2d_editor -ver 1000

*.  On 10/5/16, Ross told us that the working directory for Mac apps is
usually set to AppName.app/Contents/MacOS/.  He suggested placing external
chunk data zipfiles into AppName.app/Resources/ .  Then inside of our
tagger2 pwin code , we are able to refer to those tile data files via
chanting "../Resources/tile_filename.zip".


*.  zip -r s2d_editor.app.zip ./s2d_editor.app


*.  Creating S2D editor project radars:

Fire up radar app.  Under Find --> Problem, enter under the Component field

	Name = Flyover PR
	Version = Labeling

Then press Find button in upper right to see examples of labeling radars
previously sent to David Thurman.  

When we generate a radar for a new problem, use Radar Guide --> New Problem
--> Assign a Task .  Enter some descriptive title, Component (as above) and
a short description.  After we press the "send" button, we can alter the
default assignee and add cc's to other people.  John Wood generally
recommends setting priority = 3 (important).  Finally, press File --> Save
in order to send out radar and its ccs.


*.  Procedure for uploading new S2D job to PR admin


i.  Generate a test_tile.json file which looks something like

{
    "prjname":"peter_debug3",
    "task":"s2d_tagger2",
    "rev":"rev0",
    "files":[
	"https://flyover-static.geo.apple.com/startown-gpfs/sputnik03/supersize/devdata/pcho/s2d_tiles/test_tile.zip".
	"https://flyover-static.geo.apple.com/startown-gpfs/sputnik03/supersize/devdata/pcho/s2d_tiles/test_tile.zip".
	"https://flyover-static.geo.apple.com/startown-gpfs/sputnik03/supersize/devdata/pcho/s2d_tiles/test_tile.zip".
	"https://flyover-static.geo.apple.com/startown-gpfs/sputnik03/supersize/devdata/pcho/s2d_tiles/test_tile.zip",
	"https://flyover-static.geo.apple.com/startown-gpfs/sputnik03/supersize/devdata/pcho/s2d_tiles/test_tile.zip"
    ]
}

ii.  Use following curl command to upload this json file's contents to
flyover admin:

curl -H "Content-Type: application/json" -u pcho:@Beebop12 --data @test_tile.json https://pr-admin-3dv.usspk02.orchard.apple.com/upload-job


iii.  Open browser to
https://pr-admin-3dv.usspk02.orchard.apple.com/admin/job/

username = pcho
password = @Beebop12

Find the name of our PR Admin job (e.g. peter_debug3).  Its Import State
should automatically equal "complete".  Change its "State" to "debug".
Default "Mode" = "Regular" is OK.  

iv.  Change "#if 0" to "#if 1" in tg_work_scheduler.cpp.  Also be sure to
hardwire the prjname (e.g. "peter_debug3") in this same section of
tg_work_scheduler.cpp !!!

v.  Splash page now reads "Tagger2" and no longer "S2D Editor".  After
selecting debug option, we should see our hand-selected tile appear in the
S2D editor window.  

*.  As of 10/31/2016, remote branch origin/tagger2_ext will be delivered to
new ninjas by end of Fri, Nov 4, 2016.

*.  In order to force binary-store version of tagger2/s2d editor tool to 
work in "editing" rather than "thumbs up/down labeling" mode, we need to 
hardwire 

  _editor->get_current_s2d_context()->_thumbs_up_down_mode = false

at the very start of TGEditorModule_Polylines_S2D::initialize_polygons()
inside tg_editor_module_polylines_s2d.cpp


*.  In order to force export of an m2d shape file from binary store version
of tagger2/s2d editor, call "S2DContext::save_s2d_polygons()" by adding
some new key stroke within ::update().  Also be sure to exit(-1) after
printf("Exporting S2D polygons to %s \n", output_shape_filename).

*.  In order to access PR Admin debug job (e.g. peter_debug5) from an
"external" S2D branch (for delivery to groups outside Flyover), we may need
to comment out #define TAGGER_EXT statements located in tagger2.h and
tg_annotation_api.h
