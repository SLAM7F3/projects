==========================================================================
Neural net pathway results
==========================================================================
Last updated on 8/25/16; 9/5/16; 9/7/16; 9/8/16
==========================================================================

In this README, we define the following root directories:

  $caffe_root= ~/programs/c++/svn/projects/src/mains/machine_learning/caffe

*.  Program $caffe_root/GENERATE_CNN_VIS_SCRIPTS loops over all layers and
nodes corresponding to some trained Caffe model.  For each node in the
network, this program creates an executable script which calls Justin
Johnson's "cnn_vis" python script.  We have empirically determined
reasonable values for many of the parameters within Johnson's script which
generate 96x96 image chips that maximally activate for each neuron in the
network.  The image chips are initialized with gaussian noise.
Backprojection is used while holding the weights in the trained model fixed
to reconstruct the chip which maximally activates a particular neuron.  All
executable scripts which run the python code are exported to an output
folder along wiht a single additional script that runs all of the generated
scripts.

   ./generate_cnn_vis_scripts                      
    /data/caffe/faces/trained_models/test_160.prototxt                    
    /data/caffe/faces/trained_models/Aug6_350K_96cap_T3/train_iter_702426.caffemodel 

*.  Program $caffe_root/RAW_ACTIVATIONS imports a trained FACENET caffe
model.  It also takes in testing images which the model has never seen
before.  For each FACENET neuron, we count how many input test images cause
it to fire.  We also record the mean and median values of its non-zero
activations.  Activation statistics for each node in each layer are
periodically exported to output text files within activations_subdir.

RAW_ACTIVATIONS also generates montages of filter response image chips for
test images that significantly stimulate at least one FACENET neuron.  The
montages are exported to output male and female subdirectories.

./raw_activations
/data/caffe/faces/trained_models/test_96.prototxt                     
/data/caffe/faces/trained_models/Aug2_184K_T3/train_iter_200000.caffemodel 
/data/caffe/faces/image_chips/testing/Jul30_and_31_96x96


*.  Program $caffe_root/ORDER_ACTIVATIONS imports raw activation statistics
for each FACENET neuron generated by program RAW_ACTIVATIONS.  For each
network layer, activations are reordered according to their stimulation
frequencies.  The new ordering for nodes is exported to an output text
file.

                        ./order_activations


*.  Program $caffe_root/RENORM_IMAGE_ACTIVATIONS imports extremal nonzero
activation values for each layer output by program RAW_ACTIVATIONS.  (The
minimum activation values are all very close to 0.)  It also imports
nonzero raw activation values for every Facenet node calculated for each
test image.  RENORM_IMAGE_ACTIVATIONS effectively rescales the raw
activation values to fractions ranging between 0 and 1.  It then assigns
hues and values based upon these fractions so that fractionally large
activations are colored bright and hot while fractionally small activations
are colored dim and cold.  The renormalized activation fractions and RGB
values are exported to a new set of text files for each test image.

                        ./renorm_image_activations


*.  Program $caffe_root/NETGRAPH imports a trained caffe model.  It first
generates a layout for the neural net's layers with rows of a rectangle.
Nodes within a layer are grouped together within subrows of the rectangle.
The layout is exported to a text file which can be ingested by program
mains/photosynth/fill_photo_hierarchy wtihin the IMAGESEARCH pipeline.
NETGRAPH next generates an edgelist file which can be ingested by program
mains/graphs/kmeans_clusters within the IMAGESEARCH pipeline.

  ./netgraph
   /data/caffe/faces/trained_models/test_160.prototxt                    
   /data/caffe/faces/trained_models/Aug6_350K_96cap_T3/train_iter_702426.caffemodel 


*.  Program $caffe_root/ADD_SOFTMAX is a highly specialized utility which
inserts male/female/non-face softmax classification probabilities into
cropped screenshots of Michael Yee's graph viewer displaying network nodes
colored according to their activations for a particular test image.  We
wrote ADD_SOFTMAX primarily for movie generation purposes.

                        ./add_softmax
